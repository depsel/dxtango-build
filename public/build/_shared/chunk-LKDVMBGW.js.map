{
  "version": 3,
  "sources": ["../../../src/code.client/hooks/useTangoList.tsx"],
  "sourcesContent": ["import { useDXTApiFetch } from '#/hooks/useDXTApiFetch';\nimport { SelectOptionsExtended } from '#/types';\n\ninterface FieldsMap {\n  value?: string;\n  label?: string;\n  isActive?: string;\n  isEnabled?: string;\n}\n\ninterface UseTangoListResult {\n  url: string;\n  fieldsMap?: FieldsMap;\n  disabledIcon?: React.ReactNode;\n  params?: Record<string, any>;\n}\n\ninterface BuildSelectOptionsProps extends Omit<UseTangoListResult, 'url'> {\n  data: Array<any>;\n}\n\nexport const buildSelectOptions = (props: BuildSelectOptionsProps) => {\n  const { data, fieldsMap, disabledIcon } = props;\n\n  const result: SelectOptionsExtended[] = [];\n\n  data.length &&\n    data.forEach((data) => {\n      result.push({\n        label: data[fieldsMap?.label ?? 'name'],\n        value: data[fieldsMap?.value ?? 'id'],\n\n        ...(fieldsMap?.isActive != null && {\n          isActive: data[fieldsMap.isActive],\n        }),\n\n        ...(fieldsMap?.isEnabled != null && {\n          isDisabled: !(data[fieldsMap.isEnabled] as boolean),\n        }),\n\n        ...(fieldsMap?.isEnabled != null &&\n          disabledIcon != null &&\n          !(data[fieldsMap?.isEnabled] as boolean) && {\n            icon: disabledIcon,\n          }),\n      });\n    });\n\n  return result;\n};\n\nexport function useTangoList<T = any>(props: UseTangoListResult) {\n  const { url, params, fieldsMap, disabledIcon } = props;\n\n  const { state, retry } = useDXTApiFetch<T>({\n    url,\n    silent: true,\n    params,\n  });\n\n  const result: SelectOptionsExtended[] = state.mapOrElse({\n    success: (state) => {\n      const data = state.data as Array<any>;\n\n      return buildSelectOptions({ data, fieldsMap, disabledIcon });\n    },\n    orElse: () => {\n      return [];\n    },\n  });\n\n  return { state, result };\n}\n"],
  "mappings": ";;;;;;;;AAAA;AAqBO,IAAM,qBAAqB,CAAC,UAAmC;AACpE,QAAM,EAAE,MAAM,WAAW,aAAa,IAAI;AAE1C,QAAM,SAAkC,CAAC;AAEzC,OAAK,UACH,KAAK,QAAQ,CAACA,UAAS;AACrB,WAAO,KAAK;AAAA,MACV,OAAOA,MAAK,WAAW,SAAS,MAAM;AAAA,MACtC,OAAOA,MAAK,WAAW,SAAS,IAAI;AAAA,MAEpC,GAAI,WAAW,YAAY,QAAQ;AAAA,QACjC,UAAUA,MAAK,UAAU,QAAQ;AAAA,MACnC;AAAA,MAEA,GAAI,WAAW,aAAa,QAAQ;AAAA,QAClC,YAAY,CAAEA,MAAK,UAAU,SAAS;AAAA,MACxC;AAAA,MAEA,GAAI,WAAW,aAAa,QAC1B,gBAAgB,QAChB,CAAEA,MAAK,WAAW,SAAS,KAAiB;AAAA,QAC1C,MAAM;AAAA,MACR;AAAA,IACJ,CAAC;AAAA,EACH,CAAC;AAEH,SAAO;AACT;AAEO,SAAS,aAAsB,OAA2B;AAC/D,QAAM,EAAE,KAAK,QAAQ,WAAW,aAAa,IAAI;AAEjD,QAAM,EAAE,OAAO,MAAM,IAAI,eAAkB;AAAA,IACzC;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,EACF,CAAC;AAED,QAAM,SAAkC,MAAM,UAAU;AAAA,IACtD,SAAS,CAACC,WAAU;AAClB,YAAM,OAAOA,OAAM;AAEnB,aAAO,mBAAmB,EAAE,MAAM,WAAW,aAAa,CAAC;AAAA,IAC7D;AAAA,IACA,QAAQ,MAAM;AACZ,aAAO,CAAC;AAAA,IACV;AAAA,EACF,CAAC;AAED,SAAO,EAAE,OAAO,OAAO;AACzB;",
  "names": ["data", "state"]
}
