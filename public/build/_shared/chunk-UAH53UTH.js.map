{
  "version": 3,
  "sources": ["../../../src/api-client/settings/paths.ts", "../../../src/api-client/settings/requests.ts", "../../../src/@core/value_objects/vo_tcp_port.ts", "../../../src/domain/settings/consts/index.ts"],
  "sourcesContent": ["import { apiPath } from \"../shared\";\n\nexport const API_SETTINGS_DB = apiPath( '/settings/db' );\nexport const API_SETTINGS_MISC = apiPath( '/settings/misc' );\n", "import { AppResources } from '#/app_resources/app_resources';\nimport { DBSettingsInput, MiscSettingsInput } from 'src/domain/settings/inputs';\nimport { DBSettingsResult, MiscSettingsResult } from 'src/domain/settings/results';\nimport { dxtApiRequest } from '../shared';\nimport { API_SETTINGS_DB, API_SETTINGS_MISC } from './paths';\n\nexport const settingsDBUpdateRequest = async (\n  input: DBSettingsInput,\n  app: AppResources\n) => {\n  return await dxtApiRequest<DBSettingsResult, DBSettingsInput>(\n    {\n      url: API_SETTINGS_DB,\n      data: input,\n      method: 'POST',\n      silent: true\n    },\n    app\n  );\n};\n\nexport const settingsMiscUpdateRequest = async (\n  input: MiscSettingsInput,\n  app: AppResources\n) => {\n  return await dxtApiRequest<MiscSettingsResult, MiscSettingsInput>(\n    {\n      url: API_SETTINGS_MISC,\n      data: input,\n      method: 'POST',\n      silent: true\n    },\n    app\n  );\n};", "import { isTCPPort } from '../validation/base';\nimport { type VOInput, ValueObject } from './base';\n\nexport class VOTCPPort extends ValueObject<number> {\n\n  validate(input: VOInput<number>): number {\n    let value = input;\n\n    if (typeof value === 'string') value = Number.parseInt(value);\n    \n    if (typeof value === 'number' && isTCPPort(value)) return value;\n    \n    this.throwError(input);\n  }\n}\n", "export const DB_CONNECTION_TIMEOUT_MIN_SECONDS = 0;\nexport const DB_CONNECTION_TIMEOUT_MAX_SECONDS = 300;\n\nexport const AUTH_EXPIRATION_MIN_DAYS = 1;\nexport const AUTH_EXPIRATION_MAX_DAYS = 365;\n"],
  "mappings": ";;;;;;;;;;;AAAA;AAEO,IAAM,kBAAkB,QAAS,cAAe;AAChD,IAAM,oBAAoB,QAAS,gBAAiB;;;ACH3D;AAMO,IAAM,0BAA0B,OACrC,OACA,QACG;AACH,SAAO,MAAM;AAAA,IACX;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,IACA;AAAA,EACF;AACF;AAEO,IAAM,4BAA4B,OACvC,OACA,QACG;AACH,SAAO,MAAM;AAAA,IACX;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,IACA;AAAA,EACF;AACF;;;AClCA;AAGO,IAAM,YAAN,cAAwB,YAAoB;AAAA,EAEjD,SAAS,OAAgC;AACvC,QAAI,QAAQ;AAEZ,QAAI,OAAO,UAAU;AAAU,cAAQ,OAAO,SAAS,KAAK;AAE5D,QAAI,OAAO,UAAU,YAAY,UAAU,KAAK;AAAG,aAAO;AAE1D,SAAK,WAAW,KAAK;AAAA,EACvB;AACF;;;ACdA;AAAO,IAAM,oCAAoC;AAC1C,IAAM,oCAAoC;AAE1C,IAAM,2BAA2B;AACjC,IAAM,2BAA2B;",
  "names": []
}
