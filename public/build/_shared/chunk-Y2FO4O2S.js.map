{
  "version": 3,
  "sources": ["../../../src/app/components/InlineError.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src/app/components/InlineError.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src/app/components/InlineError.tsx\");\n  import.meta.hot.lastModified = \"1708907589584.1802\";\n}\n// REMIX HMR END\n\nimport { Badge } from '@chakra-ui/react';\nexport const InlineError = ({\n  error\n}) => {\n  return <Badge colorScheme={'red'} sx={{\n    mt: 2,\n    p: 2,\n    whiteSpace: 'normal'\n  }}>\n      {error}\n    </Badge>;\n};\n_c = InlineError;\nvar _c;\n$RefreshReg$(_c, \"InlineError\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;AAwBS;AAvBT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAoC;AACpC,cAAY,IAAI,eAAe;AACjC;AAIO,IAAM,cAAc,CAAC;AAAA,EAC1B;AACF,MAAM;AACJ,SAAO,mDAAC,SAAM,aAAa,OAAO,IAAI;AAAA,IACpC,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,YAAY;AAAA,EACd,GACK,mBALE;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
