{
  "version": 3,
  "sources": ["../../../src/app/components/ApiErrors.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src/app/components/ApiErrors.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src/app/components/ApiErrors.tsx\");\n  import.meta.hot.lastModified = \"1708552390245.1768\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from '@remix-run/react';\nimport { Alert, AlertDescription, AlertIcon, AlertTitle, Box, Button, HStack } from '@chakra-ui/react';\nexport const ApiErrors = ({\n  error,\n  retry,\n  cancelAndNavigateTo\n}) => {\n  _s();\n  const navigate = useNavigate();\n  return <Box width={'full'} sx={{\n    mt: 6\n  }}>\n      <Alert status='error' variant='subtle' flexDirection='column' alignItems='center' justifyContent='center' textAlign='center' height='200px'>\n        <AlertIcon boxSize='40px' sx={{\n        mr: 0,\n        mb: 4\n      }} />\n        {!error.message_to_user ? <AlertDescription maxWidth='sm'>{error.error}</AlertDescription> : <>\n            <AlertTitle mt={4} mb={1} fontSize='lg'>\n              {error.message_to_user?.title}\n            </AlertTitle>\n            <AlertDescription maxWidth='sm'>\n              {error.message_to_user?.content}\n            </AlertDescription>\n          </>}\n        <HStack sx={{\n        mt: 4\n      }} spacing={4}>\n          {retry && <Button onClick={retry} colorScheme='green'>\n              Reintentar\n            </Button>}\n          {cancelAndNavigateTo != null && <Button onClick={() => {\n          navigate(cancelAndNavigateTo);\n        }} colorScheme='red'>\n              Cancelar\n            </Button>}\n        </HStack>\n      </Alert>\n    </Box>;\n};\n_s(ApiErrors, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ApiErrors;\nvar _c;\n$RefreshReg$(_c, \"ApiErrors\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAkCQ;AAjCR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,uCAAyC,EAAE;AAAA,EACpF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAkC;AAClC,cAAY,IAAI,eAAe;AACjC;AAKO,IAAM,YAAY,CAAC;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,KAAG;AACH,QAAM,WAAW,YAAY;AAC7B,SAAO,mDAAC,OAAI,OAAO,QAAQ,IAAI;AAAA,IAC7B,IAAI;AAAA,EACN,GACI,6DAAC,SAAM,QAAO,SAAQ,SAAQ,UAAS,eAAc,UAAS,YAAW,UAAS,gBAAe,UAAS,WAAU,UAAS,QAAO,SAClI;AAAA,uDAAC,aAAU,SAAQ,QAAO,IAAI;AAAA,MAC9B,IAAI;AAAA,MACJ,IAAI;AAAA,IACN,KAHE;AAAA;AAAA;AAAA;AAAA,WAGC;AAAA,IACA,CAAC,MAAM,kBAAkB,mDAAC,oBAAiB,UAAS,MAAM,gBAAM,SAAvC;AAAA;AAAA;AAAA;AAAA,WAA6C,IAAsB,sFACzF;AAAA,yDAAC,cAAW,IAAI,GAAG,IAAI,GAAG,UAAS,MAChC,gBAAM,iBAAiB,SAD1B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,oBAAiB,UAAS,MACxB,gBAAM,iBAAiB,WAD1B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SANyF;AAAA;AAAA;AAAA;AAAA,WAO3F;AAAA,IACF,mDAAC,UAAO,IAAI;AAAA,MACZ,IAAI;AAAA,IACN,GAAG,SAAS,GACP;AAAA,eAAS,mDAAC,UAAO,SAAS,OAAO,aAAY,SAAQ,0BAA5C;AAAA;AAAA;AAAA;AAAA,aAER;AAAA,MACD,uBAAuB,QAAQ,mDAAC,UAAO,SAAS,MAAM;AACvD,iBAAS,mBAAmB;AAAA,MAC9B,GAAG,aAAY,OAAM,wBAFa;AAAA;AAAA;AAAA;AAAA,aAI9B;AAAA,SAVJ;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,OAxBF;AAAA;AAAA;AAAA;AAAA,SAyBA,KA5BG;AAAA;AAAA;AAAA;AAAA,SA6BL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,WAAW;AACrB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
