{
  "version": 3,
  "sources": ["../../../src/@core/validate_schema/schema_validators.ts"],
  "sourcesContent": ["import { JsonValue } from '../json';\nimport { VOBoolean, VOInteger, VOJsonValue, VONotEmptyString, VONumber, VOString } from '../value_objects';\nimport { VOValidationFunction, ValidationFunction } from './validate_schema';\n\n\nexport const booleanValidator: VOValidationFunction<VOBoolean>\n= (v) => new VOBoolean(v).valueOf();\n\nexport const optionalBooleanValidator: ValidationFunction<boolean|undefined>\n= (v, def) => (v == null ? def : new VOBoolean(v).valueOf());\n\nexport const integerValidator: VOValidationFunction<VOInteger>\n= (v) => new VOInteger(v).valueOf();\n\nexport const optionalIntegerValidator: ValidationFunction<number|undefined>\n= (v, def) => v == null ? def : new VOInteger(v).valueOf();\n\nexport const numberValidator: VOValidationFunction<VONumber>\n= (v) => new VONumber(v).valueOf();\n\nexport const optionalNumberValidator: ValidationFunction<number|undefined>\n= (v, def) => v == null ? def : new VONumber(v).valueOf();\n\nexport const stringValidator: VOValidationFunction<VOString>\n= (v) => new VONotEmptyString(v).valueOf();\n\nexport const optionalStringValidator: ValidationFunction<string|undefined>\n= (v, def) => v == null ? def : new VOString(v).valueOf();\n\nexport const jsonValidator: VOValidationFunction<VOJsonValue>\n= (v) => new VOJsonValue(v).valueOf();\n\nexport const optionalJsonValidator: ValidationFunction<JsonValue|undefined>\n= (v, def) => v == null ? def : new VOJsonValue(v).valueOf();\n"],
  "mappings": ";;;;;;;;AAAA;AAWO,IAAM,mBACX,CAAC,MAAM,IAAI,UAAU,CAAC,EAAE,QAAQ;",
  "names": []
}
