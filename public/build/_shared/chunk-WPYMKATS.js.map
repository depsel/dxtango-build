{
  "version": 3,
  "sources": ["../../../src/app/components/SettingsFormButtons.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src/app/components/SettingsFormButtons.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src/app/components/SettingsFormButtons.tsx\");\n  import.meta.hot.lastModified = \"1711474084151.319\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from '@remix-run/react';\nimport { Button, Stack } from '@chakra-ui/react';\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nexport const SettingsFormsButtons = props => {\n  _s();\n  const {\n    isLoading,\n    buttonActionText,\n    buttonCancelUrl\n  } = props;\n  const navigate = useNavigate();\n  return <>\n      <Stack direction={{\n      base: 'column',\n      md: 'row'\n    }}>\n        <Button type='submit' colorScheme='blue' width={'full'} isLoading={isLoading}>\n          {buttonActionText ?? 'Actualizar'}\n        </Button>\n        <Button type='button' colorScheme='gray' width={'full'} isLoading={isLoading} onClick={() => navigate(buttonCancelUrl ?? URL_SETTINGS_PATH)}>\n          Cancelar\n        </Button>\n      </Stack>\n    </>;\n};\n_s(SettingsFormsButtons, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SettingsFormsButtons;\nvar _c;\n$RefreshReg$(_c, \"SettingsFormsButtons\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAgCS;AA/BT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iDAAmD,EAAE;AAAA,EAC9F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4C;AAC5C,cAAY,IAAI,eAAe;AACjC;AAMO,IAAM,uBAAuB,WAAS;AAC3C,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,WAAW,YAAY;AAC7B,SAAO,sFACH,6DAAC,SAAM,WAAW;AAAA,IAClB,MAAM;AAAA,IACN,IAAI;AAAA,EACN,GACI;AAAA,uDAAC,UAAO,MAAK,UAAS,aAAY,QAAO,OAAO,QAAQ,WACrD,8BAAoB,gBADvB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,UAAO,MAAK,UAAS,aAAY,QAAO,OAAO,QAAQ,WAAsB,SAAS,MAAM,SAAS,mBAAmB,iBAAiB,GAAG,wBAA7I;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OATF;AAAA;AAAA;AAAA;AAAA,SAUA,KAXG;AAAA;AAAA;AAAA;AAAA,SAYL;AACJ;AACA,GAAG,sBAAsB,gCAAgC,OAAO,WAAY;AAC1E,SAAO,CAAC,WAAW;AACrB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,sBAAsB;AAEvC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
