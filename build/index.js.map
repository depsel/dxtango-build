{
  "version": 3,
  "sources": ["empty-module:./PDFRenderer.client", "../src/app/entry.server.tsx", "../src/@core/http/utils.ts", "../src/@core/objects/index.ts", "../src/@core/json/index.ts", "../src/@depsel-nodejs/api-server/exceptions/HttpException.ts", "../src/@depsel-nodejs/api-server/exceptions/BadRequestException.ts", "../src/@depsel-nodejs/api-server/exceptions/NotImplementedException.ts", "../src/@depsel-nodejs/api-server/utils.ts", "../src/domain/shared/errors/base.ts", "../src/@core/http/http_status_messages.ts", "../src/@depsel-nodejs/api-server/ApiController.ts", "../src/@depsel-nodejs/api-server/ApiEndpoint.ts", "../src/@core/axios/axiosRequestPlus.ts", "../src/domain/shared/errors/errors.utils.ts", "../src/@core/strings/index.ts", "../src/@core/validation/errors.ts", "../src/api-universal/utils.ts", "../src/@core/environemnt/index.ts", "../src/@core/transformation/index.ts", "../src/@core/validation/base.ts", "../src/environment/index.ts", "../src/app/root.tsx", "css-bundle-plugin-ns:@remix-run/css-bundle", "../src/@core/value_objects/types.ts", "../src/@core/value_objects/base.ts", "../src/@core/value_objects/vo_not_empty_string.ts", "../src/@core/math/index.ts", "../src/@core/time/index.ts", "../src/@core/value_objects/vo_email_address.ts", "../src/@core/value_objects/vo_md5.ts", "../src/@core/value_objects/vo_uint16.ts", "../src/@core/value_objects/vo_uint32.ts", "../src/@core/value_objects/vo_sha1.ts", "../src/@core/value_objects/vo_tcp_port.ts", "../src/@core/value_objects/vo_host.ts", "../src/@core/value_objects/utils.ts", "../src/domain/auth/value_objects/vo_auth_random.ts", "../src/domain/auth/value_objects/vo_weak_check_auth_token.ts", "../src/code.client/auth/auth_context/auth_store.utils.ts", "../src/storage/index.ts", "../src/config/auth.ts", "../src/code.client/auth/auth_context/states/index.ts", "../src/code.client/auth/auth_context/actions/base.ts", "../src/code.client/app_resources/utils.ts", "../src/config/dxtango_api.ts", "../src/api-client/shared/DXTApiRequestState.ts", "../src/api-client/shared/dxtApiRequest.ts", "../src/api-client/shared/consts.ts", "../src/api-client/shared/apiPath.ts", "../src/api-client/auth/paths.ts", "../src/api-client/auth/requests.ts", "../src/code.client/auth/auth_context/actions/login.ts", "../src/code.client/utils/index.ts", "../src/texts/common.ts", "../src/config/url_paths.ts", "../src/code.client/auth/auth_context/actions/logout.ts", "../src/code.client/auth/auth_context/actions/change_token.ts", "../src/code.client/auth/utils.ts", "../src/code.client/auth/auth_context/actions/refresh_all.ts", "../src/code.client/auth/auth_context/auth_context.tsx", "../src/event_bus/index.ts", "../src/code.client/app_resources/basic_app_resources.ts", "../src/app/dialogs/RetryDialog.tsx", "../src/texts/dxt_error.ts", "../src/app/dialogs/CustomDialog.tsx", "../src/app/theme/index.ts", "../src/app/theme/components/input.ts", "../src/app/theme/components/table.ts", "../src/app/RootDocument.tsx", "../src/code.client/contexts/ServerStyleContext.tsx", "../src/app/routes/_admin.settings.users.customers.$id.edit/route.tsx", "../src/code.client/hooks/useDXTApiFetch.ts", "../src/@core/react-hooks/useAxiosFetch.ts", "../src/code.client/hooks/useTangoList.tsx", "../src/code.client/crud_configs/users/index.tsx", "../src/api-client/tango/paths.ts", "../src/api-client/dxt/user/paths.ts", "../src/api-client/dxt/user/requests.ts", "../src/@core/validate_schema/schema_validators.ts", "../src/@core/validate_schema/validate_schema.ts", "../src/app/components/CommonErrors.tsx", "../src/app/components/SettingsFormHeading.tsx", "../src/app/components/CommonCard.tsx", "../src/app/components/ApiErrors.tsx", "../src/app/routes/_admin.settings.users.customers.$id.edit/components/loading.tsx", "../src/app/components/form_elements/FormSkeletons.tsx", "../src/app/routes/_admin.settings.users.customers.$id.edit/components/success.tsx", "../src/code.client/app_resources/app_resources.ts", "../src/code.client/utils/promise_based_toast.ts", "../src/app/components/form_elements/ControlledInput.tsx", "../src/app/components/form_elements/ControlledRadio.tsx", "../src/app/components/form_elements/ControlledSelect.tsx", "../src/app/components/form_elements/ChakraReactSelectCustomMenuList.tsx", "../src/app/components/form_elements/ControlledSwitch.tsx", "../src/app/components/form_elements/FormErrors.tsx", "../src/app/components/InlineError.tsx", "../src/app/components/SettingsFormButtons.tsx", "../src/app/routes/_admin.settings.users.customers.$id.edit/validation.ts", "../src/yup/utils.ts", "../src/code.client/crud_configs/users/validation.ts", "../src/domain/shared/validation/validate_input.ts", "../src/domain/shared/validation/utils.ts", "../src/domain/shared/value_objects/vo_dxt_password.ts", "../src/domain/shared/value_objects/vo_strings.ts", "../src/app/routes/_admin.settings.users.customers.$id.edit/components/index.tsx", "../src/app/routes/_admin.settings.users.vendors.$id.edit/route.tsx", "../src/app/routes/_admin.settings.users.vendors.$id.edit/components/loading.tsx", "../src/app/routes/_admin.settings.users.vendors.$id.edit/components/success.tsx", "../src/app/routes/_admin.settings.users.vendors.$id.edit/validation.ts", "../src/app/routes/_admin.settings.users.vendors.$id.edit/components/index.tsx", "../src/app/routes/api.dxt.pedido.articulos.screen_list.ts", "../src/domain/user/types/index.ts", "../src/code.server/api/root.controller.ts", "../src/@depsel-nodejs/crypto/utils.ts", "../src/@depsel-nodejs/system/index.ts", "../src/code.server/api/auth/consts/index.ts", "../src/code.server/api/auth/value_objects/vo_auth_token.ts", "../src/domain/user/validation/index.ts", "../src/code.server/infrastucture/user/models/user_base.model.ts", "../src/code.server/infrastucture/dxt/models/dxt_cliente.model.ts", "../src/code.server/infrastucture/auxiliar/models/transporte.model.ts", "../src/code.server/infrastucture/auxiliar/models/vendedor.model.ts", "../src/code.server/infrastucture/auxiliar/models/cliente.model.ts", "../src/code.server/infrastucture/settings/settings.repository.ts", "../src/code.server/infrastucture/paths/index.ts", "../src/config/app.ts", "../src/@core/dto/index.ts", "../src/domain/db/validation/index.ts", "../src/domain/db/value_objects/vo_mssql_db_name.ts", "../src/code.server/infrastucture/auth/utils.ts", "../src/domain/auth/validation/index.ts", "../src/@core/entity/index.ts", "../src/domain/user/transformation/index.ts", "../src/domain/user/value_objects/vo_user_role.ts", "../src/domain/user/value_objects/vo_user_name.ts", "../src/domain/user/entities/user.ts", "../src/code.server/infrastucture/settings/consts/index.ts", "../src/code.server/infrastucture/settings/dtos/index.ts", "../src/domain/settings/events/index.ts", "../src/code.server/infrastucture/db/index.ts", "../src/code.server/infrastucture/dxt/models/dxt_vendedor.model.ts", "../src/domain/db/events/index.ts", "../src/code.server/infrastucture/cache/index.ts", "../src/code.server/infrastucture/dxt/pedido/models/dxt_pedido_articulo_print.model.ts", "../src/code.server/infrastucture/dxt/pedido/models/dxt_pedido_articulo.model.ts", "../src/code.server/infrastucture/dxt/pedido/models/dxt_pedido_articulo_screen.model.ts", "../src/code.server/infrastucture/dictionary/models/dataset.model.ts", "../src/code.server/infrastucture/auxiliar/models/alicuota.model.ts", "../src/code.server/infrastucture/auxiliar/models/asiento.model.ts", "../src/code.server/infrastucture/auxiliar/models/condicion.model.ts", "../src/code.server/infrastucture/auxiliar/models/deposito.model.ts", "../src/code.server/infrastucture/auxiliar/models/parametros.model.ts", "../src/code.server/infrastucture/auxiliar/models/perfil.model.ts", "../src/code.server/infrastucture/auxiliar/models/talonario.model.ts", "../src/code.server/infrastucture/pedido/models/pedido.model.ts", "../src/code.server/infrastucture/dictionary/models/campo.model.ts", "../src/code.server/infrastucture/dictionary/models/empresa.model.ts", "../src/domain/dictionary/entities/dataset.unsafe.ts", "../src/code.server/infrastucture/dictionary/dictionary.provider.ts", "../src/code.server/infrastucture/dictionary/dictionary.repository.ts", "../src/code.server/infrastucture/company/company_init.provider.ts", "../src/code.server/infrastucture/company/company.provider.ts", "../src/code.server/infrastucture/auxiliar/tango.provider.ts", "../src/code.server/infrastucture/auxiliar/utils.ts", "../src/code.server/infrastucture/dxt/dxt_user.repository.ts", "../src/code.server/infrastucture/dxt/dxt_cliente.repository.ts", "../src/code.server/infrastucture/dxt/dxt_vendedor.repository.ts", "../src/code.server/infrastucture/auth/auth_token.repository.ts", "../src/code.server/infrastucture/auth/workers/connect.worker.ts", "../src/code.server/infrastucture/auth/workers/login.worker.ts", "../src/code.server/infrastucture/auth/workers/change_password.worker.ts", "../src/code.server/infrastucture/auth/auth.service.ts", "../src/code.server/api/authenticated_root.controller.ts", "../src/code.server/api/admin_root.controller.ts", "../src/code.server/infrastucture/dxt/pedido/dxt_pedido_articulo.repository.ts", "../src/code.server/infrastucture/articulo/models/articulo.model.ts", "../src/domain/dxt/pedido/utils/index.ts", "../src/code.server/infrastucture/dxt/pedido/dxt_pedido_articulo_print.repository.ts", "../src/code.server/infrastucture/dxt/pedido/dxt_pedido_articulo_screen.repository.ts", "../src/domain/dxt/pedido/value_objects/VOPedidoArticuloRecords.ts", "../src/domain/dxt/pedido/input/index.ts", "../src/domain/shared/validate_schema/index.ts", "../src/code.server/api/dxt/pedido/endpoints/index.ts", "../src/app/routes/_admin.settings.users.customers.add/route.tsx", "../src/app/routes/_admin.settings.users.customers.add/components/success.tsx", "../src/app/routes/_admin.settings.users.customers.add/validation.ts", "../src/app/routes/_admin.settings.users.customers.add/components/index.tsx", "../src/app/routes/api.dxt.pedido.articulos.print_list.ts", "../src/app/routes/_admin.settings.users.$type._index/route.tsx", "../src/app/routes/_admin.settings.users.$type._index/components/loading.tsx", "../src/app/routes/_admin.settings.users.$type._index/components/success.tsx", "../src/code.client/hooks/useSearchField.ts", "../src/app/components/DeleteDialog.tsx", "../src/code.client/hooks/usePagination.ts", "../src/app/components/Pagination.tsx", "../src/app/components/SearchField.tsx", "../src/app/components/TextWordBreak.tsx", "../src/app/routes/_admin.settings.users.$type._index/components/index.tsx", "../src/app/routes/api.dxt.pedido.articulos.print_ids.ts", "../src/app/routes/_admin.settings.users.vendors.add/route.tsx", "../src/app/routes/_admin.settings.users.vendors.add/components/success.tsx", "../src/app/routes/_admin.settings.users.vendors.add/validation.ts", "../src/app/routes/_admin.settings.users.vendors.add/components/index.tsx", "../src/app/routes/_authorized.orders.$client.add/route.tsx", "../src/app/routes/_authorized.orders.$client.add/components/loading.tsx", "../src/app/routes/_authorized.orders.$client.add/components/success.tsx", "../src/fake_data/edit_order.data.ts", "../src/app/components/orders/OrdersAddNav.tsx", "../src/app/components/ResponsiveIconButton.tsx", "../src/app/routes/_authorized.orders.$client.add/validation.ts", "../src/app/routes/_authorized.orders.$client.add/components/OrderInfo.tsx", "../src/app/components/form_elements/ControlledTextarea.tsx", "../src/app/components/TextPrice.tsx", "../src/app/routes/_authorized.orders.$client.add/components/ProductsTable.tsx", "../src/app/routes/api.dictionary.active_company.ts", "../src/code.server/api/dictionary/endpoints/setActiveCompany.ts", "../src/app/routes/_admin.settings.lists.$type/route.tsx", "../src/api-client/dxt/pedido/paths.ts", "../src/api-client/dxt/pedido/requests.ts", "../src/code.client/crud_configs/lists.tsx", "../src/app/routes/_admin.settings.lists.$type/components/loading.tsx", "../src/app/routes/_admin.settings.lists.$type/components/success.tsx", "../src/app/routes/_admin.settings.lists.$type/validation.ts", "../src/app/routes/_admin.settings.lists.$type/components/index.tsx", "../src/app/routes/_authorized.change_password/route.tsx", "../src/app/routes/_authorized.orders._index/route.tsx", "../src/api-client/pedido/paths.ts", "../src/app/routes/_authorized.orders._index/components/loading.tsx", "../src/app/routes/_authorized.orders._index/components/success.tsx", "../src/app/components/orders/OrdersNav.tsx", "../src/app/components/orders/ClientsListModal.tsx", "../src/app/routes/_authorized.orders._index/components/PedidoList/index.tsx", "../src/app/components/BadgePedidosEstado.tsx", "../src/texts/pedidos.ts", "../src/domain/pedido/utils/index.ts", "../src/app/theme/pedidos/utils.ts", "../src/app/routes/_authorized.orders._index/components/PedidoList/RenglonesEmpty.tsx", "../src/app/routes/_authorized.orders._index/components/PedidoList/RenglonesError.tsx", "../src/app/routes/_authorized.orders._index/components/PedidoList/RenglonesLoading.tsx", "../src/app/routes/_authorized.orders._index/components/PedidoList/RenglonesPedido.tsx", "../src/domain/articulo/utils/index.ts", "../src/app/routes/api.dxt.vendedor.cliente.ts", "../src/code.server/api/validation/validators.ts", "../src/code.server/infrastucture/auxiliar/model_mappers/index.ts", "../src/code.server/infrastucture/auxiliar/base.repositories.ts", "../src/code.server/infrastucture/auxiliar/cliente.repository.ts", "../src/domain/dxt/inputs/user.ts", "../src/domain/dxt/inputs/cliente.ts", "../src/domain/dxt/inputs/vendedor.ts", "../src/domain/dxt/results/index.ts", "../src/code.server/api/dxt/endpoints/index.ts", "../src/app/routes/_admin.settings.company/route.tsx", "../src/app/routes/_admin.settings.company/components/success.tsx", "../src/api-client/company/paths.ts", "../src/api-client/company/requests.tsx", "../src/app/routes/_admin.settings.company/validation.ts", "../src/app/routes/_admin.settings.company/components/index.tsx", "../src/app/routes/_admin.settings._index/route.tsx", "../src/api-client/admin/paths.ts", "../src/app/routes/_admin.settings._index/components/loading.tsx", "../src/app/routes/_admin.settings._index/components/success.tsx", "../src/app/components/SettingsListButton.tsx", "../src/app/components/SettingsListItem.tsx", "../src/app/routes/_admin.settings._index/components/index.tsx", "../src/app/routes/_admin.settings.tango/route.tsx", "../src/api-client/settings/paths.ts", "../src/app/routes/_admin.settings.tango/components/loading.tsx", "../src/app/routes/_admin.settings.tango/components/success.tsx", "../src/api-client/settings/requests.ts", "../src/app/routes/_admin.settings.tango/validation.ts", "../src/app/routes/_admin.settings.tango/components/index.tsx", "../src/app/routes/_admin.settings.misc/route.tsx", "../src/app/routes/_admin.settings.misc/components/loading.tsx", "../src/app/routes/_admin.settings.misc/components/success.tsx", "../src/app/components/form_elements/ControlledCheckbox.tsx", "../src/app/routes/_admin.settings.misc/validation.ts", "../src/app/routes/_admin.settings.misc/components/index.tsx", "../src/app/routes/api.dxt.vendedor.$id.ts", "../src/app/routes/api.pedido.renglones.ts", "../src/code.server/infrastucture/pedido/models/renglon_pedido.model.ts", "../src/code.server/infrastucture/pedido/utils/index.ts", "../src/code.server/infrastucture/pedido/model_mappers/renglon_pedido.model_mapper.ts", "../src/code.server/infrastucture/pedido/renglon_pedido.repository.ts", "../src/code.server/api/pedido/services/getAllPedidosRows.ts", "../src/code.server/api/pedido/endpoints/getRows.ts", "../src/app/routes/api.tango.auxiliares.ts", "../src/code.server/api/company/utils.ts", "../src/code.server/api/tango/endpoints/index.ts", "../src/app/routes/api.dxt.cliente.$id.ts", "../src/app/routes/api.pedido.$id.edit.ts", "../src/app/routes/api.tango.vendedor.ts", "../src/app/routes/api.auth.password.ts", "../src/domain/auth/inputs/change_password.input.ts", "../src/code.server/api/auth/endpoints/change_password.ts", "../src/app/routes/api.pedido.create.ts", "../src/code.server/api/pedido/endpoints/create.ts", "../src/app/routes/api.settings.misc.ts", "../src/code.server/api/settings/endpoints/getMisc.ts", "../src/domain/settings/inputs/index.ts", "../src/code.server/api/settings/endpoints/updateMisc.ts", "../src/app/routes/api.tango.cliente.ts", "../src/app/routes/api.admin.status.ts", "../src/code.server/infrastucture/company/company.repository.ts", "../src/code.server/api/admin/endpoints/getStatus.ts", "../src/app/routes/api.auth.connect.ts", "../src/code.server/api/auth/utils/index.ts", "../src/code.server/api/auth/endpoints/connect.ts", "../src/app/routes/api.dxt.vendedor.ts", "../src/app/routes/api.tango.perfil.ts", "../src/app/routes/api.auth.logout.ts", "../src/code.server/api/auth/endpoints/logout.ts", "../src/app/routes/api.dxt.cliente.ts", "../src/app/routes/api.settings.db.ts", "../src/code.server/api/settings/endpoints/getDB.ts", "../src/code.server/api/settings/endpoints/updateDB.ts", "../src/app/routes/api.auth.login.ts", "../src/domain/auth/inputs/login_user.input.ts", "../src/code.server/api/auth/endpoints/login.ts", "../src/app/routes/api.dictionary.ts", "../src/code.server/api/dictionary/endpoints/getCompanies.ts", "../src/app/routes/_authorized/route.tsx", "../src/code.client/auth/AuthGuard.tsx", "../src/code.client/hooks/useHydrated.ts", "../src/app/components/ClientOnly.tsx", "../src/app/components/Navbar.tsx", "../src/app/components/ColorModeSelector.tsx", "../src/app/components/LogoImage.tsx", "../src/texts/users.ts", "../src/domain/user/utils/index.ts", "../src/app/routes/api.pedido.tsx", "../src/code.server/infrastucture/pedido/model_mappers/pedido.model_mapper.ts", "../src/code.server/infrastucture/pedido/pedido.repository.ts", "../src/code.server/api/pedido/services/getAllPedidos.ts", "../src/code.server/api/pedido/endpoints/getAll.ts", "../src/app/routes/_admin/route.tsx", "../src/app/routes/_index/route.tsx", "../src/texts/app.ts", "../src/app/routes/pdf/route.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["module.exports = {};", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\nimport 'dotenv/config';\n\nimport type { EntryContext } from '@remix-run/node';\nimport { createReadableStreamFromReadable } from '@remix-run/node';\nimport { RemixServer } from '@remix-run/react';\n\nimport createEmotionCache from '@emotion/cache';\nimport { CacheProvider as EmotionCacheProvider } from '@emotion/react';\nimport createEmotionServer from '@emotion/server/create-instance';\nimport { PassThrough } from 'node:stream';\nimport { renderToPipeableStream } from 'react-dom/server';\nimport { notFoundApiResponse } from 'src/api-universal/utils';\nimport { getExecutionModeString } from 'src/environment';\n\nconst ABORT_DELAY = 5_000;\n\nexport default async function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  if (new URL(request.url).pathname.startsWith('/api/')) {\n    return await notFoundApiResponse();\n  }\n\n  return await handleBrowserRequest(\n    request,\n    responseStatusCode,\n    responseHeaders,\n    remixContext\n  );\n\n  // return isbot(request.headers.get('user-agent') || '')\n  //   ? await handleBotRequest(\n  //       request,\n  //       responseStatusCode,\n  //       responseHeaders,\n  //       remixContext\n  //     )\n  //   : await handleBrowserRequest(\n  //       request,\n  //       responseStatusCode,\n  //       responseHeaders,\n  //       remixContext\n  //     );\n}\n\nasync function handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return await new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const emotionCache = createEmotionCache({ key: 'css' });\n\n    const { pipe, abort } = renderToPipeableStream(\n      <EmotionCacheProvider value={emotionCache}>\n        <RemixServer\n          context={remixContext}\n          url={request.url}\n          abortDelay={ABORT_DELAY}\n        />\n        <div dangerouslySetInnerHTML={{ __html: getEnvScript() }}></div>\n      </EmotionCacheProvider>,\n      {\n        onShellReady() {\n          shellRendered = true;\n\n          const body = new PassThrough();\n          const emotionServer = createEmotionServer(emotionCache);\n\n          const bodyWithStyles = emotionServer.renderStylesToNodeStream();\n          body.pipe(bodyWithStyles);\n\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set('Content-Type', 'text/html');\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction getEnvScript(): string {\n  const executionMode = getExecutionModeString();\n\n  return `<script>window.dxTangoExecutionMode=\"${executionMode}\"</script>`;\n}\n\n// async function handleBotRequest(\n//   request: Request,\n//   responseStatusCode: number,\n//   responseHeaders: Headers,\n//   remixContext: EntryContext\n// ) {\n//   return await new Promise((resolve, reject) => {\n//     let shellRendered = false;\n//     const emotionCache = createEmotionCache({ key: 'css' });\n\n//     const { pipe, abort } = renderToPipeableStream(\n//       <EmotionCacheProvider value={emotionCache}>\n//         <RemixServer\n//           context={remixContext}\n//           url={request.url}\n//           abortDelay={ABORT_DELAY}\n//         />\n//       </EmotionCacheProvider>,\n//       {\n//         onAllReady() {\n//           shellRendered = true;\n//           const body = new PassThrough();\n//           const emotionServer = createEmotionServer(emotionCache);\n\n//           const bodyWithStyles = emotionServer.renderStylesToNodeStream();\n//           body.pipe(bodyWithStyles);\n\n//           const stream = createReadableStreamFromReadable(body);\n\n//           responseHeaders.set('Content-Type', 'text/html');\n\n//           resolve(\n//             new Response(stream, {\n//               headers: responseHeaders,\n//               status: responseStatusCode,\n//             })\n//           );\n\n//           pipe(body);\n//         },\n//         onShellError(error: unknown) {\n//           reject(error);\n//         },\n//         onError(error: unknown) {\n//           responseStatusCode = 500;\n//           // Log streaming rendering errors from inside the shell.  Don't log\n//           // errors encountered during initial shell rendering since they'll\n//           // reject and get logged in handleDocumentRequest.\n//           if (shellRendered) {\n//             console.error(error);\n//           }\n//         },\n//       }\n//     );\n\n//     setTimeout(abort, ABORT_DELAY);\n//   });\n// }\n", "export const HTTP_STATUS_INFORMATION_MIN = 100;\nexport const HTTP_STATUS_INFORMATION_MAX = 199;\n\nexport const HTTP_STATUS_SUCCESS_MIN = 200;\nexport const HTTP_STATUS_SUCCESS_MAX = 299;\n\nexport const HTTP_STATUS_REDIRECT_MIN = 300;\nexport const HTTP_STATUS_REDIRECT_MAX = 399;\n\nexport const HTTP_STATUS_CLIENT_ERROR_MIN = 400;\nexport const HTTP_STATUS_CLIENT_ERROR_MAX = 499;\n\nexport const HTTP_STATUS_SERVER_ERROR_MIN = 500;\nexport const HTTP_STATUS_SERVER_ERROR_MAX = 599;\n\nexport function isHttpInformationStatus(status: number): boolean {\n  return (\n    status >= HTTP_STATUS_INFORMATION_MIN &&\n    status <= HTTP_STATUS_INFORMATION_MAX\n  );\n}\n\nexport function isHttpSuccessStatus(status: number): boolean {\n  return status >= HTTP_STATUS_SUCCESS_MIN && status <= HTTP_STATUS_SUCCESS_MAX;\n}\n\nexport function isHttpRedirectStatus(status: number): boolean {\n  return (\n    status >= HTTP_STATUS_REDIRECT_MIN && status <= HTTP_STATUS_REDIRECT_MAX\n  );\n}\n\nexport function isHttpClientError(status: number): boolean {\n  return (\n    status >= HTTP_STATUS_CLIENT_ERROR_MIN &&\n    status <= HTTP_STATUS_CLIENT_ERROR_MAX\n  );\n}\n\nexport function isHttpServerError(status: number): boolean {\n  return (\n    status >= HTTP_STATUS_SERVER_ERROR_MIN &&\n    status <= HTTP_STATUS_SERVER_ERROR_MAX\n  );\n}\n\nexport function isHttpError(status: number): boolean {\n  return isHttpClientError(status) || isHttpServerError(status);\n}\n", "export function isRealObject(value: unknown): value is Record<string, any> {\n  return (\n    typeof value === 'object' && !Array.isArray(value) && value !== null\n  );\n}\n\n\nexport function isObj(value: unknown): value is Record<string, any> {\n  return (\n    typeof value === 'object' && !Array.isArray(value) && value !== null\n  );\n}", "import { isRealObject } from \"../objects\";\n\nexport type JsonObject = { [Key in string]?: JsonValue };\nexport interface JsonArray extends Array<JsonValue> {}\nexport type JsonValue =\n  | string\n  | number\n  | boolean\n  | JsonObject\n  | JsonArray\n  | null;\n\n\nlet _jsonPolyfillsInitialized = false;\nexport function jsonPolyfills(): void {\n  if (_jsonPolyfillsInitialized) return;\n  (BigInt as any).prototype.toJSON = function () {\n    return this.toString();\n  };\n  _jsonPolyfillsInitialized = true;\n}\n\njsonPolyfills();\n\nfunction isArray(x: any): boolean {\n  return Array.isArray(x);\n}\n\nfunction isString(x: any): boolean {\n  return typeof x === 'string';\n}\n\nfunction isBufferLike(x: any): boolean {\n  return (\n    isRealObject(x) && x.type === 'Buffer' && (isArray(x.data) || isString(x.data))\n  );\n}\n\nexport function stringifyJSON(\n  value: any,\n  replacer?: (this: any, key: string, value: any) => any,\n  space?: string | number\n): string {\n  return JSON.stringify(value, replacer, space);\n}\n\nexport function parseJSON(\n  text: string,\n  reviver?: (this: any, key: string, value: any) => any\n): any {\n  return JSON.parse(text, reviver);\n}\n\nexport function enhancedStringifyJSON(\n  value: any,\n  space?: string | number\n): string {\n  return EnhancedJSON.stringify(value, space);\n}\n\nexport function enhancedParseJSON(text: string): any {\n  return EnhancedJSON.parse(text);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class EnhancedJSON {\n\n  static replacer(key: string, value: any): string {\n    if (!isBufferLike(value)) return value;\n\n    if (!isArray(value.data)) return value;\n\n    if (value?.data?.length > 0) {\n      value.data = 'base64:' + Buffer.from(value.data as ArrayBuffer).toString('base64');\n    } else {\n      value.data = '';\n    }\n\n    return value;\n  }\n\n  static reviver(key: string, value: any): Buffer {\n    if (!isBufferLike(value)) return value;\n\n    if (isArray(value.data)) return Buffer.from(value.data as ArrayBuffer);\n\n    if (!isString(value.data)) return value;\n\n    if ((value.data as string).startsWith('base64:')) {\n      return Buffer.from(value.data.slice('base64:'.length) as string, 'base64');\n    }\n\n    // Assume that the string is UTF-8 encoded (or empty).\n    return Buffer.from(value.data as string);\n  }\n\n  static stringify(value: any, space?: string | number): string {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    return JSON.stringify(value, EnhancedJSON.replacer, space);\n  }\n\n  static parse(text: string): any {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    return JSON.parse(text, EnhancedJSON.reviver);\n  }\n}\n", "/** Defines the base HTTP exception. */\nexport class HttpException extends Error {\n  public override name: string = 'HttpException';\n\n  /**\n   * Instantiates an `HttpException` Exception.\n   *\n   * @param statusCode HTTP status code\n   * @param message Error message\n   *\n   * @example\n   * `throw new HttpException(403, 'Forbidden')`\n   */\n  public constructor(\n    readonly statusCode: number,\n    message?: string,\n  ) {\n    super(message);\n  }\n}\n", "import { HttpStatus } from '@core/http';\nimport { HttpException } from './HttpException';\n\nexport class BadRequestException extends HttpException {\n  public override name = 'BadRequestException';\n\n  /**\n   * Instantiates a `BadRequestException` Exception with status code 400.\n   *\n   * @param message Error message (default: 'Bad Request')\n   *\n   * @example\n   * `throw new BadRequestException()`\n   */\n  public constructor(\n    message: string = 'Bad Request',\n  ) {\n    super(HttpStatus.BAD_REQUEST, message);\n  }\n}\n", "import { HttpStatus } from '@core/http';\n\nimport { HttpException } from './HttpException';\n\nexport class NotImplementedException extends HttpException {\n  public override name = 'NotImplementedException';\n\n  public constructor(\n    message: string = 'Not implemented',\n  ) {\n    super(HttpStatus.NOT_IMPLEMENTED, message);\n  }\n}\n", "import { HttpStatus } from '@core/http';\nimport { stringifyJSON } from '@core/json';\nimport { type ApiErrorResponse } from '@core/api-universal';\n\nimport { type ApiRequestMethod, type ApiResponse } from './types';\nimport { HttpException } from './exceptions';\n\n\nexport function jsonResponse<T=any, E=any>(\n  body: T|E,\n  init?: ResponseInit | undefined\n): ApiResponse<T, E> {\n  const status = init?.status ?? HttpStatus.OK;\n\n  const response: ApiResponse<T> = (new Response(stringifyJSON(body), init)) as ApiResponse<T>;\n\n  if (response.ok) {\n    response.okBodyObject = body as T;\n  } else {\n    response.errorBodyObject = body as E;\n  }\n\n  return response;\n}\n\n\nexport function defaultErrorResolver(e: any): ApiResponse<never, ApiErrorResponse> {\n  if (e instanceof HttpException) {\n    const status = e.statusCode;\n    return jsonResponse<never, ApiErrorResponse>(\n      {\n        status,\n        error: e.message,\n      },\n      { status }\n    );\n  }\n\n  const status = HttpStatus.INTERNAL_SERVER_ERROR;\n  return jsonResponse<never, ApiErrorResponse>(\n    {\n      status,\n      error: e?.message ?? 'Unknown API error',\n    },\n    { status }\n  );\n}\n\n\nexport function getDefaultHttpStatusFromMethod(method?: ApiRequestMethod): number {\n  if (!method) return HttpStatus.OK;\n\n  switch (method) {\n    case 'POST': return HttpStatus.CREATED;\n  }\n\n  return HttpStatus.OK;\n}", "import { type ApiErrorResponse } from '@/api-universal';\nimport { HttpStatus, isHttpServerError } from '@/http';\nimport { SystemMessageToUser } from '../types';\n\nexport const HTTP_STATUS_UNAVAILABLE: number = -1;\n\nexport enum DXTErrorCode {\n  UNEXPECTED_ERROR = 0,\n\n  // Expected errors (10000 to 499000)\n  BAD_REQUEST = 10 * 1000,\n  INVALID_PARAMETER = BAD_REQUEST + 1,\n  INSUFFICIENT_PARAMS = BAD_REQUEST + 2,\n\n  NOT_FOUND = 11 * 1000,\n  DXT_CUSTOMER_NOT_FOUND = NOT_FOUND + 1,\n  DXT_VENDOR_NOT_FOUND = NOT_FOUND + 2,\n\n  NOT_IMPLEMENTED = 12 * 1000,\n  TOO_MANY_REQUESTS = 13 * 1000,\n\n  CONFLICT = 14 * 1000,\n  DUPLICATED_TABLE_RECORD = CONFLICT + 1,\n\n  PAYLOAD_TOO_LARGE = 15 * 1000,\n  UNPROCESSABLE_ENTITY = 16 * 1000,\n\n  UNAUTHORIZED = 100 * 1000,\n  INVALID_USERNAME_OR_PASSWORD = UNAUTHORIZED + 1,\n  INVALID_AUTH_TOKEN           = UNAUTHORIZED + 2,\n  EXPIRED_AUTH_TOKEN           = UNAUTHORIZED + 3,\n  MISSING_AUTH_TOKEN         = UNAUTHORIZED + 4,\n  DXT_USER_DISABLED            = UNAUTHORIZED + 5,\n  TANGO_USER_DISABLED          = UNAUTHORIZED + 6,\n\n  FORBIDDEN = 101 * 1000,\n  CUSTOMER_ROLE_REQUIRED = FORBIDDEN + 1,\n  SELLER_ROLE_REQUIRED = FORBIDDEN + 2,\n  ADMIN_ROLE_REQUIRED = FORBIDDEN + 3,\n  INSUFFICIENT_PRIVILEGES = FORBIDDEN + 4,\n\n  TANGO_ERROR = 200 * 1000,\n  TANGO_DB_ACCESS_ERROR                  = TANGO_ERROR + 1,\n  TANGO_DB_INVALID_DATA                  = TANGO_ERROR + 2,\n  TANGO_DICTIONARY_ACCESS_ERROR          = TANGO_ERROR + 3,\n  TANGO_DICTIONARY_INITIALIZATION_ERROR  = TANGO_ERROR + 4,\n  TANGO_COMPANY_NOT_SELECTED             = TANGO_ERROR + 5,\n  TANGO_COMPANY_NOT_LISTED_IN_DICTIONARY = TANGO_ERROR + 6,\n  TANGO_COMPANY_ACCESS_ERROR             = TANGO_ERROR + 7,\n  TANGO_COMPANY_INITIALIZATION_ERROR     = TANGO_ERROR + 8,\n  TANGO_CUSTOMER_NO_LONGER_EXISTS        = TANGO_ERROR + 9,\n  TANGO_VENDOR_NO_LONGER_EXISTS          = TANGO_ERROR + 10,\n\n  // Unexpected errors (500000 to 999000)\n  CLIENT_CONNECTION_ERROR = 700 * 1000,\n\n  INTERNAL_CLIENT_ERROR = 799 * 1000,\n\n  SERVER_BUSY = 800 * 1000,\n\n  INTERNAL_SERVER_ERROR = 899 * 1000,\n  \n  FATAL_MALFORMED_SERVER_RESPONSE = DXTErrorCode.INTERNAL_SERVER_ERROR + 1,\n  FATAL_DB_QUERY_FAILED = DXTErrorCode.INTERNAL_SERVER_ERROR + 100,\n  FATAL_UNKNOWN_DB_ERROR = DXTErrorCode.INTERNAL_SERVER_ERROR + 103,\n\n  FATAL_SERVER_INITIALIZATION_ERROR = DXTErrorCode.INTERNAL_SERVER_ERROR + 104,\n  FATAL_CLIENT_INITIALIZATION_ERROR = DXTErrorCode.INTERNAL_SERVER_ERROR + 105,\n}\n\n\nconst _API_ERROR_MESSAGES = new Map<DXTErrorCode, string>([\n  [DXTErrorCode.UNEXPECTED_ERROR, 'Error inesperado'],\n\n  [DXTErrorCode.BAD_REQUEST, 'Petici\u00F3n incorrecta'],\n  [DXTErrorCode.INVALID_PARAMETER, 'Par\u00E1metro inv\u00E1lido'],\n  [DXTErrorCode.INSUFFICIENT_PARAMS, 'Par\u00E1metros insuficientes'],\n\n  [DXTErrorCode.NOT_FOUND, 'No encontrado'],\n  [DXTErrorCode.DXT_CUSTOMER_NOT_FOUND, 'Cliente DXTango ya no existe'],\n  [DXTErrorCode.DXT_VENDOR_NOT_FOUND, 'Vendedor DXTango ya no existe'],\n\n  [DXTErrorCode.NOT_IMPLEMENTED, 'Acci\u00F3n no implementada'],\n  [DXTErrorCode.TOO_MANY_REQUESTS, 'Demasiadas peticiones'],\n  \n  [DXTErrorCode.CONFLICT, 'Conflicto'],\n  [DXTErrorCode.DUPLICATED_TABLE_RECORD, 'Ya existe un registro con los datos que intenta ingresar'],\n  [DXTErrorCode.PAYLOAD_TOO_LARGE, 'Paquete de datos demasiado grande'],\n  [DXTErrorCode.UNPROCESSABLE_ENTITY, 'Entidad no procesable'],\n\n  [DXTErrorCode.UNAUTHORIZED, 'No autorizado'],\n  [DXTErrorCode.INVALID_USERNAME_OR_PASSWORD, 'Usuario o contrase\u00F1a incorrectos'],\n  [DXTErrorCode.INVALID_AUTH_TOKEN, 'Token de autorizaci\u00F3n no v\u00E1lido'],\n  [DXTErrorCode.EXPIRED_AUTH_TOKEN, 'Token de autorizaci\u00F3n caducado'],\n  [DXTErrorCode.MISSING_AUTH_TOKEN, 'Falta token de autorizaci\u00F3n'],\n  [DXTErrorCode.DXT_USER_DISABLED, `El usuario est\u00E1 inhabilitado en nuestro sistema`],\n  [DXTErrorCode.TANGO_USER_DISABLED, `El usuario est\u00E1 inhabilitado en TANGO`],\n\n  [DXTErrorCode.FORBIDDEN, 'Acceso prohibido'],\n  [DXTErrorCode.CUSTOMER_ROLE_REQUIRED, 'Acceso solo para clientes'],\n  [DXTErrorCode.SELLER_ROLE_REQUIRED, 'Acceso solo para vendedores'],\n  [DXTErrorCode.ADMIN_ROLE_REQUIRED, 'Acceso solo para administradores'],\n  [DXTErrorCode.INSUFFICIENT_PRIVILEGES, 'Permisos insuficientes'],\n\n  [DXTErrorCode.TANGO_ERROR, 'Error de acceso a Tango'],\n  [DXTErrorCode.TANGO_DB_ACCESS_ERROR, 'Error de acceso a base de datos de Tango'],\n  [DXTErrorCode.TANGO_DB_INVALID_DATA, 'La informaci\u00F3n en la base de datos de Tango es inconsistente'],\n  [DXTErrorCode.TANGO_DICTIONARY_ACCESS_ERROR, 'La DB del diccionario no existe o fall\u00F3 la conexi\u00F3n'],\n  [DXTErrorCode.TANGO_DICTIONARY_INITIALIZATION_ERROR, 'Error al inicializar diccionario'],\n  [DXTErrorCode.TANGO_COMPANY_NOT_SELECTED, 'Empresa no seleccionada'],\n  [DXTErrorCode.TANGO_COMPANY_NOT_LISTED_IN_DICTIONARY, 'Empresa no listada en diccionario'],\n  [DXTErrorCode.TANGO_COMPANY_ACCESS_ERROR, 'La DB de la Empresa no existe o fall\u00F3 la conexi\u00F3n'],\n  [DXTErrorCode.TANGO_COMPANY_INITIALIZATION_ERROR, 'Error al inicializar empresa'],\n  [DXTErrorCode.TANGO_CUSTOMER_NO_LONGER_EXISTS, 'El cliente ya no existe en Tango'],\n  [DXTErrorCode.TANGO_VENDOR_NO_LONGER_EXISTS, 'El vendedor ya no existe en Tango'],\n\n  [DXTErrorCode.CLIENT_CONNECTION_ERROR, 'No hay acceso a internet. Por favor verifique su conexi\u00F3n'],\n  [DXTErrorCode.INTERNAL_CLIENT_ERROR, 'Error desconocido del navegador'],\n\n  [DXTErrorCode.SERVER_BUSY, 'Servidor ocupado'],\n\n  [DXTErrorCode.INTERNAL_SERVER_ERROR, 'Error interno del servidor'],\n  [DXTErrorCode.FATAL_MALFORMED_SERVER_RESPONSE, 'Error cr\u00EDtico. Datos del servidor con formato inv\u00E1lido'],\n  [DXTErrorCode.FATAL_DB_QUERY_FAILED, 'Error cr\u00EDtico. Fallo en consulta a base de datos'],\n  [DXTErrorCode.FATAL_UNKNOWN_DB_ERROR, 'Error cr\u00EDtico. Fallo desconocido en base de datos'],\n\n  [DXTErrorCode.FATAL_CLIENT_INITIALIZATION_ERROR, 'Error cr\u00EDtico. Fallo al inicializar el cliente'],\n  [DXTErrorCode.FATAL_SERVER_INITIALIZATION_ERROR, 'Error cr\u00EDtico. Fallo al inicializar el servidor'],\n]);\n\nconst _HTTP_STATUS_TO_API_ERRORS = new Map<HttpStatus, DXTErrorCode>([\n  [HttpStatus.BAD_REQUEST, DXTErrorCode.BAD_REQUEST],\n  [HttpStatus.NOT_FOUND, DXTErrorCode.NOT_FOUND],\n  [HttpStatus.NOT_IMPLEMENTED, DXTErrorCode.NOT_IMPLEMENTED],\n  [HttpStatus.CONFLICT, DXTErrorCode.CONFLICT],\n  [HttpStatus.PAYLOAD_TOO_LARGE, DXTErrorCode.PAYLOAD_TOO_LARGE],\n  [HttpStatus.UNPROCESSABLE_ENTITY, DXTErrorCode.UNPROCESSABLE_ENTITY],\n\n  [HttpStatus.UNAUTHORIZED, DXTErrorCode.UNAUTHORIZED],\n  [HttpStatus.FORBIDDEN, DXTErrorCode.FORBIDDEN],\n\n  [HttpStatus.INTERNAL_SERVER_ERROR, DXTErrorCode.INTERNAL_SERVER_ERROR],\n]);\n\nconst _API_ERROR_HTTP_STATUS = new Map<DXTErrorCode, number>([\n  [DXTErrorCode.BAD_REQUEST, HttpStatus.BAD_REQUEST],\n\n  [DXTErrorCode.NOT_FOUND, HttpStatus.NOT_FOUND],\n  [DXTErrorCode.NOT_IMPLEMENTED, HttpStatus.NOT_IMPLEMENTED],\n  [DXTErrorCode.TOO_MANY_REQUESTS, HttpStatus.TOO_MANY_REQUESTS],\n  [DXTErrorCode.CONFLICT, HttpStatus.CONFLICT],\n  [DXTErrorCode.PAYLOAD_TOO_LARGE, HttpStatus.PAYLOAD_TOO_LARGE],\n  [DXTErrorCode.UNPROCESSABLE_ENTITY, HttpStatus.UNPROCESSABLE_ENTITY],\n\n  [DXTErrorCode.UNAUTHORIZED, HttpStatus.UNAUTHORIZED],\n\n  [DXTErrorCode.FORBIDDEN, HttpStatus.FORBIDDEN],\n\n  [DXTErrorCode.TANGO_ERROR, HttpStatus.SERVICE_UNAVAILABLE],\n  [DXTErrorCode.TANGO_DB_ACCESS_ERROR, HttpStatus.SERVICE_UNAVAILABLE],\n  [DXTErrorCode.TANGO_DB_INVALID_DATA, HttpStatus.INTERNAL_SERVER_ERROR],\n  [DXTErrorCode.TANGO_DICTIONARY_ACCESS_ERROR, HttpStatus.INTERNAL_SERVER_ERROR],\n  [DXTErrorCode.TANGO_DICTIONARY_INITIALIZATION_ERROR, HttpStatus.INTERNAL_SERVER_ERROR],\n  [DXTErrorCode.TANGO_COMPANY_NOT_LISTED_IN_DICTIONARY, HttpStatus.INTERNAL_SERVER_ERROR],\n  [DXTErrorCode.TANGO_COMPANY_ACCESS_ERROR, HttpStatus.INTERNAL_SERVER_ERROR],\n  [DXTErrorCode.TANGO_COMPANY_INITIALIZATION_ERROR, HttpStatus.INTERNAL_SERVER_ERROR],\n  \n  // Unexpected errors (500000 to 999000)\n  [DXTErrorCode.CLIENT_CONNECTION_ERROR, HTTP_STATUS_UNAVAILABLE],\n  [DXTErrorCode.INTERNAL_CLIENT_ERROR, HTTP_STATUS_UNAVAILABLE],\n\n  [DXTErrorCode.SERVER_BUSY, HttpStatus.SERVICE_UNAVAILABLE],\n\n  [DXTErrorCode.INTERNAL_SERVER_ERROR, HttpStatus.INTERNAL_SERVER_ERROR],\n]);\n\n\nconst _ERRORS_REQUIRING_CONTACTING_ADMIN: DXTErrorCode[] = [\n  DXTErrorCode.UNEXPECTED_ERROR,\n  DXTErrorCode.NOT_IMPLEMENTED,\n  DXTErrorCode.PAYLOAD_TOO_LARGE,\n  DXTErrorCode.UNPROCESSABLE_ENTITY,\n  DXTErrorCode.TANGO_ERROR,\n  DXTErrorCode.INTERNAL_SERVER_ERROR,\n];\n\n\nexport interface DXTErrorInfoBase {\n  readonly errorCode: number;\n}\n\nexport interface DXTErrorInfo extends DXTErrorInfoBase, ApiErrorResponse {\n  status: number;\n  error: string;\n  extra?: string;\n  isSilent?: boolean;\n  message_to_user?: SystemMessageToUser;\n}\n\nexport function getGenericErrorCode(errorCode: number) {\n  return errorCode - (errorCode % 1000);\n}\n\nexport function getDXTErrorDescription(errorCode: number): string {\n  return _API_ERROR_MESSAGES.get(errorCode)?.toString() ?? errorCode.toString();\n}\n\nexport function getHttpStatusFromErrorCode(errorCode: number): number {\n  const generalErrorCode = getGenericErrorCode(errorCode);\n  return _API_ERROR_HTTP_STATUS.get(generalErrorCode) ?? HttpStatus.INTERNAL_SERVER_ERROR;\n}\n\nexport function getErrorCodeFromHttpStatus(status: number): number {\n  return _HTTP_STATUS_TO_API_ERRORS.get(status) ?? DXTErrorCode.UNEXPECTED_ERROR;\n}\n\nexport function requiresContactingAdmin(errorCode: number): boolean {\n  return (\n    _ERRORS_REQUIRING_CONTACTING_ADMIN.includes(errorCode)\n    ||\n    _ERRORS_REQUIRING_CONTACTING_ADMIN.includes(getGenericErrorCode(errorCode))\n  );\n}\n\n\nexport class DXTError implements DXTErrorInfo {\n  readonly status: number;\n  readonly error: string;\n  readonly genericErrorCode: number;\n  readonly extra?: string;\n  readonly isSilent?: boolean;\n  readonly messageToUser?: SystemMessageToUser;\n\n  constructor(\n    public readonly errorCode: number,\n    options?: {\n      isSilent?: boolean;\n      extra?: string;\n      messageToUser?: SystemMessageToUser\n    }\n  ) {\n    this.genericErrorCode = getGenericErrorCode(errorCode);\n    this.error = getDXTErrorDescription(errorCode);\n    this.status = getHttpStatusFromErrorCode(this.errorCode);\n    this.extra = options?.extra;\n    this.isSilent = options?.isSilent;\n    this.messageToUser = options?.messageToUser;\n  }\n}\n\nexport class DXTApiMalformedResponse extends Error {\n  constructor(readonly status: number) {\n    super();\n  }\n}\n\nexport class DXTException extends Error {\n  readonly dxtError: DXTError;\n\n  constructor(error: DXTError | number, customMessage?: string) {\n    const dxtError = error instanceof DXTError ? error : new DXTError(error, { extra: customMessage });\n    super(dxtError.error);\n    this.name = this.constructor.name.toString();\n    this.dxtError = dxtError;\n  }\n\n  isUnexpected(): boolean {\n    return isHttpServerError(this.dxtError.status);\n  }\n}\n", "import { HttpStatus } from \"./http_status\";\n\n\nexport function getMessageFromHttpStatus(status: number): string {\n  return _httpStatusMessagesEnglish.get(status) ?? _httpStatusMessagesEnglish.get(HttpStatus.INTERNAL_SERVER_ERROR) ?? \"Error\";\n}\n\nconst _httpStatusMessagesEnglish = new Map<HttpStatus, string>([\n  [HttpStatus.CONTINUE, \"The request can continue.\"],\n  [HttpStatus.SWITCHING_PROTOCOLS, \"The server has changed protocols.\"],\n  [HttpStatus.PROCESSING, \"The server is processing the request, but it is not yet complete.\"],\n  [HttpStatus.EARLYHINTS, \"Early Hints.\"],\n  [HttpStatus.OK, \"The request was successful.\"],\n  [HttpStatus.CREATED, \"The request has been fulfilled and has resulted in the creation of a new resource.\"],\n  [HttpStatus.ACCEPTED, \"The request has been accepted for processing, but processing is not yet complete.\"],\n  [HttpStatus.NON_AUTHORITATIVE_INFORMATION, \"Non-Authoritative Information.\"],\n  [HttpStatus.NO_CONTENT, \"The request was successful but did not return any content.\"],\n  [HttpStatus.RESET_CONTENT, \"The content has been reset.\"],\n  [HttpStatus.PARTIAL_CONTENT, \"Only a part of the request was returned.\"],\n  [HttpStatus.AMBIGUOUS, \"The request has more than one possible response.\"],\n  [HttpStatus.MOVED_PERMANENTLY, \"The request was permanently redirected.\"],\n  [HttpStatus.FOUND, \"The request was redirected.\"],\n  [HttpStatus.SEE_OTHER, \"The response to the request can be found under a different URL.\"],\n  [HttpStatus.NOT_MODIFIED, \"The request has not been modified since it was last requested.\"],\n  [HttpStatus.TEMPORARY_REDIRECT, \"The request was temporarily redirected.\"],\n  [HttpStatus.PERMANENT_REDIRECT, \"The request was permanently redirected.\"],\n  [HttpStatus.BAD_REQUEST, \"The request could not be understood by the server due to incorrect syntax.\"],\n  [HttpStatus.UNAUTHORIZED, \"The request requires authentication.\"],\n  [HttpStatus.PAYMENT_REQUIRED, \"The server requires payment to complete the request.\"],\n  [HttpStatus.FORBIDDEN, \"The server has refused the request.\"],\n  [HttpStatus.NOT_FOUND, \"The requested resource was not found.\"],\n  [HttpStatus.METHOD_NOT_ALLOWED, \"The request method is not allowed for the requested resource.\"],\n  [HttpStatus.NOT_ACCEPTABLE, \"The server cannot return a response according to the headers accepted by the client.\"],\n  [HttpStatus.PROXY_AUTHENTICATION_REQUIRED, \"The server requires proxy authentication.\"],\n  [HttpStatus.REQUEST_TIMEOUT, \"The server has timed out waiting for the request.\"],\n  [HttpStatus.CONFLICT, \"The request could not be completed due to a conflict with the current state of the resource.\"],\n  [HttpStatus.GONE, \"The requested resource is no longer available.\"],\n  [HttpStatus.LENGTH_REQUIRED, \"The length of the request has not been defined.\"],\n  [HttpStatus.PRECONDITION_FAILED, \"A precondition given for the request failed.\"],\n  [HttpStatus.PAYLOAD_TOO_LARGE, \"The size of the request exceeds the limit set by the server.\"],\n  [HttpStatus.URI_TOO_LONG, \"The request URI is too long for the server to process.\"],\n  [HttpStatus.UNSUPPORTED_MEDIA_TYPE, \"The media type of the request is not supported by the server.\"],\n  [HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE, \"The requested range is not satisfiable.\"],\n  [HttpStatus.EXPECTATION_FAILED, \"The request cannot be processed due to an expectation failed.\"],\n  [HttpStatus.I_AM_A_TEAPOT, \"I'm a teapot.\"],\n  [HttpStatus.MISDIRECTED, \"The request was directed at a server that is not appropriate.\"],\n  [HttpStatus.UNPROCESSABLE_ENTITY, \"The request cannot be processed due to an unprocessable entity.\"],\n  [HttpStatus.FAILED_DEPENDENCY, \"The request failed due to a failed dependency.\"],\n  [HttpStatus.PRECONDITION_REQUIRED, \"The request requires a precondition.\"],\n  [HttpStatus.TOO_MANY_REQUESTS, \"The client has sent too many requests in a given amount of time.\"],\n  [HttpStatus.INTERNAL_SERVER_ERROR, \"The server encountered an unexpected situation that prevented it from completing the request.\"],\n  [HttpStatus.NOT_IMPLEMENTED, \"The server does not support the functionality required to complete the request.\"],\n  [HttpStatus.BAD_GATEWAY, \"The server acted as a gateway or proxy and received an invalid response from the upstream server.\"],\n  [HttpStatus.SERVICE_UNAVAILABLE, \"The server is not available at the moment.\"],\n  [HttpStatus.GATEWAY_TIMEOUT, \"The upstream server has timed out while waiting for a response from the upstream server.\"],\n  [HttpStatus.HTTP_VERSION_NOT_SUPPORTED, \"The HTTP version used in the request is not supported by the server.\"]\n]);\n", "import { HttpStatus } from '@core/http';\nimport { type ApiErrorResponse } from '@core/api-universal';\nimport { jsonPolyfills } from '@core/json';\nimport { type ApiRequest, type ApiResponse, type EndpointInputFromValidation, type EndpointInputValidation } from './types';\nimport { jsonResponse } from './utils';\nimport { getMessageFromHttpStatus } from '@core/http/http_status_messages';\n\n// export interface ApiOptions<E extends ApiErrorResponse> {\n//   onError: (e: Error) => Promise<ApiResponse<never, E>>,\n// }\n\nexport class ApiController<E extends ApiErrorResponse = ApiErrorResponse, R extends ApiRequest = ApiRequest> {\n\n  constructor(\n    // readonly options?: ApiOptions<E>,\n  ) {\n    jsonPolyfills();\n  }\n\n  async onError(e: any, req: Partial<R>): Promise<ApiResponse<never, E>> {\n    // return await this.options.onError(e as unknown as Error);\n\n    const status = Number.isFinite(e?.status) ? e?.status as number : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    return jsonResponse<never, any>(\n      {\n        status,\n        error: getMessageFromHttpStatus(status),\n      },\n      {\n        status,\n      }\n    );\n  }\n\n  async onRequest<T>(req: R): Promise<void> {}\n}\n\n\nexport type ApiControlerE<C> = C extends ApiController<infer E, any> ? E : never;\nexport type ApiControlerR<C> = C extends ApiController<any, infer R> ? R : never;\n\nexport type ValidatedRequest<C extends ApiController, V extends EndpointInputValidation | undefined = any>\n= V extends EndpointInputValidation ? ApiControlerR<C> & { validated: EndpointInputFromValidation<V> } : ApiControlerR<C>\n", "import { BadRequestException, NotImplementedException } from './exceptions';\n\nimport { JsonValue, jsonPolyfills, parseJSON } from '@core/json';\nimport { type ApiControlerE, type ApiController, type ValidatedRequest } from './ApiController';\nimport { type ApiRequest, type ApiRequestMethod, type ApiResponse, type EndpointInputValidation, type EndpointOptionsWithValidation } from './types';\nimport { getDefaultHttpStatusFromMethod, jsonResponse } from './utils';\nimport { type ReadableStream } from 'node:stream/web';\n\nimport { ValidationFunction } from '@core/validate_schema';\n\nexport interface RunOptions {\n  params?: Record<string, any>;\n  query?: Record<string, any>;\n  body?: any;\n  method?: ApiRequestMethod;\n}\n\n\ninterface _InternalApiRequest extends ApiRequest {\n  bodyJson: JsonValue\n}\n\nexport abstract class ApiEndpoint<C extends ApiController, T = any, V extends EndpointInputValidation|undefined = undefined> {\n  constructor(\n    readonly controller: C,\n    readonly options?: V extends EndpointInputValidation ? EndpointOptionsWithValidation<V> : undefined\n  ) {\n    jsonPolyfills();\n  }\n\n  abstract handle(\n    req: ValidatedRequest<C, V>\n  ): Promise<T>;\n\n\n  async run(req: Request, options?: RunOptions): Promise<ApiResponse<T, ApiControlerE< C >>> {\n    try {\n      const method = options?.method;\n\n      if (method && method !== req.method) throw new NotImplementedException();\n\n      const error = await this._prepareRequest(req, options);\n\n      if (error) return (await this.controller.onError(error, req as Partial<ApiRequest>)) as any;\n\n      await this.controller.onRequest(req as ApiRequest);\n      // await this.controller.resolveRequest(req);\n\n      const data = await this.handle(req as ValidatedRequest<C, V>); \n\n      const status = this.options?.status ?? getDefaultHttpStatusFromMethod(options?.method);\n\n      return jsonResponse(data, {\n        status,\n      }) as ApiResponse<T, never>;\n    } catch (e) {\n      return (await this.controller.onError(e, req as Partial<ApiRequest>)) as any;\n    }\n  }\n\n  get = async (req: Request, params: any): Promise<ApiResponse<T, ApiControlerE<C>>> => await this.run(req, {params, method: 'GET'});\n  post = async (req: Request, params: any): Promise<ApiResponse<T, ApiControlerE<C>>> => await this.run(req, {params, method: 'POST'});\n  put = async (req: Request, params: any): Promise<ApiResponse<T, ApiControlerE<C>>> => await this.run(req, {params, method: 'PUT'});\n  patch = async (req: Request, params: any): Promise<ApiResponse<T, ApiControlerE<C>>> => await this.run(req, {params, method: 'PATCH'});\n  delete = async (req: Request, params: any): Promise<ApiResponse<T, ApiControlerE<C>>> => await this.run(req, {params, method: 'DELETE'});\n\n  private async _streamToString(stream: ReadableStream<Uint8Array>): Promise<string> {\n    const chunks = Array<Uint8Array>();\n    for await (const chunk of stream) {\n      if (chunk instanceof Uint8Array) chunks.push(chunk);\n    }\n    return Buffer.concat(chunks).toString('utf8');\n  }\n\n\n\n  private async _prepareRequest(req: Request, options?: RunOptions): Promise<Error | null> {\n    const urlObject = new URL(req.url);\n\n    const params = options?.params;\n\n    (req as any).params = params ?? {};\n    (req as any).urlObject = urlObject;\n\n    const { searchParams } = urlObject;\n    const queryValues: Record<string, any> = {};\n\n    searchParams.forEach((v, k) => {\n      const current = queryValues[k];\n      if (current==null) {\n        queryValues[k] = v;\n        return ;\n      }\n\n      if (Array.isArray(current)) {\n        current.push(v);\n      }\n\n      queryValues[k] = [\n        current,\n        v\n      ];\n\n    });\n\n    (req as any).query = {\n      ...queryValues,\n      ...options?.query,\n    };\n\n    try {\n      let requestBody = req.body != null ? await this._streamToString(req.body as ReadableStream) : null;\n\n      if (typeof requestBody === 'string') {\n        requestBody = requestBody.trim();\n        if (requestBody.length === 0) requestBody = '{}';\n      }\n\n      (req as _InternalApiRequest).bodyJson = options?.body ?? (requestBody != null ? parseJSON(requestBody) : null);\n    } catch (e: any) {\n      return new BadRequestException('Invalid JSON');\n    }\n\n    try {\n      (req as any).validated = this._validateAllRequestValues(req as _InternalApiRequest);\n    } catch (e: any) {\n      return e;\n    }\n\n    return null;\n  }\n\n\n  private _validateAllRequestValues(req: _InternalApiRequest): any {\n    const { options }: any = this;\n    if (options == null) return undefined;\n\n    const { validation } = options;\n    if (validation == null) return undefined;\n\n    const result: any = {};\n\n    const { body, query, params } = validation;\n\n    if (body != null) result.body = this._validateRequestValue(req.bodyJson, body as ValidationFunction<any> );\n\n    if (query != null) result.query = this._validateRequestValues(req.query, query as Record<string, ValidationFunction<any>>);\n\n    if (params != null) result.params = this._validateRequestValues(req.params, params as Record<string, ValidationFunction<any>>);\n\n    if (result.body === undefined && result.query === undefined && result.params === undefined) return undefined;\n\n    return result;\n  }\n\n  private _validateRequestValues(values: Record<string, any>, validators: Record<string, ValidationFunction<any>>): any {\n    const result: Record<string, any> = {};\n\n    Object.entries(validators).forEach(([key, validatorFunction]) => {\n      if (typeof validatorFunction !== 'function') return;\n\n      const validatedValue = this._validateRequestValue(values[key], validatorFunction);\n      result[key] = validatedValue;\n    });\n\n    return result;\n  }\n\n  private _validateRequestValue(value: any, validatorFunction?: ValidationFunction<any>): any {\n    if (typeof validatorFunction !== 'function') return undefined;\n\n    return validatorFunction(value);\n  }\n}\n\n\ntype _RemovePromise<T> = T extends Promise<infer R> ? R : T; \n\n\nexport function createApiEndpoint<C extends ApiController, R, V extends EndpointInputValidation|undefined = undefined>(\n  controller: C,\n  options: V extends EndpointInputValidation ? EndpointOptionsWithValidation<V> : undefined,\n  handler: (req: ValidatedRequest<C, V>)=>Promise<R>,\n): ApiEndpoint<C, _RemovePromise<ReturnType<typeof handler>>, V> {\n\n  type _Result = _RemovePromise<ReturnType<typeof handler>>;\n\n  return new class extends ApiEndpoint<C, _Result, V> {\n    constructor() {\n      super(\n        controller,\n        options\n      );\n      handler.bind(this);\n    }\n\n    handle = async (req: ValidatedRequest<C, V>): Promise<_Result> => await handler(req);\n  }\n\n}\n", "import axios, { AxiosError, type AxiosRequestConfig, type AxiosResponse } from 'axios';\n\nconst IS_CLIENT_ONLINE_CHECK_URL = 'https://one.one.one.one/';\n\nexport class AxiosRequestPlusError extends Error {\n  name: string;\n  stack?: string;\n\n  constructor(\n    readonly originalError: any,\n    readonly isInternetAlive: boolean,\n    message?: string,\n  ) {\n    const resolvedMessage = message ?? originalError?.message;\n    super(typeof resolvedMessage === 'string' ? resolvedMessage : undefined);\n\n    this.name = 'AxiosRequestPlusError';\n    this.stack = typeof originalError?.stack === 'string' ? originalError?.stack : undefined;\n  }\n}\n\nasync function _isInternetAlive(): Promise<boolean> {\n  try {\n    const response = await fetch(IS_CLIENT_ONLINE_CHECK_URL, {\n      method: 'HEAD',\n    });\n\n    if (response.ok) return true;\n    return false;\n  } catch (_) {\n    return false;\n  }\n}\n\nexport async function axiosRequestPlus<T = any, R = AxiosResponse<T>, D = any>(\n  config: AxiosRequestConfig<D>\n): Promise<R> {\n  try {\n    return await axios.request(config);\n  } catch (e) {\n    let isInternetAlive: boolean = false;\n\n    if (e instanceof AxiosError && e.response) {\n      // There's a response. Internet is alive.\n\n      isInternetAlive = true;\n    } else {\n      try {\n        isInternetAlive = await _isInternetAlive();\n      } catch (_) {}\n    }\n\n    throw new AxiosRequestPlusError(e, isInternetAlive);\n  }\n}\n", "import { HttpException } from '@depsel-nodejs/api-server';\nimport { AxiosRequestPlusError } from '@/axios/axiosRequestPlus';\nimport { AxiosError } from 'axios';\n\nimport {\n  DXTApiMalformedResponse,\n  DXTErrorCode,\n  type DXTErrorInfo,\n  DXTException,\n  getDXTErrorDescription,\n  getErrorCodeFromHttpStatus,\n  getGenericErrorCode,\n  getHttpStatusFromErrorCode,\n} from './base';\n\nimport { ValidationException } from '@/validation/errors';\nimport { isRealObject } from '@/objects';\nimport { HttpStatus } from '@/http';\n\n\nexport function isErrorInfo(data: any): boolean {\n  const errorInfo: DXTErrorInfo = data;\n\n  if (!isRealObject(errorInfo)) return false;\n\n  const { status, errorCode, error } = errorInfo;\n\n  const statusNumber =\n    status && typeof status === 'number'\n      ? status\n      : Number.parseInt(status?.toString());\n\n  const errorCodeNumber =\n    errorCode && typeof errorCode === 'number'\n      ? errorCode\n      : Number.parseInt(errorCode?.toString());\n\n  return (\n    Number.isInteger(statusNumber) &&\n    Number.isInteger(errorCodeNumber) &&\n    typeof error === 'string'\n  );\n}\n\n\nexport function exceptionToDXTErrorInfo(error: any): DXTErrorInfo {\n  const originalErrorInfo = (error as any)?.originalError?.response?.data;\n\n  if (isErrorInfo(originalErrorInfo)) return originalErrorInfo as DXTErrorInfo;\n\n  if (error instanceof DXTException) return error.dxtError;\n\n  if (error instanceof ValidationException) {\n    const statusCode = HttpStatus.BAD_REQUEST;\n    const errorCode = getErrorCodeFromHttpStatus(statusCode);\n\n    return {\n      status: statusCode,\n      error: getDXTErrorDescription(errorCode),\n      errorCode,\n      extra: error.message\n    };\n\n  }\n\n\n  if (error instanceof HttpException) {\n    const { statusCode } = error;\n\n    const errorCode = getErrorCodeFromHttpStatus(statusCode);\n\n    return {\n      status: statusCode,\n      error: getDXTErrorDescription(errorCode),\n      errorCode,\n      extra: error.message\n    };\n  }\n\n\n  let isInternetAlive: boolean | null = null;\n\n  if (error instanceof AxiosRequestPlusError) {\n    isInternetAlive = error.isInternetAlive;\n    error = error.originalError;\n  }\n\n  // Error local\n  if (error instanceof DXTApiMalformedResponse) {\n    const errorCode = DXTErrorCode.FATAL_MALFORMED_SERVER_RESPONSE;\n    return {\n      status: error.status,\n      error: getDXTErrorDescription(errorCode),\n      errorCode,\n    };\n  }\n\n  if (error instanceof AxiosError) {\n    const errorCode = (isInternetAlive ?? false)\n      ? DXTErrorCode.INTERNAL_SERVER_ERROR\n      : DXTErrorCode.CLIENT_CONNECTION_ERROR;\n\n    return {\n      status: error.response?.status ?? getHttpStatusFromErrorCode(errorCode),\n      error: getDXTErrorDescription(errorCode),\n      errorCode,\n      extra: error.message,\n    };\n  }\n\n  const errorCode = DXTErrorCode.UNEXPECTED_ERROR;\n\n  return {\n    errorCode,\n    error: getDXTErrorDescription(errorCode),\n    status: getHttpStatusFromErrorCode(errorCode),\n    extra: error.message,\n  };\n}\n\nexport type DXTErrorCallback = (err: DXTErrorInfo) => void;\n\nexport enum DXTRetryPossibility {\n  clientSideErrorRetryable,\n  serverSideErrorRetryable,\n  serverSideErrorNoRetryable,\n}\n\nexport function getRetryPossibility(error: DXTErrorInfo): DXTRetryPossibility {\n  const _RETRYABLE_CLIENT_SIDE_ERRORS: number[] = [\n    DXTErrorCode.CLIENT_CONNECTION_ERROR,\n    DXTErrorCode.INTERNAL_CLIENT_ERROR,\n  ];\n\n  const _RETRYABLE_SERVER_SIDE_ERRORS: number[] = [\n    DXTErrorCode.CLIENT_CONNECTION_ERROR,\n    DXTErrorCode.FATAL_MALFORMED_SERVER_RESPONSE,\n    DXTErrorCode.SERVER_BUSY,\n    DXTErrorCode.UNEXPECTED_ERROR,\n    DXTErrorCode.INTERNAL_SERVER_ERROR,\n  ];\n\n  const genericErrorCode = getGenericErrorCode(error.errorCode);\n\n  if (\n    _RETRYABLE_CLIENT_SIDE_ERRORS.includes(error.errorCode) ||\n    _RETRYABLE_CLIENT_SIDE_ERRORS.includes(genericErrorCode)\n  ) {\n    return DXTRetryPossibility.clientSideErrorRetryable;\n  }\n\n  if (\n    _RETRYABLE_SERVER_SIDE_ERRORS.includes(error.errorCode) ||\n    _RETRYABLE_SERVER_SIDE_ERRORS.includes(genericErrorCode)\n  ) {\n    return DXTRetryPossibility.serverSideErrorRetryable;\n  }\n\n  return DXTRetryPossibility.serverSideErrorNoRetryable;\n}\n\nenum ErrorNature {\n  unwantedClientError, // Request technical assistance\n  unwantedServerError, // Request technical assistance\n  acceptableClientError,\n  acceptableServerError,\n}\n\nexport function getErrorNature(error: DXTErrorInfo): ErrorNature {\n  const _ACCEPTABLE_CLIENT_SIDE_ERRORS: number[] = [\n    DXTErrorCode.CLIENT_CONNECTION_ERROR,\n  ];\n\n  if (error.errorCode === DXTErrorCode.FATAL_MALFORMED_SERVER_RESPONSE) {\n    return ErrorNature.unwantedServerError;\n  }\n\n  const genericErrorCode = getGenericErrorCode(error.errorCode);\n\n  if (\n    _ACCEPTABLE_CLIENT_SIDE_ERRORS.includes(error.errorCode) ||\n    _ACCEPTABLE_CLIENT_SIDE_ERRORS.includes(genericErrorCode)\n  )\n    return ErrorNature.acceptableClientError;\n\n  return ErrorNature.acceptableServerError;\n}\n\nexport function doesErrorRequiresTechnicalAssistance(\n  error: DXTErrorInfo\n): boolean {\n  const errorNature = getErrorNature(error);\n  return (\n    errorNature === ErrorNature.unwantedClientError ||\n    errorNature === ErrorNature.unwantedServerError\n  );\n}\n\nexport function isNetworkError(error: DXTErrorInfo): boolean {\n  const genericErrorCode = getGenericErrorCode(error.errorCode);\n\n  return (\n    genericErrorCode === DXTErrorCode.CLIENT_CONNECTION_ERROR ||\n    genericErrorCode === DXTErrorCode.INTERNAL_SERVER_ERROR\n  );\n}\n\n\nexport function isDXTException(e: unknown, errorCode?: DXTErrorCode): e is DXTException {\n  return e instanceof DXTException && (errorCode == null || e.dxtError.errorCode === errorCode || e.dxtError.genericErrorCode === errorCode);\n}\n\n\nexport function isNotFoundException(e: unknown): e is DXTException  {\n  return isDXTException(e, DXTErrorCode.NOT_FOUND);\n}\n\n\nexport function isTangoException(e: unknown): e is DXTException  {\n  return isDXTException(e, DXTErrorCode.TANGO_ERROR);\n}\n", "import { stringifyJSON } from \"../json\";\nimport { isObj } from \"../objects\";\n\nexport const isStr = (value: unknown): value is string => typeof value === 'string';\n\nexport function linesCount(value: string): number {\n  if (typeof value !== 'string') return -1;\n\n  const len = value.length;\n  let lines = 0;\n  let lastLineBreakPos = -1;\n  for (let i = 0; i < len; i++) {\n    if (value[i] === '\\n') {\n      lines++;\n      lastLineBreakPos = i;\n    }\n  }\n\n  if (lastLineBreakPos < len - 1) lines++;\n\n  return lines;\n}\n\n\nexport function valueToString(value: any | undefined | null, includeStringQuotes?: boolean): string {\n  if (Array.isArray(value) || isObj(value)) return stringifyJSON(value);\n\n  if (typeof value === 'string' && (includeStringQuotes ?? false)) return `'${value}'`;\n  \n  if (value === null) return '[null]';\n\n  return value?.toString?.() ?? '[undefined]';\n}\n", "import { valueToString } from '../strings';\nimport { isRealObject } from '../objects';\n\n\nexport function isErrorObject(value: unknown): value is Error {\n  return (\n    isRealObject(value) && 'message' in value && 'name' in value\n  );\n}\n\n\nexport function errorToString(err: any): string {\n  if (isErrorObject(err)) return err.message;\n\n  return valueToString(err);\n}\n\n\nexport class ValidationException extends Error {\n  constructor(\n    message: string,\n  ) {\n    super(message);\n    this.name = 'ValidationException';\n  }\n}\n\nexport class BufferExpectedException extends ValidationException {\n  constructor() {\n    super('Value must be a buffer');\n  }\n}\n\nexport class StringExpectedException extends ValidationException {\n  constructor(value: any) {\n    super('Value must be a string');\n  }\n}\n\nexport class InvalidUUIdBufferException extends ValidationException {\n  constructor() {\n    super('Invalid UUID buffer');\n  }\n}\n\nexport class InvalidEntityUUIdException extends ValidationException {\n  constructor(value: any) {\n    super(`Invalid Entity UUID: ${value.toString()}`);\n  }\n}\n\nexport class InvalidEnumObjectException extends ValidationException {\n  constructor(value: any) {\n    super(`Invalid enum object:  ${valueToString(value)}`);\n  }\n}\n\nexport class InvalidEnumNumberException extends ValidationException {\n  constructor(value: any) {\n    super(`Invalid enum number:  ${valueToString(value)}`);\n  }\n}\n\nexport class InvalidEnumStringException extends ValidationException {\n  constructor(value: any) {\n    super(`Invalid enum string: ${valueToString(value)}`);\n  }\n}\n\nexport class NumberExpectedException extends ValidationException {\n  constructor(value: any) {\n    super(`Value must be a number: ${valueToString(value)}`);\n  }\n}\n\nexport class InvalidBooleanException extends ValidationException {\n  constructor(value: any) {\n    super(`Invalid boolean: ${valueToString(value)}`);\n  }\n}\n\nexport class InvalidParamsException extends ValidationException {\n  constructor(functionName: string) {\n    super(`Invalid ${functionName} params`);\n  }\n}\n", "import { jsonResponse } from '@depsel-nodejs/api-server/utils';\nimport { ApiErrorResponse } from '@/api-universal';\nimport { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\n\n\nexport async function errorApiResponse(errorCode: DXTErrorCode) {\n  const error = new DXTException(errorCode);\n  const { status } = error.dxtError;\n\n  return jsonResponse(\n    {\n      status,\n      error: error.message,\n    } as ApiErrorResponse,\n    { status }\n  );\n}\n\nexport const notFoundApiResponse = async () => errorApiResponse(DXTErrorCode.NOT_FOUND);\n\nexport const unimplementedApiResponse = async () => errorApiResponse(DXTErrorCode.NOT_IMPLEMENTED);\n", "import { isRealObject } from \"../objects\";\n\nexport function isNavigator(): boolean {\n  return typeof window !== 'undefined' && isRealObject(window.location);\n}\n\nexport function isNode(): boolean {\n  return (\n    typeof process !== 'undefined' && typeof process.versions?.node === 'string'\n  );\n}\n", "import { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport validator from 'validator';\n\nimport {\n  InvalidBooleanException,\n  InvalidEntityUUIdException,\n  InvalidEnumNumberException,\n  InvalidEnumStringException,\n  InvalidParamsException,\n  InvalidUUIdBufferException,\n} from '../validation/errors';\nimport { type EntityId } from '../value_objects/types';\nimport {\n  isEntityUUId,\n  type TEnum,\n  UUID_BYTES,\n  assertEnumType,\n} from '../validation/base';\n\nexport function normalizeEmail(email: string): string {\n  const normalizedEmailAttempt = validator.normalizeEmail(email, {\n    gmail_remove_dots: true,\n    gmail_remove_subaddress: true,\n  });\n\n  const normalizedEmail =\n    normalizedEmailAttempt === false ? email : normalizedEmailAttempt;\n\n  return normalizedEmail;\n}\n\nexport function secureToBigIntBE(buf: Buffer): bigint {\n  if (buf instanceof Buffer) return toBigIntBE(buf);\n\n  throw new InvalidParamsException('secureToBigIntBE');\n}\n\n\nexport function secureToBigIntLE(buf: Buffer): bigint {\n  if (buf instanceof Buffer) return toBigIntLE(buf);\n\n  throw new InvalidParamsException('secureToBigIntLE');\n}\n\n\nexport function secureToBufferBE(num: bigint, width: number): Buffer {\n  if (typeof num === 'bigint' && typeof width === 'number') toBufferBE(num, width);\n\n  throw new InvalidParamsException('secureToBufferBE');\n}\n\n\nexport function secureToBufferLE(num: bigint, width: number): Buffer {\n  if (typeof num === 'bigint' && typeof width === 'number') toBufferLE(num, width);\n\n  throw new InvalidParamsException('secureToBufferLE');\n}\n\n\nexport function toBoolean(rawValue: unknown, def?: boolean): boolean {\n  let value = rawValue;\n\n  if (typeof value === 'boolean') return value;\n\n  if (typeof value === 'number') return value !== 0;\n\n  if (typeof value === 'string') {\n    value = value.trim().toLowerCase().trim();\n    if (value === '1' || value === 'true') return true;\n    if (value === '0' || value === 'false') return false;\n  }\n\n  if (typeof def !== 'boolean') throw new InvalidBooleanException(rawValue);\n\n  return def;\n}\n\nexport function stringToEnum<E>(enumType: TEnum<E>, value: unknown): E {\n  if (typeof value !== 'string') throw new InvalidEnumStringException(value);\n\n  assertEnumType(enumType);\n  const result = enumType[value];\n  if (typeof result === 'undefined') throw new InvalidEnumNumberException(result);\n\n  if (typeof result !== 'number') throw new InvalidEnumNumberException(result);\n\n  return result as any;\n}\n\nexport function enumToString<E>(enumType: TEnum<E>, value: E): string {\n  if (typeof value !== 'number') throw new InvalidEnumNumberException(value);\n\n  assertEnumType(enumType);\n  \n  const result = enumType[value];\n  if (typeof result === 'undefined') throw new InvalidEnumStringException(result);\n  \n  if (typeof result !== 'string') throw new InvalidEnumStringException(result);\n\n  return result;\n}\n\nexport function uuidBufferToEntityId(value: Buffer): EntityId {\n  if (value instanceof Buffer && value.length === UUID_BYTES) {\n    return secureToBigIntBE(value);\n  }\n\n  throw new InvalidUUIdBufferException();\n}\n\nexport function uuidEntityIdToBuffer(value: EntityId): Buffer {\n  if (isEntityUUId(value)) {\n    return secureToBufferBE(value, UUID_BYTES);\n  }\n\n  throw new InvalidEntityUUIdException(value);\n}\n\nexport function uuidBufferToString(value: Buffer) {\n  if (value instanceof Buffer && value.length === UUID_BYTES) {\n    return value.toString('hex');\n  }\n\n  throw new InvalidUUIdBufferException();\n}\n\n\ntype DefaultFormDataResult = Record<string, any>;\n\nexport function formDataToObject<T extends DefaultFormDataResult = DefaultFormDataResult>(formData: FormData): T {\n  const formDataObj: Record<string, any> = {};\n\n  for (const key of formData.keys()) {\n    formDataObj[key] = formData.get(key);\n  }\n\n  return formDataObj as T;\n}", "import validator from 'validator';\n\nimport { isRealObject } from '../objects';\nimport {\n  InvalidEnumNumberException,\n  InvalidEnumObjectException,\n} from './errors';\n\nexport const MD5_LENGTH = 32;\n\nexport const INT8_BYTES = 1;\nexport const INT16_BYTES = 2;\nexport const INT32_BYTES = 4;\nexport const INT64_BYTES = 8;\nexport const INT128_BYTES = 16;\nexport const DATE_BYTES = INT64_BYTES;\nexport const UUID_BYTES = INT128_BYTES;\n\nexport const UINT8_MIN = 0;\nexport const UINT8_MAX = 2 ** (INT8_BYTES * 8) - 1;\n\nexport const INT16_MIN = -(2 ** (INT16_BYTES * 8 - 1));\nexport const INT16_MAX = 2 ** (INT16_BYTES * 8 - 1) - 1;\n\nexport const UINT16_MIN = 0;\nexport const UINT16_MAX = 2 ** (INT16_BYTES * 8) - 1;\n\nexport const UINT32_MIN = 0;\nexport const UINT32_MAX = 2 ** (INT32_BYTES * 8) - 1;\n\nexport const UINT64_MIN_VALUE = BigInt(0);\nexport const UINT64_MAX_VALUE = BigInt(`0x${'FF'.repeat(INT64_BYTES)}`); // BigInt('18446744073709551615');\n\nexport const UINT128_MIN_VALUE = BigInt(0);\nexport const UINT128_MAX_VALUE = BigInt(`0x${'FF'.repeat(INT128_BYTES)}`); // BigInt('340282366920938463463374607431768211455');\n\nexport const EMAIL_MAX_LENGTH = 512;\n\nexport const PHONE_MIN_LENGTH = 5;\nexport const PHONE_MAX_LENGTH = 50;\n\nexport const URL_MIN_LENGTH = 5;\nexport const URL_MAX_LENGTH = 2048;\n\nexport const TCP_PORT_MIN_VALUE = 1;\nexport const TCP_PORT_MAX_VALUE = 65535;\n\nexport const UI64_ENTITY_ID_BYTES = INT64_BYTES;\nexport const ENTITY_UUID_BYTES = UUID_BYTES;\n\nexport const UI64_ENTITY_ID_MIN_VALUE = UINT64_MIN_VALUE;\nexport const UI64_ENTITY_ID_MAX_VALUE = UINT64_MAX_VALUE;\n\nexport const ENTITY_UUID_MIN_VALUE = UINT128_MIN_VALUE;\nexport const ENTITY_UUID_MAX_VALUE = UINT128_MAX_VALUE;\n\nexport const IP_BYTES = 128 / 8;\n\nexport const NODE_ID_BYTES = INT16_BYTES;\nexport const NODE_ID_MIN_VALUE = 0;\nexport const NODE_ID_MAX_VALUE = 2 ** (NODE_ID_BYTES * 8) - 1;\n\nexport const NETWORK_ID_BYTES = UI64_ENTITY_ID_BYTES;\n\nexport const PROFILE_ID_BYTES = UI64_ENTITY_ID_BYTES;\n\nexport const ENTITY_NAME_MIN_LENGTH = 2;\nexport const ENTITY_NAME_MAX_LENGTH = 100;\n\nexport const SCREEN_NAME_MIN_LENGTH = 2;\nexport const SCREEN_NAME_MAX_LENGTH = 50;\n\nexport const POST_MIN_LENGTH = 4;\nexport const POST_MAX_LENGTH = 5000;\n\nexport const CUSTOM_GENDER_MIN_LENGTH = 4;\nexport const CUSTOM_GENDER_MAX_LENGTH = 100;\n\nexport const FIRST_NAME_MIN_LENGTH = 2;\nexport const FIRST_NAME_MAX_LENGTH = 60;\n\nexport const LAST_NAME_MIN_LENGTH = 2;\nexport const LAST_NAME_MAX_LENGTH = 60;\n\nexport const FULL_NAME_MIN_LENGTH = FIRST_NAME_MIN_LENGTH;\nexport const FULL_NAME_MAX_LENGTH =\n  FIRST_NAME_MAX_LENGTH + LAST_NAME_MAX_LENGTH + 1;\n\nexport const CUSTOM_GENDER_NAME_MIN_LENGTH = 3;\nexport const CUSTOM_GENDER_NAME_MAX_LENGTH = 100;\n\nexport const LANGUAGE_LENGTH = 2;\n\nexport const COUNTRY_CODE_LENGTH = 2;\n\nexport interface TEnum<T> {\n  [id: string]: T | string;\n  [nu: number]: string;\n}\n\n\nexport function isPhone(value: unknown): value is string {\n  return (\n    typeof value === 'string' &&\n    value.length >= PHONE_MIN_LENGTH &&\n    value.length <= PHONE_MAX_LENGTH\n  );\n}\n\nexport function isHost(value: unknown): value is string {\n  return (\n    typeof value === 'string' &&\n    (\n      validator.isFQDN(value, {}) ||\n      validator.isIP(value) ||\n      value === 'localhost'\n    )\n  );\n}\n\nexport function isTCPPort(value: unknown): value is number {\n  return (\n    typeof value === 'number' &&\n    value >= TCP_PORT_MIN_VALUE &&\n    value <= TCP_PORT_MAX_VALUE\n  );\n}\n\nexport function isUrl(value: unknown): value is string {\n  return (\n    typeof value === 'string' &&\n    value.length >= URL_MIN_LENGTH &&\n    value.length <= URL_MAX_LENGTH\n  );\n}\n\nexport function isBoolean(value: unknown): value is boolean {\n  if (typeof value === 'boolean') return true;\n\n  if (typeof value === 'number') return true;\n\n  if (typeof value === 'string') {\n    value = value.trim().toLowerCase();\n\n    switch (value) {\n      case '0':\n      case '1':\n      case 'false':\n      case 'true':\n        return true;\n    }\n  }\n\n  return false;\n}\n\nexport function isEntity64Id(value: unknown): value is bigint {\n  return (\n    typeof value === 'bigint' &&\n    value >= UI64_ENTITY_ID_MIN_VALUE &&\n    value <= UI64_ENTITY_ID_MAX_VALUE\n  );\n}\n\nexport function isEntityUUId(value: unknown): value is bigint {\n  return (\n    typeof value === 'bigint' &&\n    value >= ENTITY_UUID_MIN_VALUE &&\n    value <= ENTITY_UUID_MAX_VALUE\n  );\n}\n\nexport function isEntityName(value: unknown): value is string {\n  return (\n    typeof value === 'string' &&\n    value.length >= ENTITY_NAME_MIN_LENGTH &&\n    value.length <= ENTITY_NAME_MAX_LENGTH\n  );\n}\n\nexport function isName(\n  value: unknown,\n  minLength: number,\n  maxLength: number\n): value is string {\n  const re = /^[\\p{L}\\s]+$/iu;\n\n  return (\n    typeof value === 'string' &&\n    value.length >= minLength &&\n    value.length <= maxLength &&\n    re.test(value)\n  );\n}\n\nexport function isScreenName(value: unknown): value is string {\n  return isName(value, SCREEN_NAME_MIN_LENGTH, SCREEN_NAME_MAX_LENGTH);\n}\n\nexport function isFirstname(value: unknown): value is string {\n  return isName(value, FIRST_NAME_MIN_LENGTH, FIRST_NAME_MAX_LENGTH);\n}\n\nexport function isLastname(value: unknown): value is string {\n  return isName(value, LAST_NAME_MIN_LENGTH, LAST_NAME_MAX_LENGTH);\n}\n\nexport function isFullName(value: unknown): value is string {\n  return isName(value, FULL_NAME_MIN_LENGTH, FULL_NAME_MAX_LENGTH);\n}\n\nexport function isLanguage(value: unknown): value is string {\n  return (\n    typeof value === 'string' &&\n    value.length === LANGUAGE_LENGTH &&\n    _isLowerCase(value[0]) &&\n    _isLowerCase(value[1])\n  );\n}\n\nexport function isLocale(value: unknown): value is string {\n  const re = /^[a-z]{2}-[A-Z]{2}$/iu;\n  return typeof value === 'string' && re.test(value);\n}\n\nexport function isCountryCode(value: unknown): value is string {\n  return (\n    typeof value === 'string' &&\n    value.length === COUNTRY_CODE_LENGTH &&\n    _isLowerCase(value[0]) &&\n    _isLowerCase(value[1])\n  );\n}\n\nexport function _isLowerCase(char: unknown): char is string {\n  return typeof char === 'string' && char[0] >= 'a' && char[0] <= 'z';\n}\n\nexport function assertEnumType(enumType: unknown): asserts enumType is object {\n  if (isRealObject(enumType)) return ;\n\n  throw new InvalidEnumObjectException(enumType);\n}\n\nexport function isValidEnumValue<E>(enumType: unknown, value: E): value is E {\n  assertEnumType(enumType);\n\n  if (typeof value !== 'number') throw new InvalidEnumNumberException(value);\n\n  return typeof (enumType as any)[value] === 'string';\n}\n", "import { isNavigator, isNode } from '@/environemnt';\nimport { enumToString, stringToEnum } from '@/transformation';\n\nimport path from 'path';\nimport { DXTErrorCode, DXTException, getDXTErrorDescription } from 'src/domain/shared/errors';\n\n\ntype ExecutionModeString =  \"development\" | \"production\" | \"test\" | \"beta\"\n\n\nexport enum ExecutionMode {\n  development,\n  test,\n  beta,\n  production,\n}\n\n\nlet _executionMode: ExecutionMode|undefined;\n\nfunction _initEnvironmentConfig() {\n  if (isNavigator()) {\n    const executionModeString: ExecutionModeString|undefined = (window as any)?.dxTangoExecutionMode;\n\n    if (!executionModeString) return ;\n\n    _executionMode = stringToEnum(ExecutionMode, executionModeString);\n\n  }\n\n\n  if (!isNode()) return ;\n  \n  const nodeEnv = process.env.NODE_ENV;\n\n  if (nodeEnv === 'development') {\n    _executionMode = ExecutionMode.development;\n    return;\n  }\n\n  if (nodeEnv === 'test') {\n    _executionMode = ExecutionMode.test;\n    return;\n  }\n\n  const currentDirectory = path.basename(process?.cwd?.()??'').toLowerCase();\n  const isBeta = currentDirectory === 'beta';\n\n  if (isBeta) {\n    _executionMode = ExecutionMode.beta;\n    return;\n  }\n\n  _executionMode = ExecutionMode.production;\n\n}\n\n\nfunction _throwEnvironmentFatalError(): never {\n  if (isNode()) {\n    const errorCode = DXTErrorCode.FATAL_SERVER_INITIALIZATION_ERROR;\n\n    console.error(getDXTErrorDescription(errorCode));\n\n    process.exit(errorCode);\n  }\n\n  throw new DXTException(DXTErrorCode.FATAL_CLIENT_INITIALIZATION_ERROR);\n}\n\n\nexport function getExecutionMode(): ExecutionMode {\n  if (_executionMode === undefined) {\n    _initEnvironmentConfig();\n    if (_executionMode === undefined)  _throwEnvironmentFatalError();\n  }\n\n  return _executionMode;  \n}\n\nexport function getExecutionModeString(): string {\n  const executionMode = getExecutionMode();\n\n  return enumToString(ExecutionMode, executionMode);\n}\n\nexport function isDevelopment(): boolean {\n  return getExecutionMode() === ExecutionMode.development;\n}\n\nexport function isBeta(): boolean {\n  return  getExecutionMode() === ExecutionMode.beta;\n}\n\nexport function isProduction(): boolean {\n  return getExecutionMode() === ExecutionMode.production;\n}\n\nexport function isTest(): boolean {\n  return getExecutionMode() === ExecutionMode.test;\n}\n\n\nexport function byEnv<T>(options: {\n  dev?: T;\n  beta?: T;\n  prod?: T;\n  test?: T;\n  orElse: T;\n}): T {\n  const { dev, beta, test, prod, orElse } = options;\n  const executionMode = getExecutionMode();\n\n  switch (executionMode) {\n    case ExecutionMode.production: if (prod != null) return prod; break;\n    case ExecutionMode.beta: if (beta != null) return beta; break;\n    case ExecutionMode.test: if (test != null) return test; break;\n    \n    default: if (dev != null) return dev;\n  }\n\n  return orElse;\n}\n", "import { useMemo } from 'react';\n\nimport { cssBundleHref } from '@remix-run/css-bundle';\nimport type { LinksFunction, LoaderFunction } from '@remix-run/node';\nimport { Outlet, useLoaderData } from '@remix-run/react';\n\nimport { AuthProvider } from '#/auth/auth_context';\n\nimport {\n  ChakraProvider,\n  cookieStorageManagerSSR,\n  localStorageManager,\n  useConst } from\n'@chakra-ui/react';\n\nimport \"@fontsource/roboto/300.css?__remix_sideEffect__\";\nimport \"@fontsource/roboto/400.css?__remix_sideEffect__\";\nimport \"@fontsource/roboto/900.css?__remix_sideEffect__\";\nimport { ModalProvider } from 'react-hooks-async-modal';\nimport { getExecutionModeString } from 'src/environment';\nimport { theme } from '~/theme';\n\n// import { ErrorBox } from './components/ErrorBox';\nimport { RootDocument } from './RootDocument';\nimport \"./styles/index.css?__remix_sideEffect__\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // first time users will not have any cookies and you may not return\n  // undefined here, hence ?? is necessary\n  return request.headers.get('cookie') ?? '';\n};\n\nexport const links: LinksFunction = () => {\n  return [\n  ...(cssBundleHref != null ?\n  [{ rel: 'stylesheet', href: cssBundleHref }] :\n  [])];\n\n};\n\nexport const meta = () => [\n{ charset: 'utf-8' },\n{\n  name: 'viewport',\n  content:\n  'width=device-width, initial-scale=1.0, interactive-widget=resizes-content'\n},\n{ title: getExecutionModeString() }];\n\n\nexport default function App() {\n  function getColorMode(cookies: string) {\n    const match = cookies.match(\n      new RegExp(`(^| )${CHAKRA_COOKIE_COLOR_KEY}=([^;]+)`)\n    );\n    return match == null ? undefined : match[2];\n  }\n\n  // here we can set the default color mode. If we set it to null,\n  // there's no way for us to know what is the the user's preferred theme\n  // so the cient will have to figure out and maybe there'll be a flash the first time the user visits us.\n  const DEFAULT_COLOR_MODE: 'dark' | 'light' | null =\n  theme.config.initialColorMode;\n\n  const CHAKRA_COOKIE_COLOR_KEY = 'chakra-ui-color-mode';\n\n  let cookies: string = useLoaderData();\n\n  // the client get the cookies from the document\n  // because when we do a client routing, the loader can have stored an outdated value\n  if (typeof document !== 'undefined') {\n    cookies = document.cookie;\n  }\n\n  // get and store the color mode from the cookies.\n  // It'll update the cookies if there isn't any and we have set a default value\n  const colorMode = useMemo(() => {\n    let color = getColorMode(cookies);\n\n    if (color == null && DEFAULT_COLOR_MODE) {\n      cookies += ` ${CHAKRA_COOKIE_COLOR_KEY}=${DEFAULT_COLOR_MODE}`;\n      color = DEFAULT_COLOR_MODE;\n    }\n\n    return color;\n  }, [cookies]);\n\n  const cookieManager = useConst(cookieStorageManagerSSR(cookies));\n\n  return (\n    <RootDocument colorMode={colorMode}>\n      <ChakraProvider\n        theme={theme}\n        colorModeManager={\n        typeof cookies === 'string' ? cookieManager : localStorageManager}\n\n        toastOptions={{\n          defaultOptions: {\n            position: 'bottom',\n            duration: 2500,\n            isClosable: true\n          }\n        }}>\n\n        <ModalProvider>\n          <AuthProvider>\n            <Outlet />\n          </AuthProvider>\n        </ModalProvider>\n      </ChakraProvider>\n    </RootDocument>);\n\n}\n\n// export function ErrorBoundary() {\n//   return <ErrorBox />;\n// }", "export const cssBundleHref = \"/build/css-bundle-RWB3XPLB.css\";", "import { ValidationException } from '../validation/errors';\n\nexport type EntityId = bigint;\n\nexport class ValueObjectException extends ValidationException {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ValueObjectException';\n  }\n}\n", "import { valueToString } from '../strings';\nimport { toBoolean } from '../transformation';\nimport { UINT64_MAX_VALUE, UINT64_MIN_VALUE } from '../validation/base';\nimport { type EntityId, ValueObjectException } from './types';\n\n/********************************************************************************************\n ********************************************************************************************/\n\n\nexport type VOInput<R> = R | string | undefined | null;\n\nexport abstract class ValueObjectBase<R, T = R|string> {\n  protected abstract value: R;\n\n  toString(): string {\n    if (this.value === undefined) {\n      return 'undefined';\n    } else if (this.value === null) {\n      return 'null';\n    } else {\n      return (this.value as any).toString();\n    }\n  }\n\n  valueOf(): R {\n    return this.value;\n  }\n\n  rawValueToErrorString(input: VOInput<T>): string {\n    return valueToString(input);\n  }\n\n  extraErrorInfo(input: unknown): string {\n    return '';\n  }\n\n  getError(\n    input: unknown,\n    customMessageBegin?: string\n  ): ValueObjectException {\n    const className = this.constructor.name.toString();\n\n    const rawValueErrorString = '******';\n\n    const extraErrorInfo = this.extraErrorInfo(input);\n\n    const messageBegin = customMessageBegin ?? `Invalid value`;\n\n    const exceptionMessage =\n      `${messageBegin} ${className}(${rawValueErrorString})` +\n      (extraErrorInfo !== '' ? `. ${extraErrorInfo}` : '');\n    return new ValueObjectException(exceptionMessage);\n  }\n\n  throwError(input: unknown, customMessage?: string): never {\n    throw this.getError(input, customMessage);\n  }\n\n  abstract validate(input: VOInput<T>): R;\n}\n\n\nexport type ValueObjectR<VO> = VO extends ValueObjectBase<infer R, any> ? R : never;\nexport type ValueObjectT<VO> = VO extends ValueObjectBase<any, infer T> ? T : never;\n\nexport abstract class ValueObject<R, T=R|string> extends ValueObjectBase<R, VOInput<T>> {\n  protected value: R;\n\n  constructor(input: VOInput<T>) {\n    super();\n    this.value = this.validate(input);\n  }\n}\n\nexport abstract class VOEntityId<T> extends ValueObject<\n  EntityId, T|EntityId|string\n> {}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport class VONumber extends ValueObject<number> {\n\n  override validate(input: VOInput<number>): number {\n    let value = input;\n\n    try {\n      if (typeof value === 'string') value = Number.parseFloat(value);\n      if (typeof value === 'number' && Number.isFinite(value)) return value;\n    } catch (_) {}\n\n    this.throwError(input);\n  }\n\n}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport class VOInteger extends ValueObject<number> {\n\n  override validate(input: VOInput<number>): number {\n    let value = input;\n\n    try {\n      if (typeof value === 'string') value = Number.parseInt(value);\n      if (typeof value === 'number' && Number.isInteger(value)) return value;\n    } catch (_) {}\n\n    this.throwError(input);\n  }\n}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport class VOBigInt extends ValueObject<bigint, bigint|number> {\n\n  override validate(input: VOInput<bigint|number>): bigint {\n    let value = input;\n\n    try {\n      if (typeof value === 'string') value = BigInt(value);\n      if (typeof value === 'number') value = BigInt(value);\n      if (typeof value === 'bigint') return value;\n    } catch (e) {}\n\n    this.throwError(input);\n  }\n}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport class VONumberRange<R extends number = number> extends ValueObjectBase<R, number | string> {\n  protected value: R;\n\n  isInteger: boolean;\n\n  constructor(\n    value: VOInput<number>,\n    readonly min?: number,\n    readonly max?: number,\n    isInteger?: boolean\n  ) {\n    super();\n    this.isInteger = isInteger ?? false;\n    this.value = this.validate(value);\n  }\n\n  override extraErrorInfo(input: VOInput<string>): string {\n    return `must to be between ${this.min} and ${this.max}`;\n  }\n\n  override validate(input: VOInput<number>): R {\n    let value = input;\n\n    try {\n      if (typeof value === 'string') value = this.isInteger ? Number.parseInt(value) : Number.parseFloat(value);\n\n      if (\n        (value == null)\n        ||\n        (this.isInteger && !Number.isInteger(value))\n        ||\n        (!this.isInteger && !Number.isFinite(value))\n      ) {\n        this.throwError(input);\n      }\n\n      if (((this.min == null) || value >= this.min) && ((this.max == null) || value <= this.max)) return value as R;\n    } catch (_) {}\n\n    this.throwError(input);\n  }\n}\n\nexport class VOIntegerRange extends VONumberRange<number> {\n  constructor(\n    value: VOInput<number>,\n    min: number | undefined,\n    max: number | undefined\n  ) {\n    super(value, min, max, true);\n  }\n}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport class VOPositiveNumber extends VONumberRange<number> {\n  constructor(value: VOInput<number>) {\n    super(value, 0, undefined, undefined);\n  }\n}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport class VOBigIntRange extends ValueObjectBase<\n  bigint,\n  bigint | number | string\n> {\n  protected value: bigint;\n\n  constructor(\n    value: VOInput<bigint | number>,\n    readonly min: bigint | undefined,\n    readonly max: bigint | undefined\n  ) {\n    super();\n    this.value = this.validate(value);\n  }\n\n  override validate(input: VOInput<bigint | number>): bigint {\n    let value = input;\n\n    try {\n      if (typeof value === 'string' || typeof value === 'number') value = BigInt(value);\n\n      if (typeof value !== 'bigint') this.throwError(input);\n\n      if (((typeof this.min !== 'bigint') || value >= this.min) && ((typeof this.max !== 'bigint') || value <= this.max)) return value;\n    } catch (_) {}\n\n    this.throwError(input);\n  }\n}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport class VOPositiveBigInt extends VOBigIntRange {\n  constructor(value: VOInput<bigint | number>) {\n    super(value, BigInt(0), undefined);\n  }\n}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport abstract class VOUInt64 extends VOBigIntRange {\n  constructor(value: VOInput<bigint | number>) {\n    super(value, UINT64_MIN_VALUE, UINT64_MAX_VALUE);\n  }\n}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport class VOBoolean extends ValueObject<boolean, boolean | number | string> {\n  override validate(input: VOInput<boolean | number>): boolean {\n    try {\n      return toBoolean(input);\n    } catch (_) {}\n\n    this.throwError(input);\n  }\n}\n\n/********************************************************************************************\n ********************************************************************************************/\n\nexport class VOString extends ValueObject<string> {\n  validate(input: VOInput<string>): string {\n    if (typeof input !== 'string') this.throwError(input); \n    \n    return input;\n  }\n}\n", "import { type VOInput, ValueObject } from './base';\n\nexport class VONotEmptyString extends ValueObject<string> {\n  \n  override validate(input: VOInput<string>): string {\n    if (typeof input === 'string') {    \n      const value = input.trim();\n\n      if (value !== '') return value;\n    }\n\n    this.throwError(input);\n  }\n}\n", "import { ValidationException } from '../validation/errors';\n\nexport function random(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst UINT64_VALUES = BigInt(1) << BigInt(64);\nconst INVALID_NUMBER_RANGE_ERROR = 'Invalid number range';\n\nexport function numberToUInt64(n: number): bigint {\n  if (n < Number.MIN_SAFE_INTEGER || n > Number.MAX_SAFE_INTEGER)\n    throw new ValidationException(INVALID_NUMBER_RANGE_ERROR);\n\n  if (n < 0) {\n    const absolute = Math.abs(n);\n    return UINT64_VALUES - BigInt(absolute);\n  } else {\n    return BigInt(n);\n  }\n}\n\nexport function uint64ToNumber(bi: bigint): number {\n  const result = BigInt.asIntN(64, bi);\n  if (result < Number.MIN_SAFE_INTEGER || result > Number.MAX_SAFE_INTEGER)\n    throw new ValidationException(INVALID_NUMBER_RANGE_ERROR);\n  return Number(result);\n}\n\nexport function getMinMaxIntegerOfEnum(e: object) {\n  const values = Object.keys(e)\n    .map((k) => Number.parseInt(k))\n    .filter((k) => !isNaN(k));\n  return {\n    min: Math.min(...values),\n    max: Math.max(...values),\n  };\n}\n\nexport function limitNumber(value: number, min?: number, max?: number) {\n  min = min ?? Number.NEGATIVE_INFINITY;\n  max = max ?? Number.POSITIVE_INFINITY;\n\n  if (min > max) {\n    const aux = min;\n    min = max;\n    max = min;\n  }\n\n  if (value < min) return min;\n  if (value > max) return max;\n\n  return value;\n}\n", "import { numberToUInt64, uint64ToNumber } from '../math';\n\nexport type Milliseconds = number;\nexport type Seconds = number;\nexport type Minutes = number;\n\nexport type Timestamp = number;\n\nexport const MONTH_IN_DAYS = 30;\n\nexport const HOUR_IN_MINUTES: Minutes = 60;\nexport const DAY_IN_MINUTES: Minutes = HOUR_IN_MINUTES * 24;\nexport const WEEK_IN_MINUTES: Minutes = DAY_IN_MINUTES * 7;\n\nexport const MINUTE_IN_SECONDS: Seconds = 60;\nexport const TEN_MINUTES_IN_SECONDS: Seconds = MINUTE_IN_SECONDS * 10;\nexport const HOUR_IN_SECONDS: Seconds = HOUR_IN_MINUTES * 60;\nexport const DAY_IN_SECONDS: Seconds = DAY_IN_MINUTES * 60;\nexport const WEEK_IN_SECONDS: Seconds = WEEK_IN_MINUTES * 60;\n\nexport const MINUTE_IN_MILLISECONDS: Milliseconds = MINUTE_IN_SECONDS * 1000;\nexport const TEN_MINUTES_IN_MILLISECONDS: Milliseconds =\n  MINUTE_IN_MILLISECONDS * 10;\nexport const HOUR_IN_MILLISECONDS: Milliseconds = HOUR_IN_SECONDS * 1000;\nexport const DAY_IN_MILLISECONDS: Milliseconds = DAY_IN_SECONDS * 1000;\nexport const WEEK_IN_MILLISECONDS: Milliseconds = WEEK_IN_SECONDS * 1000;\n\n\nexport function now(): number {\n  return Date.now();\n}\n\nexport function getTimeOnlyInMilliseconds(d: Date): number {\n  let m = d.getUTCHours() * HOUR_IN_MILLISECONDS;\n  m += d.getUTCMinutes() * MINUTE_IN_MILLISECONDS;\n  m += d.getUTCSeconds() * 1000;\n  m += d.getUTCMilliseconds();\n  return m;\n}\n\nexport function monthsDiff(a: Date, b: Date): number {\n  const aMonths = dateTotalMonths(a);\n  const bMonths = dateTotalMonths(b);\n\n  const aDayOfMonth = a.getUTCDate();\n  const bDayOfMonth = b.getUTCDate();\n\n  const aTimeInMilliseconds = getTimeOnlyInMilliseconds(a);\n  const bTimeInMilliseconds = getTimeOnlyInMilliseconds(b);\n\n  const aMonthMilliseconds =\n    aTimeInMilliseconds + aDayOfMonth * DAY_IN_MILLISECONDS;\n  const bMonthMilliseconds =\n    bTimeInMilliseconds + bDayOfMonth * DAY_IN_MILLISECONDS;\n\n  return (\n    bMonths - aMonths + (bMonthMilliseconds >= aMonthMilliseconds ? 0 : -1)\n  );\n}\n\nexport function getRemainingSeconds(targetTimeStamp?: number) {\n  const countDown = targetTimeStamp != null\n    ? Math.floor((targetTimeStamp - Date.now()) / 1000)\n    : 0;\n  return countDown >= 0 ? countDown : 0;\n}\n\nexport function uint64ToDate(ui64: bigint): Date {\n  return new Date(uint64ToNumber(ui64));\n}\n\nexport const UTC_VALUE_YEAR = 0;\nexport const UTC_VALUE_MONTH = 1;\nexport const UTC_VALUE_DAY = 2;\nexport const UTC_VALUE_HOUR = 3;\nexport const UTC_VALUE_MIN = 4;\nexport const UTC_VALUE_SEC = 5;\nexport const UTC_VALUE_MS = 6;\n\nexport function dateUTCValues(d: Date): number[] {\n  return [\n    d.getUTCFullYear(),\n    d.getUTCMonth(),\n    d.getUTCDate(),\n    d.getUTCHours(),\n    d.getUTCMinutes(),\n    d.getUTCSeconds(),\n    d.getUTCMilliseconds(),\n  ];\n}\n\nexport function isValidDate(d: unknown): d is Date {\n  return d instanceof Date && !isNaN(d.getTime());\n}\n\nexport function moveMonth(d: Date, index: number): Date {\n  const v = dateUTCValues(d);\n\n  index = Math.round(index);\n\n  const m = v[UTC_VALUE_MONTH] + index;\n  let finalM = m % 12;\n  let yearIndex = (m - finalM) / 12;\n  if (finalM < 0) {\n    finalM = (finalM + 12) % 12;\n    yearIndex--;\n  }\n  const finalY = v[UTC_VALUE_YEAR] + yearIndex;\n\n  const result = new Date(\n    Date.UTC(\n      finalY,\n      finalM,\n      v[UTC_VALUE_DAY],\n      v[UTC_VALUE_HOUR],\n      v[UTC_VALUE_MIN],\n      v[UTC_VALUE_SEC],\n      v[UTC_VALUE_MS]\n    )\n  );\n\n  return result;\n}\n\nexport function dateToISOStringZ(date: Date) {\n  return date.toISOString().substring(0, 19) + 'Z';\n}\n\nfunction _resolveDate(date: Date | string): Date {\n  return typeof date === 'string' ? new Date(date) : date;\n}\n\nexport function dateToMillis(date: Date | string) {\n  return _resolveDate(date).getTime();\n}\n\nexport function dateToSecs(date: Date | string) {\n  return Math.floor(_resolveDate(date).getTime() / 1000);\n}\n\nexport function dateToUInt64(date: Date | string) {\n  return numberToUInt64(_resolveDate(date).getTime());\n}\n\nexport function dateTotalMonths(date: Date | string) {\n  const rdate = _resolveDate(date);\n  return (rdate.getFullYear() - 1970) * 12 + rdate.getUTCMonth();\n}\n", "import validator from 'validator';\n\nimport { type VOInput, ValueObject } from './base';\n\n\nexport class VOEmailAddress extends ValueObject<string> {\n\n  throwInvalidAddressError(rawAddress: VOInput<string>): never {\n    this.throwError(rawAddress, 'Invalid email address');\n  }\n\n  override validate(input: VOInput<string>): string {\n    \n    if (typeof input === 'string') {\n    \n      const value = input.trim().toLowerCase();\n\n      if (validator.isEmail(value, {\n        domain_specific_validation: true,\n      })) return value;\n    \n    }\n\n    this.throwError(input);\n\n  }\n\n}\n", "import validator from 'validator';\n\nimport { random } from '../math';\nimport { type VOInput, ValueObject } from './base';\n\nexport const DUMMY_MD5 = '12345678901234567890123456789012';\n\nexport class VOMD5 extends ValueObject<string, Buffer> {\n\n  constructor(input: VOInput<Buffer>) {\n    if (Buffer.isBuffer(input)) input = input.toString('hex');\n\n    super(input);\n  }\n\n\n  validate(input: VOInput<Buffer>): string {\n    let value: string|undefined;\n\n    if (Buffer.isBuffer(input)) {\n      value = input.toString('hex');\n    } if (typeof input === 'string') {\n      value = input.trim().toLowerCase();\n    }\n\n    if (typeof value === 'string' && validator.isMD5(value)) return value;\n\n    this.throwError(input);\n  }\n\n\n  toBuffer(): Buffer {\n    return Buffer.from(this.value, 'hex');\n  }\n\n  static random(): VOMD5 {\n    const randomBytes = Array(16);\n\n    for (let i = 0; i < randomBytes.length; i++)\n      randomBytes[i] = random(0, 255);\n\n    return new VOMD5(Buffer.from(randomBytes));\n  }\n}\n", "import { UINT16_MAX, UINT16_MIN } from '../validation/base';\nimport { VOInput, VOIntegerRange } from './base';\n\nexport class VOUInt16 extends VOIntegerRange {\n  constructor(input: VOInput<number>) {\n    super(input, UINT16_MIN, UINT16_MAX);\n  }\n}\n", "import { UINT32_MAX, UINT32_MIN } from '../validation/base';\nimport { VOIntegerRange } from './base';\n\nexport class VOUInt32 extends VOIntegerRange {\n  constructor(value: number | string) {\n    super(value, UINT32_MIN, UINT32_MAX);\n  }\n}\n", "import validator from 'validator';\n\nimport { random } from '../math';\nimport { type VOInput, ValueObject } from './base';\n\nexport class VOSHA1 extends ValueObject<string, Buffer> {\n\n\n  validate(input: VOInput<Buffer>): string {\n    let value: string|undefined;\n\n    if (Buffer.isBuffer(input)) {\n      value = input.toString('hex');\n    } if (typeof input === 'string') {\n      value = input.trim().toLowerCase();\n    }\n\n    if (typeof value === 'string' && validator.isHash(value, 'sha1')) return value;\n\n    this.throwError(input);\n  }\n\n\n  toBuffer(): Buffer {\n    return Buffer.from(this.value, 'hex');\n  }\n\n\n  static random(): VOSHA1 {\n    const randomBytes = Array(20);\n\n    for (let i = 0; i < randomBytes.length; i++) randomBytes[i] = random(0, 255);\n\n    return new VOSHA1(Buffer.from(randomBytes));\n  }\n\n}\n", "import { isTCPPort } from '../validation/base';\nimport { type VOInput, ValueObject } from './base';\n\nexport class VOTCPPort extends ValueObject<number> {\n\n  validate(input: VOInput<number>): number {\n    let value = input;\n\n    if (typeof value === 'string') value = Number.parseInt(value);\n    \n    if (typeof value === 'number' && isTCPPort(value)) return value;\n    \n    this.throwError(input);\n  }\n}\n", "import { isHost } from '../validation/base';\nimport { type VOInput, ValueObject } from './base';\n\nexport class VOHost extends ValueObject<string> {\n\n  validate(input: VOInput<string>): string {\n    let value = input;\n\n    if (typeof value === 'string') {\n      value = value.trim().toLowerCase();\n      if (isHost(value)) return value;\n    }\n    \n    this.throwError(input);\n  }\n\n}\n", "import { ValueObjectBase } from \"./base\";\n\n\nexport function tryVO<T, R>(toTry: ()=>ValueObjectBase<T, R>, defaultVO: ReturnType<typeof toTry>): ReturnType<typeof toTry> {\n  try {\n    return toTry();\n  } catch(_) {\n  }\n  return defaultVO;\n}\n", "import { VOUInt64 } from '@/value_objects';\n\nexport class VOAuthRandom extends VOUInt64 {\n  static generate(): VOAuthRandom {\n    const ht = process.hrtime()[1] % 10;\n    const result = Math.trunc(\n      (Math.random() / 10 ** ht / (ht + 1)) * Number.MAX_SAFE_INTEGER\n    );\n\n    return new VOAuthRandom(BigInt(result));\n  }\n}\n", "import { ValidationException } from '@/validation/errors';\nimport { type VOInput, VOSHA1, VOUInt32, ValueObject, VOUInt16 } from '@/value_objects';\n\nimport { VOAuthRandom } from './vo_auth_random';\nimport { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\n\nexport interface RightAuthTokenProps {\n  readonly userId: VOUInt32;\n  readonly roleNumber: VOUInt16;\n}\n\nexport class AuthTokenProps {\n  readonly userId: VOUInt32;\n  readonly random: VOAuthRandom;\n  readonly roleNumber: VOUInt16;\n\n  constructor(\n    userId: number,\n    random: bigint,\n    roleNumber: number,\n  ) {\n    this.userId = new VOUInt32(userId);\n    this.random = new VOAuthRandom(random);\n    this.roleNumber = new VOUInt16(roleNumber);\n  }\n}\n\nexport class VOWeakCheckAuthToken extends ValueObject<AuthTokenProps> {\n  protected verificationHash?: VOSHA1;\n\n  validate(rawValue: VOInput<AuthTokenProps>): AuthTokenProps {\n\n    if (rawValue instanceof AuthTokenProps) {\n      throw new ValidationException(\n        'VOWeakCheckAuthToken does not accept AuthTokenProps as value'\n      );\n    }\n    \n    let value = rawValue;\n\n    try {\n      if (typeof value === 'string') {\n        value = value.trim().toLowerCase();\n\n        const parts = value.split('-');\n        if (parts.length === 4) {\n          const userId = Number.parseInt('0x' + parts[0]);\n          const random = BigInt('0x' + parts[1]);\n          const roleNumber = Number.parseInt(parts[2]);\n\n          this.verificationHash = new VOSHA1(parts[3]);\n\n          return new AuthTokenProps(\n            userId,\n            random,\n            roleNumber,\n          );\n        }\n      }\n    } catch (e) {\n      // console.error(e);\n    }\n\n    this.throwError(rawValue);\n  }\n\n  override rawValueToErrorString(rawValue: string | AuthTokenProps): string {\n    return typeof rawValue === 'string' ? rawValue : JSON.stringify(rawValue);\n  }\n\n  protected getVerificationHashString(): string {\n    if (!this.verificationHash) throw new DXTException(DXTErrorCode.UNEXPECTED_ERROR, 'VOWeakCheckAuthToken.verificationHash == [undefined]');\n\n    return this.verificationHash.toString();\n  }\n\n  protected getPayloadString() {\n    const userId = this.value.userId.valueOf().toString(16);\n    const randomNumber = this.value.random.valueOf().toString(16);\n    const roleNumber = this.value.roleNumber.valueOf();\n\n    return `${userId}-${randomNumber}-${roleNumber}`;\n  }\n\n  private _payload: string | null = null;\n  private _verificationHash: string | null = null;\n  override toString(): string {\n    this._payload ??= this.getPayloadString();\n    this._verificationHash ??= this.getVerificationHashString();\n\n    return `${this._payload}-${this._verificationHash}`;\n  }\n}\n", "import { useCallback, useEffect, useState } from 'react';\n\nimport { parseJSON } from '@/json';\n\nimport { authConfig } from 'src/config/auth';\n\nimport { getStorage } from 'src/storage';\nimport { UserPublicInfo } from 'src/domain/user/entities/user';\n\nconst storage = getStorage();\n\nexport const useTokenExistenceCheck = () => {\n  const [tokenExists, setTokenExists] = useState<boolean>(!(getStoredToken() == null));\n\n  const authTokenKey = authConfig.storageAuthTokenKey;\n\n  const handleTokenExistence = useCallback(\n    (event: StorageEvent | CustomEvent) => {\n\n      if ((event as StorageEvent).key === authTokenKey) {\n        setTokenExists( getStoredToken() != null );\n      }\n      \n    },\n    [authTokenKey, getStoredToken()]\n  );\n\n  useEffect(() => {\n    if (!storage) return;\n\n    window.addEventListener('storage', handleTokenExistence);\n\n    return () => {\n      window.removeEventListener('storage', handleTokenExistence);\n    };\n  }, []);\n\n  return tokenExists;\n};\n\nexport function getStoredToken(): string | null {\n  if (!storage) return null;\n\n  return storage.getItem(authConfig.storageAuthTokenKey);\n}\n\nexport function getStoredUserInfo(): UserPublicInfo | null {\n  if (!storage) return null;\n\n  return parseJSON(storage.getItem(authConfig.storageUserInfoKey) ?? '');\n}\n\nexport function setStoredToken(token: string) {\n  if (!storage) return;\n\n  if (token !== getStoredToken()) {\n    storage.setItem(authConfig.storageAuthTokenKey, token);\n\n    // dispatch storage event\n    window.dispatchEvent(new Event('storage'));\n  }\n}\n\n\nexport function setStoredUserInfo(userInfo: UserPublicInfo) {\n  if (!storage) return;\n  storage.setItem(authConfig.storageUserInfoKey, JSON.stringify(userInfo));\n}\n\n\nexport function deleteAuthStoredData() {\n  if (!storage) return;\n\n  if ((storage.getItem(authConfig.storageAuthTokenKey) != null) || (storage.getItem(authConfig.storageUserInfoKey) != null)) {\n    storage.removeItem(authConfig.storageAuthTokenKey);\n    storage.removeItem(authConfig.storageUserInfoKey);\n\n    // dispatch storage event\n    window.dispatchEvent(new Event('storage'));\n  }\n}\n", "import { isNavigator } from '@/environemnt';\nimport md5 from 'md5';\n\nconst _host = isNavigator() ? window.location.host : '';\nconst _storeKeyHash = md5(_host);\n\nexport function getStorageKey(base: string) {\n  return `${base}_${_storeKeyHash}`;\n}\n\nexport function getStorage(): Storage | null {\n  if (isNavigator()) return window.localStorage;\n\n  return null;\n}\n", "import { getStorageKey } from '../storage';\n\nexport const authConfig = {\n  storageAuthTokenKey: getStorageKey('auth_token'),\n  storageUserInfoKey: getStorageKey('user_info'),\n};\n", "import { VOWeakCheckAuthToken } from 'src/domain/auth/value_objects';\nimport { type DXTErrorInfo } from 'src/domain/shared/errors';\n\nimport { deleteAuthStoredData, setStoredToken, setStoredUserInfo } from '../auth_store.utils';\nimport { type UserPublicInfo } from 'src/domain/user/entities/user';\n\ntype AuthStateMapFunction<S extends AuthState, R> = (state: S) => R;\n\nexport abstract class AuthState {\n  mapOrElse<R>(options: {\n    loading?: AuthStateMapFunction<AuthStateLoading, R>;\n    changingToken?: AuthStateMapFunction<AuthStateChangingToken, R>;\n    loggedIn?: AuthStateMapFunction<AuthStateLoggedIn, R>;\n    disconnected?: AuthStateMapFunction<AuthStateDisconnected, R>;\n    orElse: AuthStateMapFunction<AuthState, R>;\n  }): R {\n    const { changingToken, loading, loggedIn, disconnected, orElse } = options;\n\n    if (this instanceof AuthStateLoading && loading) return loading(this);\n    if (this instanceof AuthStateChangingToken && changingToken) return changingToken(this);\n    if (this instanceof AuthStateLoggedIn && loggedIn) return loggedIn(this);\n    if (this instanceof AuthStateDisconnected && disconnected) return disconnected(this);\n\n    return orElse(this);\n  }\n\n  mapReadyOrNot<R>(options: {\n    ready: AuthStateMapFunction<AuthStateLoggedIn | AuthStateDisconnected, R>;\n    notReady: AuthStateMapFunction<AuthState, R>;\n  }): R {\n    const { ready, notReady } = options;\n\n    if (\n      this instanceof AuthStateLoggedIn\n      ||\n      this instanceof AuthStateDisconnected\n    ) {\n      return ready(this);\n    }\n\n    return notReady(this);\n  }\n\n  map<R>(options: {\n    loading: AuthStateMapFunction<AuthStateLoading, R>;\n    changingToken: AuthStateMapFunction<AuthStateChangingToken, R>;\n    loggedIn: AuthStateMapFunction<AuthStateLoggedIn, R>;\n    disconnected: AuthStateMapFunction<AuthStateDisconnected, R>;\n    orElse: AuthStateMapFunction<AuthState, R>;\n  }): R {\n    const { changingToken, loading, loggedIn, disconnected } = options;\n\n    return this.mapOrElse({\n      loading,\n      changingToken,\n      loggedIn,\n      disconnected,\n      orElse: (_) => {\n        throw Error('Invalid AuthState');\n      },\n    });\n  }\n\n  public isLoading(): boolean {\n    return this instanceof AuthStateLoading;\n  }\n\n  public isChangingToken(): boolean {\n    return this instanceof AuthStateChangingToken;\n  }\n\n  public isLoggedIn(): boolean {\n    return this instanceof AuthStateLoggedIn;\n  }\n\n  public isDisconnected(): boolean {\n    return this instanceof AuthStateDisconnected;\n  }\n\n  public isDisconnectedAndNotRedirecting(): boolean {\n    return this instanceof AuthStateDisconnected && !this.isRedirecting;\n  }\n\n  public userOrNull(): UserPublicInfo | null {\n    return this instanceof AuthStateLoggedIn ? this.userInfo : null;\n  }\n\n  public authTokenOrNull(): VOWeakCheckAuthToken | null {\n    if (this instanceof AuthStateLoggedIn) {\n      try {\n        return new VOWeakCheckAuthToken(this.authToken);\n      } catch (_) {}\n    }\n\n    return null;\n  }\n\n  public authTokenString(): string | undefined {\n    // return (this instanceof AuthStateLoggedIn) ? this.authToken : undefined;\n    return this.authTokenOrNull()?.toString();\n  }\n\n  public errorOrNull(): DXTErrorInfo | null {\n    if (this instanceof AuthStateDisconnected)\n      return (this as AuthStateDisconnected).error ?? null;\n\n    return null;\n  }\n\n  public nonSilentErrorOrNull(): DXTErrorInfo | null {\n    const isDisconnected = this instanceof AuthStateDisconnected;\n    const silent =\n      isDisconnected &&\n      typeof this.error?.isSilent === 'boolean' &&\n      this.error?.isSilent;\n\n    if (isDisconnected && !silent) return this.error ?? null;\n\n    return null;\n  }\n\n}\n\nexport class AuthStateDisconnected extends AuthState {\n  constructor(\n    public readonly error?: DXTErrorInfo,\n    public readonly isRedirecting: boolean = false\n  ) {\n    super();\n    deleteAuthStoredData();\n  }\n}\n\nexport class AuthStateChangingToken extends AuthState {\n  constructor(public readonly newToken: string) {\n    super();\n  }\n}\n\nexport class AuthStateLoading extends AuthState {\n}\n\nexport class AuthStateLoggedIn extends AuthState {\n  constructor(\n    public readonly authToken: string,\n    public readonly userInfo: UserPublicInfo,\n  ) {\n    super();\n    setStoredToken(authToken);\n    setStoredUserInfo(userInfo);\n  }\n}\n", "import { type Dispatch, type SetStateAction } from 'react';\n\nimport { type BasicAppResources } from '../../../app_resources/basic_app_resources';\n\nimport { type AuthState } from '../states';\n\nexport type OnRetryCallBack = () => Promise<boolean>;\n\nexport abstract class AuthAction {\n  abstract run(\n    authState: AuthState,\n    setAuthState: Dispatch<SetStateAction<AuthState>>,\n    app: BasicAppResources,\n    onRetryCallback: OnRetryCallBack | undefined | null\n  ): Promise<void>;\n}\n", "import { isRealObject } from \"@/objects\";\n\nexport function isBasicAppResources(app: any): boolean {\n  return (\n    app?.navigate != null &&\n    app.location != null &&\n    typeof app.retryCallback === 'function'\n  );\n}\n\nexport function isAppResources(app: any): boolean {\n  return (\n    isBasicAppResources(app) &&\n    isRealObject(app?.authState) &&\n    typeof app.authDispatch === 'function'\n  );\n}\n", "import { isNode } from \"@/environemnt\";\n\nconst DEFAULT_HOSTNAME = 'localhost';\nconst DEFAULT_PORT = '3000';\nconst DEFAULT_BASE_URL = `http://${DEFAULT_HOSTNAME}:${DEFAULT_PORT}`;\n\nconst baseUrl =\n  (isNode()\n    ? `http://${process.env.HOST ?? DEFAULT_HOSTNAME}:${process.env.PORT ?? DEFAULT_PORT}`\n    : window?.location?.origin) ?? DEFAULT_BASE_URL;\n\nexport const dxtApiConfig = {\n  baseUrl,\n};\n", "/// **************************************************************************\n///\n/// ApiRequestState classes\n///\nimport { type AxiosRequestConfig } from 'axios';\n\nimport { type DXTErrorInfo } from '../../domain/shared/errors/base';\n\n/// **************************************************************************\ntype DXTApiRequestStateMapFunction<\n  T,\n  D,\n  S extends DXTApiRequestState<T, D>,\n  R,\n> = (state: S) => R;\n\nexport abstract class DXTApiRequestState<T, D = any> {\n  constructor(public readonly originalRequest: AxiosRequestConfig<D>) {}\n\n  map<R>(options: {\n    success?: DXTApiRequestStateMapFunction<\n      T, D, DXTApiRequestStateSuccess<T, D>, R\n    >;\n    error?: DXTApiRequestStateMapFunction<\n      T, D, DXTApiRequestStateError<T, D>, R\n    >;\n  }): R {\n    const { success, error } = options;\n\n    if (this instanceof DXTApiRequestStateSuccess && success) return success(this);\n\n    if (this instanceof DXTApiRequestStateError && error) return error(this);\n\n    throw Error('Invalid ApiRequestState state');\n  }\n\n  public isError(): boolean {\n    return this instanceof DXTApiRequestStateError;\n  }\n\n  public errorOrNull(): DXTErrorInfo | null {\n    if (this instanceof DXTApiRequestStateError) return this.error;\n    return null;\n  }\n\n  public flat(): T | DXTErrorInfo {\n    return this.map<T | DXTErrorInfo>({\n      error: (errorState) => errorState.error,\n      success: (successState) => successState.data,\n    });\n\n  }\n}\n\nexport class DXTApiRequestStateError<T, D> extends DXTApiRequestState<T, D> {\n  constructor(\n    public readonly error: DXTErrorInfo,\n    originalRequest: AxiosRequestConfig<D>\n  ) {\n    super(originalRequest);\n  }\n}\n\nexport class DXTApiRequestStateSuccess<T, D> extends DXTApiRequestState<T, D> {\n  constructor(\n    public readonly data: T,\n    originalRequest: AxiosRequestConfig<D>\n  ) {\n    super(originalRequest);\n  }\n}\n", "import { axiosRequestPlus } from '@/axios/axiosRequestPlus';\nimport {\n  type AxiosRequestConfig,\n  type AxiosResponse,\n  type AxiosResponseHeaders,\n} from 'axios';\nimport { isBasicAppResources } from 'src/code.client/app_resources/utils';\nimport { dxtApiConfig } from 'src/config/dxtango_api';\nimport { type MinimalAppResources } from 'src/domain/shared/types';\n\nimport {\n  DXTApiMalformedResponse,\n  DXTError,\n  type DXTErrorInfo,\n  DXTException,\n  HTTP_STATUS_UNAVAILABLE,\n  DXTErrorCode,\n} from '../../domain/shared/errors/base';\n\nimport {\n  exceptionToDXTErrorInfo,\n  isErrorInfo,\n} from '../../domain/shared/errors/errors.utils';\n\nimport {\n  type DXTApiRequestState,\n  DXTApiRequestStateError,\n  DXTApiRequestStateSuccess,\n} from './DXTApiRequestState';\nimport { parseJSON } from '@core/json';\n\nexport interface DXTApiRequestConfig<D> extends AxiosRequestConfig<D> {\n  pathParams?: Record<string, string>;\n  silent?: boolean;\n}\n\nexport function createDXTApiParams<D>(\n  app?: MinimalAppResources,\n  options?: DXTApiRequestConfig<D>\n): AxiosRequestConfig<D> {\n  const {\n    headers: originalHeaders,\n    transformResponse: originalTransformers,\n    pathParams,\n    url: originalUrl,\n    ...remainingOptions\n  } = options ?? {};\n\n  let url = originalUrl;\n\n  if (typeof url === 'string' && pathParams != null) {\n    Object.entries(pathParams).forEach(([key, value]) => {\n      url = url?.replaceAll(`:${key}`, encodeURIComponent(value));\n    });\n  }\n\n  let newTransformers = [\n    (data: string, headers: AxiosResponseHeaders) => {\n      if (typeof data !== 'undefined') return parseJSON(data);\n    },\n  ];\n\n  const token = app?.authToken;\n\n  if (Array.isArray(originalTransformers)) {\n    newTransformers.push(...originalTransformers);\n  } else if (typeof originalTransformers === 'function') {\n    newTransformers.push(originalTransformers);\n  }\n\n  return {\n    headers: {\n      ...((token != null) ? { authorization: token } : null),\n      ...originalHeaders,\n    },\n    baseURL: dxtApiConfig.baseUrl,\n    url,\n    ...remainingOptions,\n    transformResponse: newTransformers,\n  };\n}\n\nexport async function dxtApiRequest<T, D = undefined>(\n  params: DXTApiRequestConfig<D>,\n  app?: MinimalAppResources\n): Promise<DXTApiRequestState<T, D>> {\n  const dxtParams = createDXTApiParams(app, params);\n\n  let retry = true;\n  while (retry) {\n    try {\n      const response = await axiosRequestPlus<\n        T,\n        AxiosResponse<T, D>,\n        D\n      >(dxtParams);\n\n      if (isErrorInfo(response?.data)) {\n        const dxtApiError = response?.data as unknown as DXTErrorInfo;\n\n        throw new DXTException(\n          new DXTError(dxtApiError.errorCode, {\n            extra: dxtApiError.extra,\n            isSilent: dxtApiError.isSilent,\n          })\n        );\n      }\n\n      if (response?.data === undefined)\n        throw new DXTApiMalformedResponse(\n          response?.status ?? HTTP_STATUS_UNAVAILABLE\n        );\n\n      const data: T = response.data;\n\n      return new DXTApiRequestStateSuccess(data, dxtParams);\n    } catch (error) {\n      const dxtApiError = exceptionToDXTErrorInfo(error);\n\n      const errorState = new DXTApiRequestStateError<T, D>(\n        dxtApiError,\n        dxtParams\n      );\n\n      if (!app || !isBasicAppResources(app)) return errorState;\n\n      if ((params?.silent) ?? false) return errorState;\n\n      retry =\n        typeof app.retryCallback === 'function' &&\n        (await app.retryCallback({ message: dxtApiError.error }));\n\n      if (!retry) return errorState;\n    }\n  }\n\n  const impossibleError = exceptionToDXTErrorInfo(new DXTException(DXTErrorCode.INTERNAL_SERVER_ERROR, 'Impossible state'));\n\n  const impossibleRequestState = new DXTApiRequestStateError<T, D>(\n    impossibleError,\n    dxtParams\n  );\n\n  return impossibleRequestState;\n}\n", "export const API_BASE_PATH = '/api';\n", "import { join } from \"path\";\nimport { API_BASE_PATH } from \"./consts\";\n\n\nexport function apiPath(path: string) {\n  return join(API_BASE_PATH, path);\n}", "import { apiPath } from \"../shared\";\n\nexport const API_AUTH_LOGIN   = apiPath( '/auth/login' );\nexport const API_AUTH_LOGOUT  = apiPath( '/auth/logout' );\nexport const API_AUTH_CONNECT = apiPath( '/auth/connect');", "import { type BasicAppResources } from 'src/code.client/app_resources/basic_app_resources';\nimport { type DXTApiOkResult } from 'src/api-universal/types';\n\nimport {\n  type AuthInfoResult,\n} from '../../domain/auth/results';\n\nimport {\n  type LoginUserInput,\n} from '../../domain/auth/inputs';\n\nimport { dxtApiRequest } from '../shared/dxtApiRequest';\nimport {\n  type DXTApiRequestState,\n  DXTApiRequestStateError,\n  DXTApiRequestStateSuccess,\n} from '../shared/DXTApiRequestState';\n\nimport { API_AUTH_CONNECT, API_AUTH_LOGIN, API_AUTH_LOGOUT } from './paths';\n\n\nexport const userAuthConnectRequest = async (\n  token: string,\n  app: BasicAppResources,\n  silent: boolean\n) => {\n  const originalUserInfo =\n    token === app.authState?.authToken ? app.authState?.userInfo : null;\n\n  const user_info_updated_at = originalUserInfo\n    ? originalUserInfo.timestamp_modificacion\n    : 0;\n\n  const result = await dxtApiRequest<AuthInfoResult>(\n    {\n      url: API_AUTH_CONNECT,\n      method: 'POST',\n      headers: { authorization: token },\n      params: {\n        user_info_updated_at,\n      },\n      silent,\n    },\n    app\n  );\n\n  return result.map<DXTApiRequestState<AuthInfoResult>>({\n    error: (errorState) => {\n      return new DXTApiRequestStateError(\n        errorState.error,\n        errorState.originalRequest\n      );\n    },\n    success: (success) => {\n      if (success.data == null && originalUserInfo) {\n        return new DXTApiRequestStateSuccess(\n          {\n            auth_token: token,\n            user: originalUserInfo,\n          },\n          success.originalRequest\n        );\n      }\n\n      return new DXTApiRequestStateSuccess(\n        success.data,\n        success.originalRequest\n      );\n    },\n  });\n};\n\n\nexport const userLoginRequest = async (\n  input: LoginUserInput,\n  app: BasicAppResources\n) => {\n  return await dxtApiRequest<AuthInfoResult, LoginUserInput>(\n    {\n      url: API_AUTH_LOGIN,\n      data: input,\n      method: 'POST',\n      silent: true\n    },\n    app\n  );\n};\n\n\nexport const userLogoutRequest = async (app: BasicAppResources) => {\n  return await dxtApiRequest<DXTApiOkResult>(\n    {\n      url: API_AUTH_LOGOUT,\n      method: 'POST',\n    },\n    app\n  );\n};\n", "import { type Dispatch, type SetStateAction } from 'react';\n\nimport { type BasicAppResources } from 'src/code.client/app_resources/basic_app_resources';\n\nimport { type DXTErrorCallback } from 'src/domain/shared/errors';\nimport { userLoginRequest } from 'src/api-client/auth';\nimport { type DXTApiRequestState } from 'src/api-client/shared/DXTApiRequestState';\n\nimport {\n  type AuthState,\n  AuthStateDisconnected,\n  AuthStateLoading,\n  AuthStateLoggedIn,\n} from '../states';\nimport { AuthAction, type OnRetryCallBack } from './base';\nimport { type LoginUserInput } from 'src/domain/auth/inputs';\nimport { type AuthInfoResult } from 'src/domain/auth/results';\n\nexport class AuthActionLogin extends AuthAction {\n  constructor(\n    readonly params: LoginUserInput,\n    readonly errorCallback?: DXTErrorCallback\n  ) {\n    super();\n  }\n\n  async run(\n    authState: AuthState,\n    setAuthState: Dispatch<SetStateAction<AuthState>>,\n    app: BasicAppResources,\n    onRetryCallback: OnRetryCallBack | undefined | null\n  ): Promise<void> {\n    setAuthState(new AuthStateLoading());\n\n    const response: DXTApiRequestState<AuthInfoResult, LoginUserInput> = await userLoginRequest(this.params, app);\n\n    void response.map({\n      success: async (successState) => {\n        const { user, auth_token } = successState.data;\n\n        setAuthState(new AuthStateLoggedIn(auth_token, user));\n      },\n\n      error: async (errorState) => {\n        const apiError = errorState.error;\n\n        setAuthState(new AuthStateDisconnected(apiError));\n\n        if (this.errorCallback) this.errorCallback(apiError);\n      },\n    });\n  }\n}\n", "import { join } from \"path\";\nimport { URL_ROOT_PATH } from \"src/config/url_paths\";\nimport { UserMinimalInfo } from \"src/domain/user/entities/user\";\nimport { NO_DATE } from \"src/texts/common\";\n\nexport const dateToLocale = (value: Date|string|undefined): string => {\n  if (value==null) return NO_DATE;\n\n  const date = value instanceof Date ? value : new Date(value);\n\n  return date.toLocaleDateString('es-AR', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  });\n};\n\nexport function appPath(path: string) {\n  return join(URL_ROOT_PATH, path);\n}\n\nexport function resolveUserStatusColor(user:UserMinimalInfo): string {\n  const { habilitado_en_dxt, habilitado_en_tango, usuario_tango_existe } = user;\n\n  return (\n    !habilitado_en_dxt ? 'grey.500' :\n    habilitado_en_dxt && !usuario_tango_existe ? 'red.400' :\n    habilitado_en_dxt && usuario_tango_existe && habilitado_en_tango === false ? 'yellow.400' :\n    'green.400'\n  );\n}\n\nexport function pathParamsToUrl(url: string, pathParams: Record<string, string | number> | null) {\n  if (typeof url === 'string' && pathParams != null) {\n    Object.entries(pathParams).forEach(([key, value]) => {\n      url = url?.replaceAll(`:${key}`, encodeURIComponent(value));\n    });\n  }\n  \n  return url;\n}", "export const YES = 'S\u00ED';\nexport const NO = 'No';\nexport const RETRY = 'Reintentar';\nexport const CANCEL = 'Cancelar';\nexport const CLOSE = 'Cerrar';\nexport const SAVE = 'Guardar';\nexport const DELETE = 'Eliminar';\n\nexport const NO_NAME = 'Sin nombre';\nexport const NO_DATE = 'Sin fecha';\n\nexport const NONE_F = 'Ninguna';\nexport const NONE_M = 'Ninguno';\n\nexport const NONEXISTENT_PRODUCT = 'Art\u00EDculo inexistente';\n", "import { appPath } from '#/utils';\nimport path from 'path';\n\nexport const URL_ROOT_PATH = '/';\n\nexport const URL_AUTH_BASE_PATH = path.join(URL_ROOT_PATH, 'auth');\n\nexport const URL_AUTH_LOGIN_PATH = appPath('/');\n\nexport const URL_PEDIDOS_PATH = appPath('/orders');\nexport const URL_MAIN_PATH = URL_PEDIDOS_PATH;\n\nexport const URL_PEDIDOS_ADD_PATH = appPath('/orders/:client/add');\nexport const URL_PEDIDOS_EDIT_PATH = appPath('/orders/:id/edit');\n\nexport const URL_SETTINGS_PATH = appPath('/settings');\nexport const URL_SETTINGS_TANGO_PATH = appPath('/settings/tango');\nexport const URL_SETTINGS_COMPANY_PATH = appPath('/settings/company');\nexport const URL_SETTINGS_MISC_PATH = appPath('/settings/misc');\n\nexport const URL_SETTINGS_CUSTOMERS_PATH = appPath('/settings/users/customers');\nexport const URL_SETTINGS_CUSTOMERS_ADD_PATH = appPath('/settings/users/customers/add');\nexport const URL_SETTINGS_CUSTOMERS_EDIT_PATH = appPath('/settings/users/customers/:id/edit');\n\nexport const URL_SETTINGS_VENDORS_PATH = appPath('/settings/users/vendors');\nexport const URL_SETTINGS_VENDORS_ADD_PATH = appPath('/settings/users/vendors/add');\nexport const URL_SETTINGS_VENDORS_EDIT_PATH = appPath('/settings/users/vendors/:id/edit');\n\nexport const URL_SETTINGS_ARTICULOS_PRINT = appPath('/settings/lists/print');\nexport const URL_SETTINGS_ARTICULOS_SCREEN = appPath('/settings/lists/screen');", "import { type Dispatch, type SetStateAction } from 'react';\n\nimport { type BasicAppResources } from 'src/code.client/app_resources/basic_app_resources';\nimport { URL_AUTH_LOGIN_PATH } from 'src/config/url_paths';\nimport { userLogoutRequest } from 'src/api-client/auth';\n\nimport { type AuthState, AuthStateDisconnected, AuthStateLoggedIn } from '../states';\nimport { AuthAction, type OnRetryCallBack } from './base';\n\nexport class AuthActionLogout extends AuthAction {\n  readonly avoidCallingAPI: boolean;\n  // doNotCallAPI: used when user token has already expired or is invalid\n  // one less call to the API since user is in fact unauthorized\n  constructor(avoidCallingAPI?: boolean) {\n    super();\n\n    this.avoidCallingAPI = avoidCallingAPI ?? false;\n  }\n\n  async run(\n    authState: AuthState,\n    setAuthState: Dispatch<SetStateAction<AuthState>>,\n    app: BasicAppResources,\n    onRetryCallback: OnRetryCallBack | undefined | null\n  ): Promise<void> {\n    if (authState instanceof AuthStateLoggedIn && !this.avoidCallingAPI) {\n      await userLogoutRequest({\n        ...app,\n        authState,\n      });\n    }\n\n    setAuthState(new AuthStateDisconnected(undefined));\n\n    app.navigate(URL_AUTH_LOGIN_PATH);\n  }\n}\n", "import { type Dispatch, type SetStateAction } from 'react';\n\nimport { type DXTErrorCallback } from 'src/domain/shared/errors';\nimport { userAuthConnectRequest } from 'src/api-client/auth';\n\nimport { type BasicAppResources } from '../../../app_resources/basic_app_resources';\n\nimport {\n  type AuthState,\n  AuthStateDisconnected,\n  AuthStateLoading,\n  AuthStateLoggedIn,\n} from '../states';\nimport { AuthAction, type OnRetryCallBack } from './base';\n\nexport class AuthActionChangeToken extends AuthAction {\n  constructor(\n    readonly newToken: string,\n    readonly tokenChangedFromApp: boolean,\n    readonly errorCallback?: DXTErrorCallback\n  ) {\n    super();\n  }\n\n  override async run(\n    authState: AuthState,\n    setAuthState: Dispatch<SetStateAction<AuthState>>,\n    app: BasicAppResources,\n    onRetryCallback: OnRetryCallBack | undefined | null\n  ): Promise<void> {\n    setAuthState(new AuthStateLoading());\n\n    const { newToken } = this;\n\n    const response = await userAuthConnectRequest(newToken, app, true);\n\n    response.map({\n      success: (stateSuccess) => {\n        const userInfo = stateSuccess.data.user;\n\n        setAuthState(\n          new AuthStateLoggedIn(newToken, userInfo)\n        );\n      },\n      error: (errorState) => {\n        const apiError = errorState.error;\n\n        setAuthState(new AuthStateDisconnected(apiError));\n\n        if (this.errorCallback) this.errorCallback(apiError);\n      },\n    });\n  }\n}\n", "import { type NavigateFunction } from '@remix-run/react';\n\nimport { HttpStatus } from '@/http';\nimport { URL_MAIN_PATH, URL_ROOT_PATH } from 'src/config/url_paths';\n\nimport { type BasicAppResources } from '../app_resources/basic_app_resources';\nimport { AuthActionLogout, AuthStateLoggedIn } from './auth_context';\n\nexport function isTokenError(errorCode: number): boolean {\n  return (\n    errorCode === HttpStatus.UNAUTHORIZED || errorCode === HttpStatus.FORBIDDEN\n  );\n}\n\nexport const checkTokenErrorAndRedirect = async (\n  app: BasicAppResources,\n  status: number\n) => {\n  const forceLogin = isTokenError(status);\n\n  if (!forceLogin) return false;\n\n  if (app.authState && app.authState instanceof AuthStateLoggedIn) {\n    await app.authDispatch?.call(this, new AuthActionLogout(true));\n  }\n\n  redirectLoginWithReturnUrl(app.navigate);\n\n  return true;\n};\n\nexport function redirectLoginWithReturnUrl(navigate: NavigateFunction) {\n  let returnUrl: string | null;\n\n  if (window?.location != null) {\n    const { pathname, search, hash } = window?.location;\n    returnUrl = `${pathname}${search}${hash}`;\n  } else {\n    returnUrl = null;\n  }\n\n  const newSearchParams = (returnUrl != null)\n    ? `?${new URLSearchParams([['returnUrl', returnUrl]]).toString()}`\n    : '';\n\n  navigate(`${URL_ROOT_PATH}${newSearchParams}`);\n}\n\nexport function loggedInRedirect(app: BasicAppResources) {\n  if ( app.authState instanceof AuthStateLoggedIn ) {\n    const searchParams = new URLSearchParams(app.location.search);\n    \n    const returnUrl = searchParams.get('returnUrl');\n    \n    const redirectURL = (returnUrl != null) && returnUrl !== '/' ? returnUrl : URL_MAIN_PATH;\n\n    app.navigate(redirectURL, {\n      replace: true,\n    });\n  }\n}\n", "import { type Dispatch, type SetStateAction } from 'react';\n\nimport { type BasicAppResources } from 'src/code.client/app_resources/basic_app_resources';\nimport { isTokenError } from 'src/code.client/auth/utils';\nimport { DXTErrorCode, DXTException, type DXTErrorCallback } from 'src/domain/shared/errors';\n\nimport { userAuthConnectRequest } from 'src/api-client/auth/requests';\n\nimport { getStoredToken } from '../auth_store.utils';\nimport { type AuthState, AuthStateDisconnected, AuthStateLoggedIn } from '../states';\nimport { AuthAction, type OnRetryCallBack } from './base';\nimport { type UserPublicInfo } from 'src/domain/user/entities/user';\n\nexport class AuthActionRefreshAll extends AuthAction {\n  constructor(\n    readonly currentUserInfo: UserPublicInfo,\n    readonly errorCallback?: DXTErrorCallback\n  ) {\n    super();\n  }\n\n  async run(\n    authState: AuthState,\n    setAuthState: Dispatch<SetStateAction<AuthState>>,\n    app: BasicAppResources,\n    onRetryCallback: OnRetryCallBack | undefined | null\n  ): Promise<void> {\n    if (!(authState instanceof AuthStateLoggedIn)) throw new DXTException(DXTErrorCode.INTERNAL_SERVER_ERROR, 'Must be logged in');\n\n    const storedToken = getStoredToken();\n    if ((storedToken == null) || (authState.authToken !== storedToken)) {\n      setAuthState( new AuthStateDisconnected() );\n      return ;\n    }\n\n    const response = await userAuthConnectRequest(authState.authToken, app, true);\n\n    response.map({\n      error: (errorState) => {\n        const apiError = errorState.error;\n\n        if (isTokenError(apiError.status)) {\n          setAuthState( new AuthStateDisconnected() );\n          \n        }\n      },\n      success: (success) => {\n        const currentUser = authState.userInfo;\n        const currentAuthToken = authState.authToken;\n\n        const newUser = success.data.user;\n        const newAuthToken = success.data.auth_token;\n\n        if (\n          currentAuthToken !== newAuthToken ||\n          currentUser.timestamp_modificacion !== newUser.timestamp_modificacion\n        ) {\n          setAuthState(\n            new AuthStateLoggedIn(newAuthToken, newUser)\n          );\n        }\n      },\n    });\n  }\n}\n", "// ** React Imports\nimport {\n  createContext,\n  type PropsWithChildren,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport _ from 'lodash';\nimport { URL_AUTH_LOGIN_PATH } from 'src/config/url_paths';\nimport { eventBus } from 'src/event_bus';\n\nimport { useBasicAppResources } from '../../app_resources/basic_app_resources';\nimport { loggedInRedirect } from '../utils';\nimport { AuthActionChangeToken } from './actions';\nimport { type AuthAction, type OnRetryCallBack } from './actions/base';\nimport {\n  getStoredToken,\n  getStoredUserInfo,\n  useTokenExistenceCheck,\n} from './auth_store.utils';\nimport {\n  type AuthState,\n  AuthStateChangingToken,\n  AuthStateDisconnected,\n  AuthStateLoggedIn,\n} from './states';\n\n// import useSessionStorageState from 'use-session-storage-state'\n\nexport type AuthDispatch = (action: AuthAction) => Promise<void>;\n\nexport interface AuthContextValues {\n  state: AuthState;\n  dispatch: AuthDispatch;\n  retry: () => Promise<void>;\n}\n\nexport const AUTH_NEW_TOKEN_EVENT = 'auth_new_token';\n\n// ** Defaults\nconst defaultValues: AuthContextValues = {\n  state: _resolveState(),\n  dispatch: async (action: AuthAction) => {\n    await Promise.resolve();\n  },\n  retry: async () => {\n    await Promise.resolve();\n  },\n};\n\nconst AuthContext = createContext(defaultValues);\n\nfunction _resolveState() {\n  if (typeof window === 'undefined') return new AuthStateDisconnected();\n\n  const queryparams = new URLSearchParams(window.location.search);\n\n  const storedToken = getStoredToken();\n\n  const newToken = queryparams.get('at') ?? null;\n  if (newToken != null && newToken !== storedToken) {\n    // prioritize token sent by the app\n    return new AuthStateChangingToken(newToken);\n  }\n\n  if (storedToken == null) {\n    return new AuthStateDisconnected();\n  }\n\n  const forceRefresh = queryparams.get('force_refresh') === '1' ?? false;\n\n  if (forceRefresh) {\n    return new AuthStateChangingToken(storedToken);\n  }\n\n  const userInfo = getStoredUserInfo();\n\n  if (userInfo) return new AuthStateLoggedIn(storedToken, userInfo);\n\n  return new AuthStateChangingToken(storedToken);\n}\n\nexport interface AuthProviderProps extends PropsWithChildren {\n  onRetry?: OnRetryCallBack;\n}\n\nconst AuthProvider = ({ children, onRetry }: AuthProviderProps) => {\n  // ** States\n  const [authState, setAuthState] = useState<AuthState>(_resolveState());\n\n  const lastAction = useRef<AuthAction | null>(null);\n\n  const app = useBasicAppResources(authState);\n\n  // save appRef to have an updated version on the dispatch function\n  const appRef = useRef(app);\n\n  const forceLogoutAlreadyVerified = useRef(false);\n\n  // ** Hooks\n  const tokenExistence = useTokenExistenceCheck();\n\n  const dispatch = async (action: AuthAction) => {\n    lastAction.current = action;\n    await action.run(authState, setAuthState, appRef.current, onRetry);\n  };\n\n  eventBus.removeAllListeners(AUTH_NEW_TOKEN_EVENT);\n  eventBus.on(AUTH_NEW_TOKEN_EVENT, (newToken: string) => {\n    (async () => {\n      await dispatch(new AuthActionChangeToken(newToken, true));\n    })().catch((e) => {});\n  });\n\n  // update app with dispatch for future use on BasicAppResources\n  appRef.current = useBasicAppResources(authState, dispatch);\n\n  const retry = async () => {\n    if (lastAction.current)\n      await lastAction.current.run(authState, setAuthState, app, onRetry);\n  };\n\n  // resolve state when token existance changes on window storage\n  useEffect(() => {\n    // console.log(\"TOKEN EXISTENCE: \"+tokenExistence)\n\n    // hack: storage calls are synchronous, use a small timeout to wait\n    setTimeout(() => {\n      if (authState instanceof AuthStateChangingToken) return;\n\n      const newState = _resolveState();\n\n      if (_.isEqual(newState, authState)) return;\n\n      setAuthState(newState);\n    }, 250);\n  }, [tokenExistence]);\n\n  useEffect(() => {\n    if (authState instanceof AuthStateChangingToken) {\n      (async () => {\n        await dispatch(new AuthActionChangeToken(authState.newToken, false));\n      })().catch((e) => {});\n    }\n  }, []);\n\n  useEffect(() => {\n    // redirect user if logged in and into any of the following pages\n    if (app.location.pathname === URL_AUTH_LOGIN_PATH) {\n      loggedInRedirect(app);\n    }\n  }, [authState, app.location]);\n\n  const values = useMemo<AuthContextValues>(\n    () => ({\n      state: authState,\n      dispatch,\n      retry,\n    }),\n    [authState]\n  );\n\n  return <AuthContext.Provider value={values}>{children}</AuthContext.Provider>;\n};\n\nexport { AuthContext, AuthProvider };\n\nexport const useAuth = () => useContext(AuthContext);\n", "import Nanobus from 'nanobus';\n\nexport abstract class BusEvent<T> {\n  constructor(\n    readonly name: string,\n    readonly payload: T,\n  ){}\n}\n\n\nexport const eventBus = new Nanobus();\n\n\nexport function emitBusEvent(event: BusEvent<any>) {\n  eventBus.emit(event.name, event);\n}\n", "import {\n  type Location,\n  type NavigateFunction,\n  useLocation,\n  useNavigate,\n} from '@remix-run/react';\n\nimport {\n  type AuthDispatch,\n  type AuthState,\n  AuthStateLoggedIn,\n  useAuth,\n} from 'src/code.client/auth/auth_context';\nimport { useRetryDialog } from '~/dialogs/RetryDialog';\nimport { type MinimalAppResources, type RetryCallback } from 'src/domain/shared/types';\n\nexport interface BasicAppResources extends MinimalAppResources {\n  location: Location;\n  navigate: NavigateFunction;\n  authState?: AuthStateLoggedIn;\n  authDispatch?: AuthDispatch;\n  retryCallback?: RetryCallback;\n}\n\nexport function useBasicAppResources(\n  authStateOverride?: AuthState,\n  authDispatchOverride?: AuthDispatch\n): BasicAppResources {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const auth = useAuth();\n  const authState = authStateOverride ?? auth.state;\n  const authDispatch = authDispatchOverride ?? auth.dispatch;\n  const retryCallback = useRetryDialog();\n\n  // const { isOnline } = useClientNetworkStatus();\n  const authToken = authState.authTokenString();\n\n  return {\n    authToken,\n    location,\n    navigate,\n    ...(authState instanceof AuthStateLoggedIn\n      ? { authState, authDispatch }\n      : {}),\n    retryCallback,\n  };\n}\n", "import { type ModalComponentProps, useModal } from 'react-hooks-async-modal';\nimport { type RetryCallback, type RetryProps } from 'src/domain/shared/types';\nimport { ERRORS_FALLBACK } from 'src/texts/dxt_error';\n\nimport { CustomDialog } from './CustomDialog';\n\nexport const RetryDialog = ({\n  message,\n  retryable,\n  onResolve,\n}: RetryProps & ModalComponentProps<boolean>) => {\n  retryable = retryable ?? true;\n\n  const handleCancel = () => {\n    onResolve(false);\n  };\n\n  const handleRetry = () => {\n    onResolve(true);\n  };\n\n  return (\n    <CustomDialog\n      isOpen={true}\n      handleCancel={handleCancel}\n      handleAccept={retryable ? handleRetry : undefined}\n      dialogContents={message ?? ERRORS_FALLBACK}\n    />\n  );\n};\n\nexport function useRetryDialog(): RetryCallback {\n  return useModal<RetryProps | undefined, boolean>(RetryDialog);\n}\n", "export const VALIDATION_ERROR = 'Error de validaci\u00F3n de datos';\nexport const ERRORS_FALLBACK = 'Error desconocido. Intente nuevamente en unos momentos';\n", "import { useRef } from 'react';\n\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  Button,\n  type Theme,\n} from '@chakra-ui/react';\n\nimport { CANCEL, RETRY } from 'src/texts/common';\nimport { theme } from '~/theme';\n\nexport interface CustomizedDialogTitleProps {\n  children?: React.ReactNode;\n  handleCancel?: () => void;\n}\n\nexport interface CustomDialogProps {\n  dialogTitle?: string | null;\n  dialogSize?: keyof Theme['sizes']['container'];\n  dialogContents?: React.ReactNode;\n  isOpen: boolean;\n  handleCancel: () => void;\n  handleCancelWording?: string;\n  handleAccept?: () => void;\n  handleAcceptWording?: string;\n}\n\nexport function CustomDialog(props: CustomDialogProps) {\n  const {\n    dialogTitle,\n    dialogContents,\n    dialogSize,\n    isOpen,\n    handleCancel,\n    handleCancelWording,\n    handleAccept,\n    handleAcceptWording,\n  } = props;\n\n  const cancelRef = useRef(null);\n\n  const containerSizes = theme.sizes?.container as\n    | {\n        [key in keyof Theme['sizes']['container']]: string | number;\n      }\n    | undefined;\n\n  const maxWidth = containerSizes?.[dialogSize ?? 'sm'];\n\n  return (\n    <AlertDialog\n      onClose={handleCancel}\n      aria-labelledby='customized-dialog-title'\n      isOpen={isOpen}\n      leastDestructiveRef={cancelRef}\n    >\n      <AlertDialogOverlay\n        bg='blackAlpha.300'\n        backdropFilter='auto'\n        backdropInvert='80%'\n        backdropBlur='2px'\n      >\n        <AlertDialogContent maxWidth={maxWidth}>\n          {dialogTitle != null && (\n            <AlertDialogHeader sx={{ m: 0, p: 3 }}>\n              {dialogTitle ?? <>&nbsp;</>}\n            </AlertDialogHeader>\n          )}\n          <AlertDialogBody>{dialogContents ?? <>&nbsp;</>}</AlertDialogBody>\n\n          <AlertDialogFooter>\n            <Button\n              ref={cancelRef}\n              variant='contained'\n              color='darkGrey'\n              onClick={handleCancel}\n            >\n              {handleCancelWording ?? CANCEL}\n            </Button>\n            {handleAccept && (\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={handleAccept}\n              >\n                {handleAcceptWording ?? RETRY}\n              </Button>\n            )}\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialogOverlay>\n    </AlertDialog>\n  );\n}\n", "import {\n  extendTheme,\n  StyleFunctionProps,\n  type ThemeConfig\n} from '@chakra-ui/react';\n\nimport { inputTheme } from './components/input';\nimport { tableTheme } from './components/table';\n\nconst activeLabelStyles = {\n  transform: 'scale(0.85) translateY(-24px)',\n};\n\nconst config: ThemeConfig = extendTheme({\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n  styles: {\n    global: (props: StyleFunctionProps) => ({\n      body: {\n        backgroundColor: props.colorMode === 'dark' ? 'gray.900' : 'gray.300',\n      }\n    })\n  },\n  fonts: {\n    body: 'Roboto, sans-serif',\n    heading: 'Roboto, sans-serif',\n  },\n  components: {\n    Table: tableTheme,\n    Input: inputTheme,\n  },\n});\n\nexport const theme = extendTheme(config);\n", "import { inputAnatomy } from '@chakra-ui/anatomy';\nimport { createMultiStyleConfigHelpers } from '@chakra-ui/react';\nimport { getColorVar, mode } from '@chakra-ui/theme-tools';\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(inputAnatomy.keys);\n\n\nconst variantOutlineStyle = definePartsStyle((props) => {\n  const { theme } = props\n\n  const ec = mode(\"red.500\", \"red.300\")(props);\n  \n  return {\n    field: {\n      _invalid: {\n        borderColor: `${getColorVar(theme, ec)} !important`,\n        boxShadow: `0 0 0 1px ${getColorVar(theme, ec)} !important`,\n      },\n    }\n  }\n});\n\nconst variants = {\n  outline: variantOutlineStyle,\n};\n\nexport const inputTheme = defineMultiStyleConfig({ variants });\n", "import { tableAnatomy } from '@chakra-ui/anatomy';\nimport { createMultiStyleConfigHelpers } from '@chakra-ui/react';\n\nconst { definePartsStyle, defineMultiStyleConfig } =\n  createMultiStyleConfigHelpers(tableAnatomy.keys);\n\nconst variantGray = definePartsStyle((props) => {\n  const { colorScheme: c, colorMode } = props;\n\n  return {\n    thead: {\n      tr: {\n        th: {\n          background: colorMode === 'light' ? `${c}.300` : `${c}.900`,\n        },\n      },\n    },\n    tbody: {\n      tr: {\n        '&:nth-of-type(even)': {\n          td: {\n            background: colorMode === 'light' ? `${c}.100` : `${c}.800`,\n          },\n        },\n      },\n    },\n  };\n});\n\nconst variantStripedOverCard = definePartsStyle((props) => {\n  const { colorScheme: c, colorMode } = props;\n\n  return {\n    table: {\n      thead: {\n        tr: {\n          th: {\n            background: colorMode === 'light' ? `${c}.300` : `${c}.900`,\n          },\n        },\n      },\n      'tbody > tr:nth-of-type(even)': {\n        background: colorMode === 'light' ? `${c}.50` : `${c}.800`,\n      },\n      'tbody > tr:nth-of-type(odd)': {\n        background: colorMode === 'light' ? `${c}.100` : `${c}.700`,\n      },\n    },\n  };\n});\n\nconst variantStripedOverCardWithHover = definePartsStyle((props) => {\n  const { colorScheme: c, colorMode } = props;\n\n  return {\n    table: {\n      thead: {\n        tr: {\n          th: {\n            background: colorMode === 'light' ? `${c}.300` : `${c}.900`,\n            fontSize: 'sm',\n          },\n        },\n      },\n      'tbody > tr:nth-of-type(even)': {\n        background: colorMode === 'light' ? `${c}.50` : `${c}.700`,\n      },\n      'tbody > tr:nth-of-type(even):hover': {\n        background: colorMode === 'light' ? `${c}.200` : `${c}.800`,\n      },\n      'tbody > tr:nth-of-type(odd)': {\n        background: colorMode === 'light' ? `${c}.100` : `${c}.600`,\n      },\n      'tbody > tr:nth-of-type(odd):hover': {\n        background: colorMode === 'light' ? `${c}.200` : `${c}.800`,\n      },\n    },\n  };\n});\n\nexport const tableTheme = defineMultiStyleConfig({\n  variants: {\n    grayOverCard: variantGray,\n    stripedOverCard: variantStripedOverCard,\n    stripedHoverOverCard: variantStripedOverCardWithHover,\n  },\n});\n", "import { useContext, useEffect } from 'react';\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react';\n\nimport { withEmotionCache } from '@emotion/react';\n\nimport {\n  ClientStyleContext,\n  ServerStyleContext,\n} from '../code.client/contexts/ServerStyleContext';\n\ninterface RootDocumentProps {\n  children: React.ReactNode;\n  colorMode: string | undefined;\n}\n\nexport const RootDocument = withEmotionCache(\n  ({ children, colorMode }: RootDocumentProps, emotionCache) => {\n    const serverStyleData = useContext(ServerStyleContext);\n    const clientStyleData = useContext(ClientStyleContext);\n\n    // Only executed on client\n    useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html\n        lang='es'\n        {...(colorMode != null && {\n          'data-theme': colorMode,\n          style: { colorScheme: colorMode },\n        })}\n      >\n        <head>\n          <Meta />\n          <Links />\n          {serverStyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(' ')}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n        <body\n          {...(colorMode != null && {\n            className: `chakra-ui-${colorMode}`,\n          })}\n        >\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </body>\n      </html>\n    );\n  }\n);\n", "// context.tsx\nimport { createContext } from 'react';\n\nexport interface ServerStyleContextData {\n  key: string;\n  ids: string[];\n  css: string;\n}\n\nexport const ServerStyleContext = createContext<\n  ServerStyleContextData[] | null\n>(null);\n\nexport interface ClientStyleContextData {\n  reset: () => void;\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\n  null\n);\n", "import { useNavigate, useParams } from '@remix-run/react';\n\nimport { settings } from '#/crud_configs/users';\n\nimport { integerValidator } from '@core/validate_schema';\nimport {\n  URL_SETTINGS_CUSTOMERS_PATH,\n  URL_SETTINGS_PATH,\n} from 'src/config/url_paths';\nimport { CommonErrors } from '~/components/CommonErrors';\nimport { SettingsFormHeading } from '~/components/SettingsFormHeading';\n\nimport { FormEdit } from './components';\n\nexport default function Edit() {\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const typeSettings = settings.customers;\n\n  try {\n    if (integerValidator(id)) {\n      return (\n        <>\n          <SettingsFormHeading\n            title={typeSettings.titles.edit}\n            actionButton={{\n              label: 'Cancelar',\n              buttonProps: {\n                colorScheme: 'gray',\n                onClick: () => {\n                  navigate(URL_SETTINGS_CUSTOMERS_PATH);\n                },\n              },\n            }}\n          />\n          <FormEdit typeSettings={typeSettings} id={id as unknown as string} />\n        </>\n      );\n    }\n  } catch (e) {\n    return (\n      <CommonErrors\n        error={'Usuario no encontrado'}\n        buttonProps={{\n          label: 'Volver a Configuraci\u00F3n',\n          colorScheme: 'green',\n          onClick: () => {\n            navigate(URL_SETTINGS_PATH);\n          },\n        }}\n      />\n    );\n  }\n}\n", "import { useEffect } from 'react';\n\nimport {\n  type FetchState,\n  FetchStateError,\n  useAxiosFetch,\n} from '@/react-hooks/useAxiosFetch';\n\nimport {\n  type DXTErrorInfo,\n  exceptionToDXTErrorInfo,\n} from 'src/domain/shared/errors';\n\nimport {\n  createDXTApiParams,\n  type DXTApiRequestConfig,\n} from 'src/api-client/shared/dxtApiRequest';\n\nimport { useBasicAppResources } from '../app_resources/basic_app_resources';\nimport { checkTokenErrorAndRedirect } from '../auth/utils';\n\n\nexport interface UseDXTApiFetchResult<T, D> {\n  state: FetchState<T, D, DXTErrorInfo>;\n  retry: () => Promise<void>;\n}\n\n/// **************************************************************************\n///\n/// useCloudFetch\n///\n/// <T> Data return type\n/// <D> Post input data type\n///\n/// **************************************************************************\n\nexport function useDXTApiFetch<T = any, D = any>(\n  params: DXTApiRequestConfig<D>\n): UseDXTApiFetchResult<T, D> {\n  const app = useBasicAppResources();\n  const retryCallback = app.retryCallback;\n\n  /* avoid multiple retries when server response is a 500 error without any error specs */\n\n  const dxtApiParams = createDXTApiParams(app, params);\n\n  const { state, retry } = useAxiosFetch<T, D, DXTErrorInfo>(\n    dxtApiParams,\n    (axiosError) => {\n      return exceptionToDXTErrorInfo(axiosError);\n    }\n  );\n\n  useEffect(() => {\n    (async () => {\n      const isSilent = params?.silent ?? false;\n\n      if (isSilent) return;\n\n      if (!(state instanceof FetchStateError)) return;\n\n      // client network errors shouldn't be handled by the modal\n      // only if it has never been retried before\n\n      const stateError: DXTErrorInfo = state.error;\n\n      // is this a token error? go and log back in\n      const isTokenError = await checkTokenErrorAndRedirect(app, stateError.status);\n      if (isTokenError) return;\n\n      if (\n        retryCallback &&\n        (await retryCallback({\n          message: stateError.error,\n        }))\n      )\n\n      retry();\n    })();\n  }, [state]);\n\n  return {\n    state,\n    retry,\n  };\n}\n", "// ** React Imports\nimport { useEffect, useState } from 'react';\n\nimport {\n  AxiosError,\n  AxiosRequestConfig,\n  AxiosResponse,\n} from 'axios';\n\nimport {\n  axiosRequestPlus,\n  AxiosRequestPlusError,\n} from '../axios/axiosRequestPlus';\nimport { IfEqual } from '../typescript';\n\n/// **************************************************************************\n///\n/// FetchState classes\n///\n/// **************************************************************************\ntype FetchStateMapFunction<T, D, E, S extends FetchState<T, D, E>, R> = (\n  state: S\n) => R;\n\nexport abstract class FetchState<T, D = any, E = AxiosError<T, D>> {\n  constructor(public readonly originalRequest: AxiosRequestConfig<D>) {}\n\n  mapOrElse<R>(options: {\n    loading?: FetchStateMapFunction<T, D, E, FetchStateLoading<T, D, E>, R>;\n    success?: FetchStateMapFunction<T, D, E, FetchStateSuccess<T, D, E>, R>;\n    error?: FetchStateMapFunction<T, D, E, FetchStateError<T, D, E>, R>;\n    orElse: FetchStateMapFunction<T, D, E, FetchState<T, D, E>, R>;\n  }): R {\n    const { loading, success, error, orElse } = options;\n\n    if (this instanceof FetchStateLoading && loading) return loading(this);\n    if (this instanceof FetchStateSuccess && success) return success(this);\n    if (this instanceof FetchStateError && error) return error(this);\n\n    return orElse(this);\n  }\n\n  map<R>(options: {\n    loading: FetchStateMapFunction<T, D, E, FetchStateLoading<T, D, E>, R>;\n    success: FetchStateMapFunction<T, D, E, FetchStateSuccess<T, D, E>, R>;\n    error: FetchStateMapFunction<T, D, E, FetchStateError<T, D, E>, R>;\n  }): R {\n    const { loading, success, error } = options;\n\n    return this.mapOrElse({\n      loading,\n      success,\n      error,\n      orElse: (_) => {\n        throw Error('Invalid useAxiosFetch state');\n      },\n    });\n  }\n\n  public isLoading(): this is FetchStateLoading<T, D, E> {\n    return this instanceof FetchStateLoading;\n  }\n\n  public isSuccess(): this is FetchStateSuccess<T, D, E> {\n    return this instanceof FetchStateSuccess;\n  }\n\n  public isError(): this is FetchStateError<T, D, E> {\n    return this instanceof FetchStateError;\n  }\n\n  public errorOrNull(): E | null {\n    if (this instanceof FetchStateError) return this.error;\n    return null;\n  }\n\n  public callIfLoading<R>(\n    func: FetchStateMapFunction<T, D, E, FetchStateLoading<T, D, E>, boolean>\n  ): boolean {\n    return this instanceof FetchStateLoading ? func(this) ?? false : false;\n  }\n\n  public callIfSuccess(\n    func: FetchStateMapFunction<T, D, E, FetchStateSuccess<T, D, E>, boolean>\n  ): boolean {\n    return this instanceof FetchStateSuccess ? func(this) ?? false : false;\n  }\n\n  public callIfError<R>(\n    func: FetchStateMapFunction<T, D, E, FetchStateError<T, D, E>, boolean>\n  ): boolean {\n    return this instanceof FetchStateError ? func(this) ?? false : false;\n  }\n}\n\nexport class FetchStateLoading<T, D, E = AxiosError<T, D>> extends FetchState<\n  T,\n  D,\n  E\n> {\n  constructor(originalRequest: AxiosRequestConfig<D>) {\n    super(originalRequest);\n  }\n}\n\nexport class FetchStateError<T, D, E = AxiosError<T, D>> extends FetchState<\n  T,\n  D,\n  E\n> {\n  constructor(\n    public readonly error: E,\n    originalRequest: AxiosRequestConfig<D>\n  ) {\n    super(originalRequest);\n  }\n}\n\nexport class FetchStateSuccess<T, D, E = AxiosError<T, D>> extends FetchState<\n  T,\n  D,\n  E\n> {\n  constructor(\n    public readonly data: T,\n    originalRequest: AxiosRequestConfig<D>\n  ) {\n    super(originalRequest);\n  }\n}\n\n/// **************************************************************************\n///\n/// useFetch\n///\n/// <T> Data return type\n/// <D> Post input data type\n/// <E> Error return type\n///\n/// **************************************************************************\n\nexport type UseFetchErrorCallback<T, D, E> = (\n  error: FetchStateError<T, D, E>\n) => void;\n\nexport type UseFetchErrorParser<T, D, E> = (axiosError: AxiosError<T, D>) => E;\n\nexport interface UseFetchResult<T, D, E> {\n  state: FetchState<T, D, E>;\n  retry: () => Promise<void>;\n}\n\nexport const USE_FETCH_RETRY_CALL_ERROR =\n  'Retry call requires FetchStateError state';\n\nexport function useAxiosFetch<T = any, D = any, E = AxiosError<T, D>>(\n  params: AxiosRequestConfig<D>,\n  ...args: IfEqual<E, AxiosError<T, D>, [], [UseFetchErrorParser<T, D, E>]>\n): UseFetchResult<T, D, E> {\n  // ** States\n  const [fetchState, setFetchState] = useState<FetchState<T, D, E>>(\n    new FetchStateLoading(params)\n  );\n\n  /******************************\n   * Send Request\n   ******************************/\n  const retry = async () => {\n    setFetchState(new FetchStateLoading(fetchState.originalRequest));\n\n    await makeRequest();\n  };\n\n  const makeRequest = async () => {\n    const params = fetchState.originalRequest;\n\n    try {\n      const response: AxiosResponse<T | { data?: T }, D> = await axiosRequestPlus<\n        T | { data?: T },\n        AxiosResponse<T | { data?: T }, D>,\n        D\n      >(params);\n\n      const data: T = (response?.data as any)?.data ?? response?.data;\n\n      setFetchState(new FetchStateSuccess(data, params));\n\n    } catch (err: any) {\n      if (err instanceof AxiosRequestPlusError) {\n        const axiosError: AxiosError<T, D> = err as any;\n\n        const [errorParser] = args;\n\n        const parsedError: E = errorParser\n          ? errorParser(axiosError)\n          : (axiosError as unknown as E);\n\n        const stateError = new FetchStateError<T, D, E>(parsedError, params);\n\n        setFetchState(stateError);\n      } else {\n        throw err;\n      }\n    }\n  };\n\n  useEffect(() => {\n    makeRequest();\n  }, []);\n\n  return {\n    state: fetchState,\n    retry,\n  };\n}\n", "import { useDXTApiFetch } from '#/hooks/useDXTApiFetch';\nimport { SelectOptionsExtended } from '#/types';\n\ninterface FieldsMap {\n  value?: string;\n  label?: string;\n  isActive?: string;\n  isEnabled?: string;\n}\n\ninterface UseTangoListResult {\n  url: string;\n  fieldsMap?: FieldsMap;\n  disabledIcon?: React.ReactNode;\n  params?: Record<string, any>;\n}\n\ninterface BuildSelectOptionsProps extends Omit<UseTangoListResult, 'url'> {\n  data: Array<any>;\n}\n\nexport const buildSelectOptions = (props: BuildSelectOptionsProps) => {\n  const { data, fieldsMap, disabledIcon } = props;\n\n  const result: SelectOptionsExtended[] = [];\n\n  data.length &&\n    data.forEach((data) => {\n      result.push({\n        label: data[fieldsMap?.label ?? 'name'],\n        value: data[fieldsMap?.value ?? 'id'],\n\n        ...(fieldsMap?.isActive != null && {\n          isActive: data[fieldsMap.isActive],\n        }),\n\n        ...(fieldsMap?.isEnabled != null && {\n          isDisabled: !(data[fieldsMap.isEnabled] as boolean),\n        }),\n\n        ...(fieldsMap?.isEnabled != null &&\n          disabledIcon != null &&\n          !(data[fieldsMap?.isEnabled] as boolean) && {\n            icon: disabledIcon,\n          }),\n      });\n    });\n\n  return result;\n};\n\nexport function useTangoList<T = any>(props: UseTangoListResult) {\n  const { url, params, fieldsMap, disabledIcon } = props;\n\n  const { state, retry } = useDXTApiFetch<T>({\n    url,\n    silent: true,\n    params,\n  });\n\n  const result: SelectOptionsExtended[] = state.mapOrElse({\n    success: (state) => {\n      const data = state.data as Array<any>;\n\n      return buildSelectOptions({ data, fieldsMap, disabledIcon });\n    },\n    orElse: () => {\n      return [];\n    },\n  });\n\n  return { state, result };\n}\n", "import { AppResources } from '#/app_resources/app_resources';\nimport { useDXTApiFetch, UseDXTApiFetchResult } from '#/hooks/useDXTApiFetch';\nimport { useTangoList } from '#/hooks/useTangoList';\nimport { SelectOptions } from '#/types';\n\nimport { Icon } from '@chakra-ui/react';\n\nimport { FetchState } from '@core/react-hooks/useAxiosFetch';\nimport AccountCancelIcon from 'mdi-react/AccountCancelIcon.js';\nimport {\n  URL_SETTINGS_CUSTOMERS_ADD_PATH,\n  URL_SETTINGS_CUSTOMERS_EDIT_PATH,\n  URL_SETTINGS_CUSTOMERS_PATH,\n  URL_SETTINGS_VENDORS_ADD_PATH,\n  URL_SETTINGS_VENDORS_EDIT_PATH,\n  URL_SETTINGS_VENDORS_PATH,\n} from 'src/config/url_paths';\nimport {\n  InsertClienteInput,\n  InsertVendedorInput,\n  UpdateClienteInput,\n  UpdateVendedorInput,\n} from 'src/domain/dxt/inputs';\nimport { DeleteUserInput } from 'src/domain/dxt/inputs/user';\nimport { DXTClienteResult, DXTVendedorResult } from 'src/domain/dxt/results';\nimport { DXTErrorInfo } from 'src/domain/shared/errors';\nimport { TangoClienteResult, TangoVendedorResult } from 'src/domain/tango/results';\nimport { UserMinimalInfoResult } from 'src/domain/user/results';\nimport { DXTApiRequestState } from 'src/api-client/shared';\nimport {\n  API_TANGO_CLIENTE,\n  API_TANGO_VENDEDOR,\n} from 'src/api-client/tango/paths';\nimport {\n  API_DXT_CUSTOMERS,\n  API_DXT_CUSTOMERS_ID,\n  API_DXT_VENDORS,\n  API_DXT_VENDORS_ID,\n} from 'src/api-client/dxt/user/paths';\nimport {\n  customerCreateRequest,\n  customerDeleteRequest,\n  customerUpdateRequest,\n  vendorCreateRequest,\n  vendorDeleteRequest,\n  vendorUpdateRequest,\n} from 'src/api-client/dxt/user/requests';\n\nexport type UserTypeSelector = 'cliente' | 'vendedor';\n\n// TODO: Typings.......\ninterface FormListsApiSettings {\n  getAll: () => UseDXTApiFetchResult<UserMinimalInfoResult, any>;\n\n  getOne: (\n    id: string\n  ) => UseDXTApiFetchResult<DXTClienteResult | DXTVendedorResult, any>;\n\n  getRelation: () => {\n    state: FetchState<TangoClienteResult[] | TangoVendedorResult[], any, DXTErrorInfo>;\n    result: SelectOptions[];\n  };\n\n  post: (\n    input: InsertClienteInput | InsertVendedorInput,\n    app: AppResources\n  ) => Promise<\n    DXTApiRequestState<\n      DXTClienteResult,\n      InsertClienteInput | InsertVendedorInput\n    >\n  >;\n\n  patch: (\n    id: number,\n    input: UpdateClienteInput | UpdateVendedorInput,\n    app: AppResources\n  ) => Promise<\n    DXTApiRequestState<\n      DXTClienteResult,\n      UpdateClienteInput | UpdateVendedorInput\n    >\n  >;\n\n  delete: (\n    id: number,\n    input: DeleteUserInput,\n    app: AppResources\n  ) => Promise<DXTApiRequestState<{ ok: boolean }, DeleteUserInput>>;\n}\n\ninterface Titles {\n  common: string;\n  create: string;\n  edit: string;\n}\n\nexport interface FormListsSettings {\n  api: FormListsApiSettings;\n  userType: UserTypeSelector;\n  titles: Titles;\n  actionButtonNavigateTo: string;\n  editButtonNavigateTo: string;\n  cancelButtonNavigateTo?: string;\n  tangoRelatedFields?: Record<string, string>;\n}\n\nexport interface SettingsProps {\n  customers: FormListsSettings;\n  vendors: FormListsSettings;\n}\n\nexport const settings: SettingsProps = {\n  customers: {\n    api: {\n      getAll: () => {\n        return useDXTApiFetch<UserMinimalInfoResult>({\n          url: API_DXT_CUSTOMERS,\n          silent: true,\n        });\n      },\n\n      getOne: (id: string) => {\n        return useDXTApiFetch<DXTClienteResult>({\n          url: API_DXT_CUSTOMERS_ID,\n          pathParams: { id },\n          silent: true,\n        });\n      },\n\n      getRelation: () => {\n        return useTangoList<TangoClienteResult[]>({\n          url: API_TANGO_CLIENTE,\n          fieldsMap: {\n            label: 'screen_name',\n            value: 'id',\n            isEnabled: 'habilitado',\n          },\n          disabledIcon: (\n            <Icon as={AccountCancelIcon} color='red.400' ml={2} boxSize={5} />\n          ),\n        });\n      },\n\n      post: async (input, app) => {\n        return customerCreateRequest(input, app);\n      },\n\n      patch: async (id, input, app) => {\n        return customerUpdateRequest(id as unknown as string, input, app);\n      },\n\n      delete: async (id, input, app) => {\n        return customerDeleteRequest(id as unknown as string, input, app);\n      },\n    },\n    userType: 'cliente',\n    titles: {\n      common: 'Gesti\u00F3n de Clientes',\n      create: 'Crear Cliente',\n      edit: 'Editar Cliente',\n    },\n    actionButtonNavigateTo: URL_SETTINGS_CUSTOMERS_ADD_PATH,\n    cancelButtonNavigateTo: URL_SETTINGS_CUSTOMERS_PATH,\n    editButtonNavigateTo: URL_SETTINGS_CUSTOMERS_EDIT_PATH,\n    tangoRelatedFields: {\n      placeholder: 'Seleccione un Cliente',\n      label: 'Cliente Tango',\n      empty: 'No hay clientes disponibles',\n    },\n  },\n  vendors: {\n    api: {\n      getAll: () => {\n        return useDXTApiFetch<UserMinimalInfoResult>({\n          url: API_DXT_VENDORS,\n          silent: true,\n        });\n      },\n\n      getOne: (id: string) => {\n        return useDXTApiFetch<DXTVendedorResult>({\n          url: API_DXT_VENDORS_ID,\n          pathParams: { id },\n          silent: true,\n        });\n      },\n\n      getRelation: () => {\n        return useTangoList<TangoVendedorResult[]>({\n          url: API_TANGO_VENDEDOR,\n          fieldsMap: {\n            label: 'screen_name',\n            value: 'id',\n            isEnabled: 'habilitado',\n          },\n          disabledIcon: (\n            <Icon as={AccountCancelIcon} color='red.400' ml={2} boxSize={5} />\n          ),\n        });\n      },\n\n      post: async (input, app) => {\n        return vendorCreateRequest(input, app);\n      },\n\n      patch: async (id, input, app) => {\n        return vendorUpdateRequest(id as unknown as string, input, app);\n      },\n\n      delete: async (id, input, app) => {\n        return vendorDeleteRequest(id as unknown as string, input, app);\n      },\n    },\n    userType: 'vendedor',\n    titles: {\n      common: 'Gesti\u00F3n de Vendedores',\n      create: 'Crear Vendedor',\n      edit: 'Editar Vendedor',\n    },\n    actionButtonNavigateTo: URL_SETTINGS_VENDORS_ADD_PATH,\n    cancelButtonNavigateTo: URL_SETTINGS_VENDORS_PATH,\n    editButtonNavigateTo: URL_SETTINGS_VENDORS_EDIT_PATH,\n    tangoRelatedFields: {\n      placeholder: 'Seleccione un Vendedor',\n      label: 'Vendedor Tango',\n      empty: 'No hay vendedores disponibles',\n    },\n  },\n};\n", "import { apiPath } from \"../shared\";\n\nexport const API_TANGO_PERFIL = apiPath( '/tango/perfil' );\nexport const API_TANGO_CLIENTE = apiPath( '/tango/cliente' );\nexport const API_TANGO_VENDEDOR = apiPath( '/tango/vendedor' );\nexport const API_TANGO_AUXILIARES = apiPath( '/tango/auxiliares' );", "import { apiPath } from \"../../shared\";\n\nexport const API_DXT_CUSTOMERS = apiPath('/dxt/cliente')\nexport const API_DXT_CUSTOMERS_ID = apiPath('/dxt/cliente/:id')\n\nexport const API_DXT_VENDORS = apiPath('/dxt/vendedor')\nexport const API_DXT_VENDORS_ID = apiPath('/dxt/vendedor/:id')\n\nexport const API_DXT_VENDOR_CUSTOMERS = apiPath('/dxt/vendedor/cliente')\n\n", "import { AppResources } from '#/app_resources/app_resources';\n\nimport { InsertClienteInput, InsertVendedorInput, UpdateClienteInput, UpdateVendedorInput } from 'src/domain/dxt/inputs';\nimport { DeleteUserInput } from 'src/domain/dxt/inputs/user';\nimport { DXTClienteResult } from 'src/domain/dxt/results';\n\nimport { dxtApiRequest } from '../../shared';\nimport { API_DXT_CUSTOMERS, API_DXT_CUSTOMERS_ID, API_DXT_VENDORS, API_DXT_VENDORS_ID } from './paths';\n\n\nexport const customerCreateRequest = async (input: InsertClienteInput, app: AppResources) => {\n  return await dxtApiRequest<DXTClienteResult, InsertClienteInput>(\n    {\n      url: API_DXT_CUSTOMERS,\n      data: input,\n      method: 'POST',\n      silent: true,\n    },\n    app\n  );\n};\n\nexport const customerUpdateRequest = async (id: string, input: UpdateClienteInput, app: AppResources) => {\n  return await dxtApiRequest<DXTClienteResult, UpdateClienteInput>(\n    {\n      url: API_DXT_CUSTOMERS_ID,\n      pathParams: { id },\n      data: input,\n      method: 'PATCH',\n      silent: true,\n    },\n    app\n  );\n};\n\nexport const customerDeleteRequest = async (id: string, input: DeleteUserInput, app: AppResources) =>\n  await dxtApiRequest<{ ok: boolean }, DeleteUserInput>(\n    {\n      url: API_DXT_CUSTOMERS_ID,\n      pathParams: { id },\n      data: input,\n      method: 'DELETE',\n      silent: true,\n    },\n    app\n  );\n\n/*\n * Vendors\n */\n\nexport const vendorCreateRequest = async (input: InsertVendedorInput, app: AppResources) => {\n  return await dxtApiRequest<DXTClienteResult, InsertVendedorInput>(\n    {\n      url: API_DXT_VENDORS,\n      data: input,\n      method: 'POST',\n      silent: true,\n    },\n    app\n  );\n};\n\nexport const vendorDeleteRequest = async (id: string, input: DeleteUserInput, app: AppResources) =>\n  await dxtApiRequest<{ ok: boolean }, DeleteUserInput>(\n    {\n      url: API_DXT_VENDORS_ID,\n      pathParams: { id },\n      data: input,\n      method: 'DELETE',\n      silent: true,\n    },\n    app\n  );\n\nexport const vendorUpdateRequest = async (id: string, input: UpdateVendedorInput, app: AppResources) => {\n  return await dxtApiRequest<DXTClienteResult, UpdateVendedorInput>(\n    {\n      url: API_DXT_VENDORS_ID,\n      pathParams: { id },\n      data: input,\n      method: 'PATCH',\n      silent: true,\n    },\n    app\n  );\n};\n", "import { JsonValue } from '../json';\nimport { VOBoolean, VOInteger, VOJsonValue, VONotEmptyString, VONumber, VOString } from '../value_objects';\nimport { VOValidationFunction, ValidationFunction } from './validate_schema';\n\n\nexport const booleanValidator: VOValidationFunction<VOBoolean>\n= (v) => new VOBoolean(v).valueOf();\n\nexport const optionalBooleanValidator: ValidationFunction<boolean|undefined>\n= (v, def) => (v == null ? def : new VOBoolean(v).valueOf());\n\nexport const integerValidator: VOValidationFunction<VOInteger>\n= (v) => new VOInteger(v).valueOf();\n\nexport const optionalIntegerValidator: ValidationFunction<number|undefined>\n= (v, def) => v == null ? def : new VOInteger(v).valueOf();\n\nexport const numberValidator: VOValidationFunction<VONumber>\n= (v) => new VONumber(v).valueOf();\n\nexport const optionalNumberValidator: ValidationFunction<number|undefined>\n= (v, def) => v == null ? def : new VONumber(v).valueOf();\n\nexport const stringValidator: VOValidationFunction<VOString>\n= (v) => new VONotEmptyString(v).valueOf();\n\nexport const optionalStringValidator: ValidationFunction<string|undefined>\n= (v, def) => v == null ? def : new VOString(v).valueOf();\n\nexport const jsonValidator: VOValidationFunction<VOJsonValue>\n= (v) => new VOJsonValue(v).valueOf();\n\nexport const optionalJsonValidator: ValidationFunction<JsonValue|undefined>\n= (v, def) => v == null ? def : new VOJsonValue(v).valueOf();\n", "import { isObj } from \"../objects\";\nimport { valueToString } from \"../strings\";\nimport { type IfEqual, type UndefinedToOptional } from \"../typescript\";\nimport { ValidationException } from \"../validation/errors\";\nimport { ValueObjectBase, ValueObjectR, ValueObjectT } from \"../value_objects/base\"\n\n\nexport type ValidationFunction<R, I=any> = (input: I, def?: R) => R;\n\nexport type VOValidationFunction<V extends ValueObjectBase<any, any>> = ValidationFunction<ValueObjectR<V>, ValueObjectT<V>>;\n\ninterface ValidationWithName<T, V> { f: ValidationFunction<T, V>, n: string }\n\ntype ValidationEntry<T, V>= ValidationFunction<T, V> | ValidationWithName<T, V>;\n\ntype ValidationFunctionGenericV<F> = F extends ValidationFunction<any, infer V> ? V : never;\n\nexport type ValidationSchema = Record< string, ValidationEntry<any, any> >;\n\ntype ExtractValidationFunction<VE extends ValidationEntry<any, any>>\n= VE extends ValidationFunction<any, any> ? VE : VE extends ValidationWithName<any, any> ? VE[\"f\"] : never;\n\ntype DeepReturnType<RT> = RT extends ValueObjectBase<infer T, any> ? T : RT;\n\nexport type InferUnsafeInputFromSchema<S extends ValidationSchema> = Readonly<UndefinedToOptional<{\n  [key in keyof S]: ValidationFunctionGenericV<ExtractValidationFunction<S[key]>> \n}>>\n\ntype _RTEV<T extends ValidationEntry<any, any>> = ReturnType<ExtractValidationFunction<T>>\n\n\nexport type InferValidatedInputFromSchema<S extends ValidationSchema> = Readonly<{\n  [key in keyof S]: IfEqual<\n    _RTEV<S[key]>,\n    NonNullable<_RTEV<S[key]>>,\n    DeepReturnType< _RTEV<S[key]> >,\n    DeepReturnType< NonNullable<_RTEV<S[key]> > > | undefined\n  >\n}>\n\n\nexport interface InvalidSchemaValueItem {\n  field: string;\n  value: string;\n}\n\n\nexport class InvalidValidationSchemaException extends ValidationException {\n  constructor (schema?: string) {\n    super(`Invalid validation schema: ${schema??\"{}\"}`);\n  }\n}\n\n\nexport class InvalidSchemaValidatorFunctionException extends ValidationException {\n  constructor (field: string) {\n    super(`Invalid validator function: ${field}`);\n  }\n}\n\n\nexport class InvalidSchemaValuesException extends ValidationException {\n  constructor (readonly invalidValues: InvalidSchemaValueItem[]) {\n    super(`Invalid values: ${invalidValues.map(({field, value})=>field).join(\", \")}`);\n  }\n}\n\n\nexport class UnknownSchemaKeysException extends ValidationException {\n  constructor (readonly unknownKeys: string[]) {\n    super(`Unknown keys: ${unknownKeys.join(\", \")}`);\n  }\n}\n\n\nexport function validateSchema<S extends ValidationSchema>(\n  schema: S,\n  input: InferUnsafeInputFromSchema<typeof schema>,\n  options?: {\n    onUnknownKeys?: (unknownKeys: string[], defaultError: Error) => Error\n    onInvalidValues?: (invalidValues: InvalidSchemaValueItem[], defaultError: Error) => Error\n  }\n): InferValidatedInputFromSchema<typeof schema> {\n  if (!isObj(schema)) throw new InvalidValidationSchemaException();\n\n  const invalidValues: InvalidSchemaValueItem[] = [];\n\n  const inputIsObject = isObj(input);\n\n  const entries = Object.entries(schema);\n\n  const validatedResult = Array(entries.length);\n\n  if (!isObj(input)) input = {} as any;\n\n  let i=0;\n\n  for (const [field, validator] of entries) {\n    const valIsObject = isObj(validator);\n\n    const fieldName = (valIsObject && 'n' in validator ? validator.n : field );\n    const validatorFuncion: ValidationFunction<any, any> = valIsObject && 'f' in validator ? validator.f : validator as ValidationFunction<any, any>; \n    \n    if (typeof validatorFuncion !== 'function') throw new InvalidSchemaValidatorFunctionException(fieldName);\n\n    const inputValue = inputIsObject ? (input as any)[field] : undefined;\n\n    try{\n      let result = validatorFuncion(inputValue);\n\n      if (result instanceof ValueObjectBase) result = result.valueOf();\n\n      if (invalidValues.length === 0) {\n        validatedResult[i++] = [\n          field,\n          result\n        ];\n      }\n\n    } catch(_){\n\n      invalidValues.push({\n        field: fieldName,\n        value: valueToString(inputValue, true)\n      });\n    }\n  }\n\n  if (invalidValues.length > 0) {\n    const defaultError = new InvalidSchemaValuesException(invalidValues);\n    const error = options?.onInvalidValues?.(invalidValues, defaultError) ?? defaultError;\n\n    throw error;\n  }\n\n\n  const valuesKeys = Object.keys(input);\n  const unknownKeys: string[] = [];\n\n  for (const key of valuesKeys) {\n    if (!(key in schema)) unknownKeys.push(key);\n  }\n\n  if (unknownKeys.length > 0) {\n    const defaultError = new UnknownSchemaKeysException(unknownKeys);\n    const error = options?.onUnknownKeys?.(unknownKeys, defaultError) ?? defaultError;\n\n    throw error;\n  }\n\n  \n  return Object.fromEntries(validatedResult) as any;\n}\n", "import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Box,\n  Button,\n  ButtonProps,\n} from '@chakra-ui/react';\n\ninterface ButtonExtendedProps extends ButtonProps {\n  label: string;\n}\n\ninterface CommonErrorsProps {\n  error: string;\n  buttonProps?: ButtonExtendedProps;\n}\n\nexport const CommonErrors = ({ error, buttonProps }: CommonErrorsProps) => {\n  return (\n    <Box\n      width={'full'}\n      sx={{\n        mt: 6,\n      }}\n    >\n      <Alert\n        status='error'\n        variant='subtle'\n        flexDirection='column'\n        alignItems='center'\n        justifyContent='center'\n        textAlign='center'\n        height='200px'\n      >\n        <AlertIcon boxSize='40px' sx={{ mr: 0, mb: 4 }} />\n        <AlertDescription maxWidth='sm'>{error}</AlertDescription>\n        {buttonProps != null && (\n          <Button\n            {...buttonProps}\n            sx={{\n              mt: 4,\n            }}\n          >\n            {buttonProps.label}\n          </Button>\n        )}\n      </Alert>\n    </Box>\n  );\n};\n", "import { Button, ButtonProps, Flex, Heading, Spacer } from '@chakra-ui/react';\n\nimport { CommonCard } from './CommonCard';\n\ninterface ActionButtonProps {\n  label: string;\n  buttonProps?: ButtonProps;\n}\n\ninterface SettingsFormHeadingProps {\n  title: string;\n  actionButton?: ActionButtonProps;\n}\n\nexport const SettingsFormHeading = (props: SettingsFormHeadingProps) => {\n  const { title, actionButton } = props;\n\n  return (\n    <CommonCard>\n      <Flex direction={'row'} alignItems={'center'}>\n        <Heading size='md' textTransform='uppercase'>\n          {title}\n        </Heading>\n        {actionButton && (\n          <>\n            <Spacer />\n            <Button\n              size={'sm'}\n              colorScheme={'green'}\n              {...actionButton.buttonProps}\n              sx={{\n                textTransform: 'uppercase',\n              }}\n            >\n              {actionButton.label}\n            </Button>\n          </>\n        )}\n      </Flex>\n    </CommonCard>\n  );\n};\n", "import {\n  Card,\n  CardBody,\n  CardBodyProps,\n  CardProps,\n  useColorModeValue,\n} from '@chakra-ui/react';\n\ninterface CommonCardProps {\n  children: React.ReactNode;\n  cardProps?: CardProps;\n  cardBodyProps?: CardBodyProps;\n}\n\nexport const CommonCard = (props: CommonCardProps) => {\n  const { children, cardProps, cardBodyProps } = props;\n\n  const borderColor = useColorModeValue('gray.200', 'white.200');\n\n  return (\n    <Card\n      boxShadow={'lg'}\n      sx={{ mb: 4 }}\n      borderColor={borderColor}\n      {...cardProps}\n    >\n      <CardBody {...cardBodyProps}>{children}</CardBody>\n    </Card>\n  );\n};\n", "import { useNavigate } from '@remix-run/react';\n\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Spacer,\n} from '@chakra-ui/react';\n\nimport { DXTErrorInfo } from 'src/domain/shared/errors';\n\ninterface ApiErrorsProps {\n  error: DXTErrorInfo;\n  retry?: () => void;\n  cancelAndNavigateTo?: string;\n}\n\nexport const ApiErrors = ({\n  error,\n  retry,\n  cancelAndNavigateTo,\n}: ApiErrorsProps) => {\n  const navigate = useNavigate();\n  return (\n    <Box\n      width={'full'}\n      sx={{\n        mt: 6,\n      }}\n    >\n      <Alert\n        status='error'\n        variant='subtle'\n        flexDirection='column'\n        alignItems='center'\n        justifyContent='center'\n        textAlign='center'\n        height='200px'\n      >\n        <AlertIcon boxSize='40px' sx={{ mr: 0, mb: 4 }} />\n        {!error.message_to_user ? (\n          <AlertDescription maxWidth='sm'>{error.error}</AlertDescription>\n        ) : (\n          <>\n            <AlertTitle mt={4} mb={1} fontSize='lg'>\n              {error.message_to_user?.title}\n            </AlertTitle>\n            <AlertDescription maxWidth='sm'>\n              {error.message_to_user?.content}\n            </AlertDescription>\n          </>\n        )}\n        <HStack\n          sx={{\n            mt: 4,\n          }}\n          spacing={4}\n        >\n          {retry && (\n            <Button onClick={retry} colorScheme='green'>\n              Reintentar\n            </Button>\n          )}\n          {cancelAndNavigateTo != null && (\n            <Button\n              onClick={() => {\n                navigate(cancelAndNavigateTo);\n              }}\n              colorScheme='red'\n            >\n              Cancelar\n            </Button>\n          )}\n        </HStack>\n      </Alert>\n    </Box>\n  );\n};\n", "import { Box, Divider, Grid, GridItem, HStack, Stack } from '@chakra-ui/react';\n\nimport { FormInputSkeleton } from '~/components/form_elements/FormSkeletons';\n\nexport const Loading = () => (\n  <Box\n    width={'full'}\n    sx={{\n      mt: 8,\n      mb: 4,\n    }}\n  >\n    <Grid\n      templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n      alignItems={'center'}\n      gap={4}\n    >\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Stack spacing={4} direction={{ base: 'column' }}>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n        </Stack>\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem></GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n    </Grid>\n  </Box>\n);\n", "import { Skeleton } from '@chakra-ui/react';\n\ninterface FormSkeletonsProps {\n  height?: string;\n}\n\nexport const FormInputSkeleton = ({ height }: FormSkeletonsProps) => (\n  <Skeleton width={'full'} height={height ?? '36px'} borderRadius={'md'} />\n);\n\nexport const FormTextareaSkeleton = ({ height }: FormSkeletonsProps) => (\n  <Skeleton width={'full'} height={height ?? '80px'} borderRadius={'md'} />\n);\n", "import { useEffect } from 'react';\n\nimport { useAppResources } from '#/app_resources/app_resources';\nimport { FormListsSettings } from '#/crud_configs/users';\nimport { useTangoList } from '#/hooks/useTangoList';\nimport { promiseBasedToast } from '#/utils/promise_based_toast';\n\nimport {\n  Badge,\n  Box,\n  Divider,\n  Grid,\n  GridItem,\n  Heading,\n  HStack,\n  Stack,\n  useToast,\n} from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nimport {\n  FetchStateError,\n  FetchStateLoading,\n  FetchStateSuccess,\n} from '@core/react-hooks/useAxiosFetch';\nimport { useForm } from 'react-hook-form';\nimport { URL_SETTINGS_CUSTOMERS_PATH } from 'src/config/url_paths';\nimport { UpdateClienteInput } from 'src/domain/dxt/inputs';\nimport { DXTClienteResult } from 'src/domain/dxt/results';\nimport { PerfilResult } from 'src/domain/tango/results';\nimport { API_TANGO_PERFIL } from 'src/api-client/tango/paths';\nimport { CommonCard } from '~/components/CommonCard';\nimport { ControlledInput } from '~/components/form_elements/ControlledInput';\nimport { ControlledRadio } from '~/components/form_elements/ControlledRadio';\nimport { ControlledSelect } from '~/components/form_elements/ControlledSelect';\nimport { ControlledSwitch } from '~/components/form_elements/ControlledSwitch';\nimport { FormErrors } from '~/components/form_elements/FormErrors';\nimport { InlineError } from '~/components/InlineError';\nimport { SettingsFormsButtons } from '~/components/SettingsFormButtons';\n\nimport { useCustomValidationSchema } from '../validation';\n\ninterface SuccessProps {\n  stateData: DXTClienteResult;\n  typeSettings: FormListsSettings;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { stateData, typeSettings } = props;\n\n  const updateData = {\n    ...stateData,\n  };\n\n  const app = useAppResources();\n\n  const toast = useToast();\n\n  const { yupValidationSchema, passwordStatus } = useCustomValidationSchema();\n\n  type _InputSchema = yup.InferType<typeof yupValidationSchema>;\n\n  const { state: statePerfiles, result: resultPerfiles } =\n    useTangoList<PerfilResult[]>({\n      url: API_TANGO_PERFIL,\n      fieldsMap: {\n        label: 'name',\n        value: 'id',\n      },\n    });\n\n  const { state: stateRelationship, result: resultRelationship } =\n    typeSettings.api.getRelation();\n\n  const {\n    handleSubmit,\n    control,\n    resetField,\n    setError,\n    watch,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = useForm<_InputSchema>({\n    defaultValues: {\n      username: updateData.username,\n      email: updateData.email ?? '',\n      habilitado_en_dxt: updateData.habilitado_en_dxt,\n      puede_crear_pedido: updateData.puede_crear_pedido,\n      puede_editar_pedido: updateData.puede_anular_pedido,\n      ver_pedidos_cumplidos: updateData.ver_pedidos_cumplidos,\n      ver_sin_precio: updateData.ver_sin_precio,\n      mostrar_mensaje_de_advertencia: updateData.mostrar_mensaje_de_advertencia,\n      puede_anular_pedido: updateData.puede_anular_pedido,\n      borrar_pedido_al_anular: updateData.borrar_pedido_al_anular,\n      aprobar_pedido_al_crear: updateData.aprobar_pedido_al_crear,\n      dia_de_entrega: updateData.dia_de_entrega,\n    },\n    resolver: yupResolver(yupValidationSchema),\n  });\n\n  /*\n   * If the user can't cancel orders, the option to delete the order when canceling it is disabled\n   */\n  const watchPuedeAnularPedido = watch('puede_anular_pedido');\n\n  useEffect(() => {\n    if (watchPuedeAnularPedido === false)\n      resetField('borrar_pedido_al_anular', { defaultValue: false });\n  }, [watchPuedeAnularPedido]);\n\n  useEffect(() => {\n    if (stateRelationship instanceof FetchStateSuccess) {\n      // prettier-ignore\n      const defaultValue = (resultRelationship.find( (option) => option.value === updateData.tango_id)?.value as number) ?? undefined;\n\n      resetField('tango_id', { defaultValue });\n    }\n\n    if (statePerfiles instanceof FetchStateSuccess) {\n      // prettier-ignore\n      const defaultValue = (resultPerfiles.find((option) => option.value === updateData.perfil_facturacion_id)?.value as number) ?? undefined;\n\n      resetField('perfil_facturacion_id', { defaultValue });\n    }\n  }, [stateRelationship, statePerfiles]);\n\n  const disableForm = isSubmitSuccessful || isSubmitting;\n\n  const onSubmit = async (dataUnsafe: _InputSchema) => {\n    const { password_repeat, ...data } = dataUnsafe;\n\n    // remove unnecessary fields\n    if (data.email === '') delete data.email;\n    if (data.password === '') delete data.password;\n\n    const input: UpdateClienteInput = data;\n\n    const result = await typeSettings.api.patch(updateData.id, input, app);\n\n    await promiseBasedToast({\n      toast,\n      result,\n      messages: {\n        success: { title: 'Usuario actualizado' },\n        error: { title: 'Ha ocurrido un error' },\n        loading: { title: 'Actualizando usuario' },\n      },\n    })\n      .then(() => {\n        app.navigate(URL_SETTINGS_CUSTOMERS_PATH);\n      })\n      .catch((e) => {\n        setError('root', { message: e });\n      });\n  };\n\n  return (\n    <form noValidate onSubmit={handleSubmit(onSubmit)}>\n      <Box>\n        <FormErrors errors={errors} />\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Informaci\u00F3n del Cliente\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledSelect\n                fieldProps={{\n                  name: 'tango_id',\n                  placeholder: typeSettings.tangoRelatedFields?.placeholder,\n                  options: resultRelationship,\n                  noOptionsMessage(obj) {\n                    return typeSettings.tangoRelatedFields?.empty;\n                  },\n                  isSearchable: true,\n                  selectedOptionStyle: 'check',\n                  isLoading: stateRelationship instanceof FetchStateLoading,\n                }}\n                formControlProps={{\n                  isDisabled:\n                    disableForm ||\n                    !(stateRelationship instanceof FetchStateSuccess),\n                }}\n                formControlInnerProps={{\n                  label: typeSettings.tangoRelatedFields?.label,\n                }}\n                control={control}\n              />\n              {stateRelationship instanceof FetchStateError && (\n                <InlineError error={stateRelationship.errorOrNull().error} />\n              )}\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'username',\n                  id: 'username',\n                  type: 'text',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Nombre de Usuario',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'email',\n                  id: 'email',\n                  type: 'text',\n                  inputMode: 'email',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Correo electr\u00F3nico',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'password',\n                  id: 'password',\n                  type: 'password',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Nueva contrase\u00F1a',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'password_repeat',\n                  id: 'password_repeat',\n                  type: 'password',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Confirmaci\u00F3n de Contrase\u00F1a',\n                }}\n                control={control}\n              />\n            </GridItem>\n            {passwordStatus != null && (\n              <GridItem colSpan={{ md: 2 }}>\n                {passwordStatus.tooShort && (\n                  <Badge colorScheme='red'>Contrase\u00F1a muy corta</Badge>\n                )}\n                {passwordStatus.tooLong && (\n                  <Badge colorScheme='red'>Contrase\u00F1a muy larga</Badge>\n                )}\n                {passwordStatus.invalidCharsPresent && (\n                  <Badge colorScheme='red'>Evite caracteres no v\u00E1lidos</Badge>\n                )}\n              </GridItem>\n            )}\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledSelect\n                fieldProps={{\n                  name: 'perfil_facturacion_id',\n                  placeholder: 'Seleccione un perfil',\n                  options: resultPerfiles,\n                  noOptionsMessage(obj) {\n                    return 'No hay perfiles disponibles';\n                  },\n                  isLoading: statePerfiles instanceof FetchStateLoading,\n                  selectedOptionStyle: 'check',\n                }}\n                formControlProps={{\n                  isDisabled:\n                    disableForm ||\n                    !(statePerfiles instanceof FetchStateSuccess),\n                }}\n                control={control}\n                formControlInnerProps={{\n                  label: 'Perfil de facturaci\u00F3n',\n                }}\n              />\n              {statePerfiles instanceof FetchStateError && (\n                <InlineError error={statePerfiles.errorOrNull().error} />\n              )}\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Estado\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledRadio\n                fieldProps={{\n                  name: 'habilitado_en_dxt',\n                  options: [\n                    {\n                      value: true,\n                      label: 'Establecido en Tango',\n                    },\n                    {\n                      value: false,\n                      label: 'Deshabilitado',\n                    },\n                  ],\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                radioProps={{\n                  size: { base: 'sm', sm: 'md' },\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Comunicaci\u00F3n\n              </Heading>\n            </GridItem>\n            <GridItem>\n              <ControlledSwitch\n                fieldProps={{\n                  name: 'mostrar_mensaje_de_advertencia',\n                  id: 'mostrar_mensaje_de_advertencia',\n                }}\n                formControlProps={{\n                  width: 'auto',\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Mostrar mensaje de advertencia',\n                }}\n                control={control}\n              />\n            </GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Pedidos\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Stack spacing={4} direction={{ base: 'column' }}>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_crear_pedido',\n                      id: 'puede_crear_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede crear pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_editar_pedido',\n                      id: 'puede_editar_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede editar pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_anular_pedido',\n                      id: 'puede_anular_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede anular pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'borrar_pedido_al_anular',\n                      id: 'borrar_pedido_al_anular',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Borrar pedido al anular',\n                    }}\n                    control={control}\n                    watch={{\n                      isDisabled: watchPuedeAnularPedido === false,\n                      ...(watchPuedeAnularPedido === false && {\n                        isChecked: false,\n                      }),\n                    }}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'aprobar_pedido_al_crear',\n                      id: 'aprobar_pedido_al_crear',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Los pedidos se aprueban al crearlos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'ver_pedidos_cumplidos',\n                      id: 'ver_pedidos_cumplidos',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede ver los pedidos cumplidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'ver_sin_precio',\n                      id: 'ver_sin_precio',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede ver art\u00EDculos sin precios',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n              </Stack>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'dia_de_entrega',\n                  id: 'dia_de_entrega',\n                  type: 'number',\n                  inputMode: 'tel',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Tiempo de entrega de pedidos',\n                  helperText: 'Expresado en d\u00EDas',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem></GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <SettingsFormsButtons\n            buttonActionText='Actualizar'\n            isLoading={disableForm}\n          />\n        </CommonCard>\n      </Box>\n    </form>\n  );\n};\n", "import {\n  type AuthDispatch,\n  AuthStateLoggedIn,\n} from 'src/code.client/auth/auth_context';\nimport { DXTError, DXTErrorCode, DXTException } from 'src/domain/shared/errors';\n\nimport { type BasicAppResources, useBasicAppResources } from './basic_app_resources';\n\nexport interface AppResources extends BasicAppResources {\n  authState: AuthStateLoggedIn;\n  authDispatch: AuthDispatch;\n}\n\nexport function useAppResources(): AppResources {\n  const result = useBasicAppResources();\n\n  if (!(result.authState instanceof AuthStateLoggedIn))\n    throw new DXTException(\n      new DXTError(DXTErrorCode.INTERNAL_CLIENT_ERROR, {\n        extra: 'AuthState is not AuthStateLoggedIn',\n      })\n    );\n\n  if (typeof result.authDispatch !== 'function')\n    throw new DXTException(\n      new DXTError(DXTErrorCode.INTERNAL_CLIENT_ERROR, {\n        extra: 'Invalid authDispath in useAppResources()',\n      })\n    );\n\n  return result as AppResources;\n}\n", "import { CreateToastFnReturn } from '@chakra-ui/react';\n\nimport { DXTApiRequestState } from 'src/api-client/shared';\n\ninterface ToastMessages {\n  success: { title: string };\n  error: { title: string };\n  loading: { title: string };\n}\n\ninterface PromiseBasedToastProps {\n  toast: CreateToastFnReturn;\n  result: DXTApiRequestState<any, any>;\n  messages: ToastMessages;\n}\n\nexport const promiseBasedToast = async (props: PromiseBasedToastProps) => {\n  const { toast, result, messages } = props;\n\n  const resultToast = new Promise((resolve, reject) => {\n    result.map({\n      success: () => {\n        resolve(200);\n      },\n      error: (state) => {\n        reject(new Error(state.error.error));\n      },\n    });\n  });\n\n  toast.promise(resultToast, {\n    success: { title: messages.success.title },\n    error: (e) => {\n      return { title: messages.error.title, description: e.message };\n    },\n    loading: {\n      title: messages.loading.title,\n      description: 'Aguarde unos instantes',\n    },\n  });\n\n  return resultToast;\n}\n", "import {\n  FormControl,\n  FormControlProps,\n  FormHelperText,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputProps,\n} from '@chakra-ui/react';\n\nimport { type Control, useController } from 'react-hook-form';\n\ninterface FieldProps extends InputProps {\n  name: string;\n}\n\ninterface FormControlInnerProps {\n  icon?: React.ReactNode;\n  label?: string;\n  helperText?: string;\n}\n\ninterface ControlledInputProps {\n  fieldProps: FieldProps;\n  formControlProps?: Omit<FormControlProps, 'isInvalid'>;\n  formControlInnerProps?: FormControlInnerProps;\n  control: Control<any>;\n}\n\nexport const ControlledInput = (props: ControlledInputProps) => {\n  const { fieldProps, formControlProps, formControlInnerProps, control } =\n    props;\n\n  const {\n    field: { ref, onChange, value },\n    fieldState: { invalid },\n    formState: { errors },\n  } = useController({\n    name: fieldProps.name,\n    control,\n  });\n\n  const { label, helperText, icon } = formControlInnerProps || {};\n\n  return (\n    <FormControl {...formControlProps} isInvalid={invalid}>\n      {label != null && (\n        <FormLabel\n          htmlFor={fieldProps.name}\n          sx={fieldProps.variant === 'flushed' ? { fontSize: 'sm', mb: 0 } : {}}\n        >\n          {label}\n        </FormLabel>\n      )}\n      <InputGroup>\n        {icon}\n        <Input {...fieldProps} onChange={onChange} value={value} ref={ref} />\n      </InputGroup>\n      {helperText != null && <FormHelperText>{helperText}</FormHelperText>}\n      {/* {errors != null && (\n        <FormErrorMessage>\n          <ErrorMessage name={'singleErrorInput'} errors={errors} />\n        </FormErrorMessage>\n      )} */}\n    </FormControl>\n  );\n};\n", "import {\n  FormControl,\n  FormControlProps,\n  FormHelperText,\n  Radio,\n  RadioGroup,\n  RadioGroupProps,\n  RadioProps,\n  Stack,\n  StackProps,\n} from '@chakra-ui/react';\n\nimport { Control, useController } from 'react-hook-form';\n\ninterface FieldProps extends Omit<RadioGroupProps, 'children'> {\n  name: string;\n  options: Array<{ value: string | number | boolean; label: string }>;\n}\n\ninterface FormControlInnerProps {\n  helperText?: string;\n}\n\ninterface ControlledRadioProps {\n  fieldProps: Omit<FieldProps, 'isInvalid'>;\n  formControlProps?: FormControlProps;\n  formControlInnerProps?: FormControlInnerProps;\n  stackProps?: StackProps;\n  radioProps?: RadioProps;\n  control: Control<any>;\n}\n\nexport const ControlledRadio = (props: ControlledRadioProps) => {\n  const {\n    fieldProps,\n    formControlProps,\n    formControlInnerProps,\n    stackProps,\n    radioProps,\n    control,\n  } = props;\n\n  const { name } = fieldProps;\n  const { helperText } = formControlInnerProps || {};\n\n  const {\n    field: { ref, onChange, value },\n    fieldState: { invalid },\n    formState: { errors },\n  } = useController({\n    name: fieldProps.name,\n    control,\n  });\n\n  return (\n    <FormControl {...formControlProps} isInvalid={invalid}>\n      <RadioGroup\n        {...fieldProps}\n        onChange={onChange}\n        value={value.toString()}\n        ref={ref}\n      >\n        <Stack direction='row' spacing={4} {...stackProps}>\n          {fieldProps.options.map((option, index) => (\n            <Radio\n              key={`${name}-option-${index}`}\n              value={option.value.toString()}\n              {...radioProps}\n            >\n              {option.label}\n            </Radio>\n          ))}\n        </Stack>\n      </RadioGroup>\n      {helperText != null && <FormHelperText>{helperText}</FormHelperText>}\n      {/* {errors != null && (\n        <FormErrorMessage>\n          <ErrorMessage name={'singleErrorInput'} errors={errors} />\n        </FormErrorMessage>\n      )} */}\n    </FormControl>\n  );\n};\n", "import { Children } from 'react';\n\nimport { SelectOptions } from '#/types';\n\nimport {\n  FormControl,\n  FormControlProps,\n  FormHelperText,\n  FormLabel,\n} from '@chakra-ui/react';\n\nimport {\n  ActionMeta,\n  chakraComponents,\n  createFilter,\n  MenuListProps,\n  Props,\n  Select,\n} from 'chakra-react-select';\nimport { Control, useController } from 'react-hook-form';\nimport { FixedSizeList } from 'react-window';\n\nimport { ChakraReactSelectCustomMenuList } from './ChakraReactSelectCustomMenuList';\n\ninterface FieldProps extends Props {\n  name: string;\n  options: Array<{ value: number | string; label: string }>;\n}\n\ninterface FormControlInnerProps {\n  label?: string;\n  helperText?: string;\n}\n\ninterface ControlledTextFieldProps {\n  fieldProps: FieldProps;\n  formControlProps: Omit<FormControlProps, 'isInvalid'>;\n  formControlInnerProps?: FormControlInnerProps;\n  control: Control<any>;\n  errors?: string;\n  shouldSort?: boolean;\n}\n\nconst CustomMenuList = (props: MenuListProps) => {\n  const { children, ...restProps } = props;\n\n  const itemHeight = 35;\n\n  const { options, maxHeight, getValue } = props;\n  const [value] = getValue();\n\n  const valueIndexOf = options.indexOf(value);\n  const itemsPerPage = Math.floor(maxHeight / itemHeight);\n\n  const initialOffset =\n    valueIndexOf > itemsPerPage ? valueIndexOf * itemHeight : 0;\n\n  const minHeight = Math.min(options.length * itemHeight, maxHeight);\n\n  return (\n    <ChakraReactSelectCustomMenuList {...props}>\n      <FixedSizeList\n        height={minHeight + 2}\n        itemCount={Children.count(children)}\n        itemSize={itemHeight}\n        initialScrollOffset={initialOffset}\n        width='100%'\n        outerRef={props.innerRef}\n      >\n        {({ index, style }) => (\n          <div style={style}>{Children.toArray(children)[index]}</div>\n        )}\n      </FixedSizeList>\n    </ChakraReactSelectCustomMenuList>\n  );\n};\n\nexport const ControlledSelect = (props: ControlledTextFieldProps) => {\n  const {\n    fieldProps,\n    formControlProps,\n    formControlInnerProps,\n    control,\n    shouldSort,\n  } = props;\n\n  const { helperText, label } = formControlInnerProps || {};\n\n  // A compare function that compares the label property of two objects\n  function compareByLabel(a: SelectOptions, b: SelectOptions) {\n    return a.label.localeCompare(b.label);\n  }\n\n  // Sort the array by label in ascending order\n  if (shouldSort ?? false) fieldProps.options.sort(compareByLabel);\n\n  const {\n    field: { ref, onChange, value },\n    fieldState: { invalid },\n    formState: { errors },\n  } = useController({\n    name: fieldProps.name,\n    control,\n  });\n\n  return (\n    <FormControl {...formControlProps} isInvalid={invalid}>\n      <FormLabel\n        sx={fieldProps.variant === 'flushed' ? { fontSize: 'sm', mb: 0 } : {}}\n      >\n        {label}\n      </FormLabel>\n      <Select\n        {...fieldProps}\n        ref={ref}\n        value={fieldProps.options.find((option) => option.value === value)}\n        filterOption={createFilter({ ignoreAccents: false })}\n        onChange={(newValue: unknown, actionMeta: ActionMeta<unknown>) => {\n          return onChange((newValue as SelectOptions).value);\n        }}\n        useBasicStyles\n        isSearchable={fieldProps.isSearchable}\n        instanceId={fieldProps.name}\n        chakraStyles={{\n          option: (provided, state) => {\n            return {\n              ...provided,\n              fontSize: { base: 'xs', sm: 'sm', md: 'md' },\n            };\n          },\n        }}\n        components={{\n          MenuList: CustomMenuList,\n          Option: ({ children, ...props }) => {\n            // disable hover to improve rendering speed\n            delete props.innerProps.onMouseMove;\n            delete props.innerProps.onMouseOver;\n\n            const propsData: any = props.data;\n\n            return (\n              <chakraComponents.Option {...props}>\n                {children} {propsData.icon != null && propsData.icon}\n              </chakraComponents.Option>\n            );\n          },\n        }}\n      />\n      {helperText != null && <FormHelperText>{helperText}</FormHelperText>}\n      {/* {errors != null && (\n        <FormErrorMessage>\n          <ErrorMessage name={'singleErrorInput'} errors={errors} />\n        </FormErrorMessage>\n      )} */}\n    </FormControl>\n  );\n};\n", "import {\n  Box,\n  SystemStyleObject,\n  useBreakpointValue,\n  useMultiStyleConfig,\n  useTheme,\n} from '@chakra-ui/react';\n\nimport { GroupBase, MenuListProps } from 'chakra-react-select';\nimport {\n  Size,\n  SizeProp,\n} from 'node_modules/chakra-react-select/dist/types/types';\n\n/** A typeguard to ensure the default size on the Input component is valid. */\nconst isSize = (size: unknown): size is Size => {\n  const isString = typeof size === 'string';\n  return isString && ['sm', 'md', 'lg'].includes(size);\n};\n\nconst getDefaultSize = (size: unknown): Size => {\n  if (isSize(size)) {\n    return size;\n  }\n\n  if (size === 'xs') {\n    return 'sm';\n  }\n\n  // This shouldn't be necessary but it might help the size get closer to the\n  // user's goal if they have `xl` as a custom size.\n  if (size === 'xl') {\n    return 'lg';\n  }\n\n  return 'md';\n};\n\nexport const useSize = (size: SizeProp | undefined): Size => {\n  const chakraTheme = useTheme();\n  const defaultSize = getDefaultSize(\n    chakraTheme.components.Input.defaultProps.size\n  );\n\n  // Ensure that the size used is one of the options, either `sm`, `md`, or `lg`\n  const definedSize: SizeProp = size ?? defaultSize;\n  // Or, if a breakpoint is passed, get the size based on the current screen size\n  const realSize: Size =\n    useBreakpointValue<Size>(\n      typeof definedSize === 'string' ? [definedSize] : definedSize,\n      {\n        fallback: 'md',\n      }\n    ) || defaultSize;\n\n  return realSize;\n};\n\nexport const ChakraReactSelectCustomMenuList = <\n  Option,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>,\n>(\n  props: MenuListProps<Option, IsMulti, Group>\n) => {\n  const {\n    className,\n    cx,\n    innerRef,\n    children,\n    maxHeight,\n    isMulti,\n    innerProps,\n    selectProps: {\n      chakraStyles,\n      size: sizeProp,\n      variant,\n      focusBorderColor,\n      errorBorderColor,\n    },\n  } = props;\n\n  const menuStyles = useMultiStyleConfig('Menu');\n\n  // We're pulling in the border radius from the theme for the input component\n  // so we can match the menu lists' border radius to it, but in 2.8.0 the value\n  // was changed to being pulled from a theme variable instead of being hardcoded\n  const size = useSize(sizeProp);\n  const inputStyles = useMultiStyleConfig('Input', {\n    size,\n    variant,\n    focusBorderColor,\n    errorBorderColor,\n  });\n  const fieldStyles = inputStyles.field as Record<string, string>;\n\n  const initialSx: SystemStyleObject = {\n    ...menuStyles.list,\n    minW: '100%',\n    // maxHeight: `${maxHeight}px`,\n    // overflowY: 'auto',\n    // This is hacky, but it works. May be removed in the future\n    '--input-border-radius': fieldStyles?.['--input-border-radius'],\n    borderRadius: fieldStyles?.borderRadius || menuStyles.list?.borderRadius,\n    position: 'relative', // required for offset[Height, Top] > keyboard scroll\n    // WebkitOverflowScrolling: 'touch',\n  };\n\n  const sx = chakraStyles?.menuList\n    ? chakraStyles.menuList(initialSx, props)\n    : initialSx;\n\n  return (\n    <Box\n      role='listbox'\n      {...innerProps}\n      className={cx(\n        {\n          'menu-list': true,\n          'menu-list--is-multi': isMulti,\n        },\n        className\n      )}\n      sx={sx}\n      // ref={innerRef}\n    >\n      {children}\n    </Box>\n  );\n};\n", "import {\n  FormControl,\n  FormControlProps,\n  FormLabel,\n  Switch,\n  SwitchProps,\n} from '@chakra-ui/react';\n\nimport { Control, Controller, useController } from 'react-hook-form';\n\ninterface FieldProps extends SwitchProps {\n  name: string;\n}\n\ninterface FormControlInnerProps {\n  label?: string;\n}\n\ninterface ControlledSwitchProps {\n  fieldProps: FieldProps;\n  formControlProps?: Omit<FormControlProps, 'isInvalid'>;\n  formControlInnerProps?: FormControlInnerProps;\n  control: Control<any>;\n  watch?: Record<string, boolean>;\n}\n\nexport const ControlledSwitch = (props: ControlledSwitchProps) => {\n  const {\n    fieldProps,\n    formControlProps,\n    formControlInnerProps,\n    control,\n    watch,\n  } = props;\n\n  const { label } = formControlInnerProps || {};\n\n  const {\n    field: { ref, onChange, onBlur, value },\n    fieldState: { invalid },\n    formState: { errors },\n  } = useController({\n    name: fieldProps.name,\n    control,\n  });\n\n  return (\n    <FormControl\n      display={'flex'}\n      alignItems={'center'}\n      {...formControlProps}\n      isInvalid={invalid}\n    >\n      <Switch\n        {...fieldProps}\n        {...watch}\n        isChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n        onBlur={onBlur}\n        ref={ref}\n      />\n      {label != null && (\n        <FormLabel\n          htmlFor={fieldProps.id}\n          sx={{ mb: 0, ms: 4 }}\n          cursor={'pointer'}\n        >\n          {label}\n        </FormLabel>\n      )}\n      {/* {errors != null && (\n        <FormErrorMessage>\n          <ErrorMessage name={'singleErrorInput'} errors={errors} />\n        </FormErrorMessage>\n      )} */}\n    </FormControl>\n  );\n};\n", "import { useRef } from 'react';\n\nimport { Alert, Box, ListItem, UnorderedList } from '@chakra-ui/react';\n\nimport { FieldErrors } from 'react-hook-form';\n\ninterface FormErrorsProps {\n  errors:\n    | FieldErrors<Record<string, any>>\n    | Record<string, Record<string, string>>;\n}\n\nexport const FormErrors = ({ errors }: FormErrorsProps) => {\n  const formErrorsRef = useRef<HTMLDivElement>(null);\n\n  return Object.keys(errors).length ? (\n    <Box\n      width={'full'}\n      sx={{\n        mb: 4,\n      }}\n      ref={formErrorsRef}\n    >\n      <Alert status={'error'} variant={'left-accent'} sx={{ p: 4 }}>\n        <UnorderedList fontSize={'sm'} styleType={'none'} sx={{ m: 0 }}>\n          {Object.values(errors).map((error, key) => (\n            <ListItem key={key}>{error?.message?.toString()}</ListItem>\n          ))}\n        </UnorderedList>\n      </Alert>\n    </Box>\n  ) : (\n    <></>\n  );\n};\n", "import { Badge } from '@chakra-ui/react';\n\ninterface InlineErrorProps {\n  error: string;\n}\n\nexport const InlineError = ({ error }: InlineErrorProps) => {\n  return (\n    <Badge\n      colorScheme={'red'}\n      sx={{\n        mt: 2,\n        p: 2,\n        whiteSpace: 'normal',\n      }}\n    >\n      {error}\n    </Badge>\n  );\n};\n", "import { useNavigate } from '@remix-run/react';\n\nimport { Button, Stack } from '@chakra-ui/react';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\n\ninterface SettingsFormsButtonsProps {\n  buttonActionText?: string;\n  buttonCancelUrl?: string;\n  isLoading: boolean;\n}\n\nexport const SettingsFormsButtons = (props: SettingsFormsButtonsProps) => {\n  const { isLoading, buttonActionText, buttonCancelUrl } = props;\n\n  const navigate = useNavigate();\n  return (\n    <>\n      <Stack direction={{ base: 'column', md: 'row' }}>\n        <Button\n          type='submit'\n          colorScheme='blue'\n          width={'full'}\n          isLoading={isLoading}\n        >\n          {buttonActionText ?? 'Actualizar'}\n        </Button>\n        <Button\n          type='button'\n          colorScheme='gray'\n          width={'full'}\n          isLoading={isLoading}\n          onClick={() => navigate(buttonCancelUrl ?? URL_SETTINGS_PATH)}\n        >\n          Cancelar\n        </Button>\n      </Stack>\n    </>\n  );\n};\n", "import { useState } from 'react';\n\nimport _ from 'lodash';\n\nimport * as yup from 'yup';\n\nimport { yupVOValidation } from 'src/yup/utils';\n\nimport { commonValidationSchema } from '#/crud_configs/users/validation';\nimport { DXTPasswordStatus, dxtPasswordStatus } from 'src/domain/shared/validation';\nimport { VODXTPassword } from 'src/domain/shared/value_objects';\n\nexport const useCustomValidationSchema = () => {\n  const [passwordStatus, setPasswordStatus] = useState<DXTPasswordStatus | null>(null);\n\n  const customValidationSchema = yup\n    .object({\n      password: yup\n        .string()\n        .test('password', 'Formato de contrase\u00F1a no v\u00E1lido', (v) => {\n          if (v != null && v != '') {\n            let newPasswordStatus = dxtPasswordStatus(v);\n\n            if (!_.isEqual(passwordStatus, newPasswordStatus))\n              setPasswordStatus(newPasswordStatus);\n\n            return yupVOValidation(VODXTPassword, v);\n          }\n\n          setPasswordStatus(null);\n\n          return true;\n        }),\n      password_repeat: yup\n        .string()\n        .when('password', {\n          is: (value:string) => {\n            return value != null && value != '';\n          },\n          then: (schema) => schema.required('Repita la contrase\u00F1a'),\n        })\n        .test(\n          'passwords-match',\n          'Las contrase\u00F1as no coinciden',\n          function (value) {\n            if (this.parent.password != null && this.parent.password != '') {\n              return this.parent.password === value;\n            }\n    \n            return true;\n          }\n        ),\n    })\n    .required();\n\n  const yupValidationSchema = commonValidationSchema.concat(customValidationSchema);\n\n  return { yupValidationSchema, passwordStatus };\n};", "import { type ValueObjectBase } from '@/value_objects';\nimport { ObjectSchema } from 'yup';\n\n\nexport function yupVOValidation<T, R = T | string>(VO: new (input: R) => ValueObjectBase<T, R>, value: R): boolean {\n  try {\n    new VO(value);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nexport type ExtractSchemaFromYup<Y> = Y extends ObjectSchema<infer S> ? S : never;", "import * as yup from 'yup';\n\nimport { DIAS_DE_ENTREGA_MAX_DAYS, DIAS_DE_ENTREGA_MIN_DAYS, } from 'src/domain/dxt/consts';\n\nexport const commonValidationSchema = yup\n.object({\n  tango_id: yup\n    .number()\n    .integer()\n    .required('Seleccione un cliente de Tango')\n    .typeError('Seleccione un cliente de Tango'),\n  username: yup.string().required('Ingrese un nombre de usuario'),\n  email: yup.string().email('Ingrese un correo electr\u00F3nico v\u00E1lido'),\n  perfil_facturacion_id: yup\n    .number()\n    .integer()\n    .required('Seleccione un perfil de facturaci\u00F3n')\n    .typeError('Seleccione un perfil de facturaci\u00F3n'),\n  dia_de_entrega: yup\n    .number()\n    .integer(\n      `El tiempo de entrega de pedidos debe ser un un n\u00FAmero entero entre ${DIAS_DE_ENTREGA_MIN_DAYS} y ${DIAS_DE_ENTREGA_MAX_DAYS}`\n    )\n    .min(\n      DIAS_DE_ENTREGA_MIN_DAYS,\n      `El tiempo de entrega de pedidos debe ser mayor o igual a ${DIAS_DE_ENTREGA_MIN_DAYS} d\u00EDas`\n    )\n    .max(\n      DIAS_DE_ENTREGA_MAX_DAYS,\n      `El tiempo de entrega de pedidos no puede superar los ${DIAS_DE_ENTREGA_MAX_DAYS} d\u00EDas`\n    )\n    .required('Ingrese el n\u00FAmero de d\u00EDas para entrega de pedidos')\n    .typeError('Ingrese el n\u00FAmero de d\u00EDas para entrega de pedidos'),\n  habilitado_en_dxt: yup.boolean().required(),\n  puede_crear_pedido: yup.boolean().required(),\n  puede_editar_pedido: yup.boolean().required(),\n  ver_pedidos_cumplidos: yup.boolean().required(),\n  ver_sin_precio: yup.boolean().required(),\n  mostrar_mensaje_de_advertencia: yup.boolean().required(),\n  puede_anular_pedido: yup.boolean().required(),\n  borrar_pedido_al_anular: yup.boolean().required(),\n  aprobar_pedido_al_crear: yup.boolean().required(),\n})\n.required();", "import { type InferUnsafeInputFromSchema, type InferValidatedInputFromSchema, type ValidationSchema, validateSchema } from \"@core/validate_schema/validate_schema\";\nimport { DXTError, DXTErrorCode, DXTException } from \"../errors\";\n\n\nexport function validateInput<S extends ValidationSchema>(\n  schema: S,\n  values: InferUnsafeInputFromSchema<typeof schema>,\n): InferValidatedInputFromSchema<typeof schema> {\n  return validateSchema(\n    schema,\n    values,\n    {\n      onUnknownKeys: (unknownKeys, _) => {\n        return new DXTException(\n          new DXTError(\n            DXTErrorCode.BAD_REQUEST,\n            {\n              extra: `Par\u00E1metros desconocidos: ${unknownKeys.join(\", \")}`\n            }\n          )\n        )\n      },\n      onInvalidValues: (invalidsValues, _) => {\n        return new DXTException(\n          new DXTError(\n            DXTErrorCode.BAD_REQUEST,\n            {\n              extra: `Valores inv\u00E1lidos: ${invalidsValues.map(({field, value})=>`(${field}=${value})`).join(\", \")}`\n            }\n          )\n        )\n      }\n    }\n\n  );  \n}\n", "import { random } from '@/math';\n\nexport const DXT_PASSWORD_MIN_LENGTH = 4;\nexport const DXT_PASSWORD_MAX_LENGTH = 16;\n\nexport const DXT_PASSWORD_SPECIAL_CHARS = '!@#$%^&*()-_=+,.;?\\'\"\\\\|/:{}<>[]';\nexport const DXT_PASSWORD_LOWERCASE_CHARS = 'abcdefghijklmnopqrstuvwxyz\u00F1\u00E7\u00E1\u00E9\u00ED\u00F3\u00FA\u00E0\u00E8\u00EC\u00F2\u00F9\u00E2\u00EA\u00EE\u00F4\u00FB\u00E3\u00F5\u00E4\u00EB\u00EF\u00F6\u00FC';\nexport const DXT_PASSWORD_UPPERCASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ\u00D1\u00C7\u00C1\u00C9\u00CD\u00D3\u00DA\u00C0\u00C8\u00CC\u00D2\u00D9\u00C2\u00CA\u00CE\u00D4\u00DB\u00C3\u00D5\u00C4\u00CB\u00CF\u00D6\u00DC';\nexport const DXT_PASSWORD_NUMERIC_CHARS = '0123456789';\n\nexport const IMAGE_CROP_MIN = 0;\nexport const IMAGE_CROP_MAX = 10000;\n\nexport interface DXTPasswordStatus {\n  invalidVariableType: boolean;\n  passwordIsValid: boolean;\n  tooShort: boolean;\n  tooLong: boolean;\n  invalidCharsPresent: boolean;\n  // lowercaseMissing: boolean;\n  // uppercaseMissing: boolean;\n  // numbersMissing: boolean;\n  // specialCharsMissing: boolean;\n}\n\nexport function dxtPasswordStatus(value: string): DXTPasswordStatus {\n\n  let invalidVariableType = true;\n  let invalidCharsPresent = false;\n\n  let lowercaseMissing = true;\n  let uppercaseMissing = true;\n  let numbersMissing = true;\n  let specialCharsMissing = true;\n  let tooShort = false;\n  let tooLong = false;\n\n  if (typeof value === 'string') {\n    invalidVariableType = false;\n\n    tooShort = value.length < DXT_PASSWORD_MIN_LENGTH;\n    \n    tooLong = !tooShort && value.length > DXT_PASSWORD_MAX_LENGTH;\n\n    for (let i = 0; i < value.length; i++) {\n      const char = value[i];\n\n      if (DXT_PASSWORD_LOWERCASE_CHARS.includes(char)) {\n        lowercaseMissing = false;\n      } else if (DXT_PASSWORD_UPPERCASE_CHARS.includes(char)) {\n        uppercaseMissing = false;\n      } else if (char >= '0' && char <= '9') {\n        numbersMissing = false;\n      } else if (DXT_PASSWORD_SPECIAL_CHARS.includes(char)) {\n        specialCharsMissing = false;\n      } else {\n        invalidCharsPresent = true;\n      }\n    }\n\n  }\n\n  const passwordIsValid = !(\n    invalidVariableType ||\n    tooShort ||\n    tooLong ||\n    invalidCharsPresent \n    // ||\n    // lowercaseMissing ||\n    // uppercaseMissing ||\n    // numbersMissing ||\n    // specialCharsMissing\n  );\n\n  return {\n    invalidVariableType,\n    passwordIsValid,\n    tooShort,\n    tooLong,\n    invalidCharsPresent,\n    // lowercaseMissing,\n    // uppercaseMissing,\n    // numbersMissing,\n    // specialCharsMissing,\n  };\n}\n\n\nexport function isDXTPassword(value: unknown): boolean {\n  if (typeof value !== 'string') return false;\n  \n  return dxtPasswordStatus(value).passwordIsValid;\n}\n\n\nfunction _getRandomChars(collection: string, length: number) {\n  let result = '';\n  for (let i = 0; i < length; i++)\n    result += collection[random(0, collection.length - 1)];\n  return result;\n}\n\n\nexport function generateRandomPassword(): string {\n  const length = random(DXT_PASSWORD_MIN_LENGTH, DXT_PASSWORD_MAX_LENGTH);\n\n  const chunkLength = Math.floor(length / 4);\n\n  const chunksLength = [\n    chunkLength,\n    chunkLength,\n    chunkLength,\n    length - chunkLength * 3,\n  ];\n\n  for (let i = 0; i < 10; i++) {\n    const c1 = random(0, 3);\n    const c2 = random(0, 3);\n    if (chunksLength[c1] > 1) {\n      chunksLength[c1]--;\n      chunksLength[c2]++;\n    }\n  }\n\n  let sourceString =\n    _getRandomChars(DXT_PASSWORD_SPECIAL_CHARS, chunksLength[0]) +\n    _getRandomChars(DXT_PASSWORD_LOWERCASE_CHARS, chunksLength[1]) +\n    _getRandomChars(DXT_PASSWORD_UPPERCASE_CHARS, chunksLength[2]) +\n    _getRandomChars(DXT_PASSWORD_NUMERIC_CHARS, chunksLength[3]);\n\n  let newString: string = '';\n\n  while (sourceString !== '') {\n    const pos = random(0, sourceString.length - 1);\n    newString += sourceString[pos];\n    sourceString =\n      sourceString.substring(0, pos) + sourceString.substring(pos + 1);\n  }\n\n  return newString;\n}\n", "import { type VOInput, ValueObject } from '@/value_objects';\n\nimport { generateRandomPassword, isDXTPassword } from '../validation/utils';\n\nexport class VODXTPassword extends ValueObject<string> {\n\n  override validate(value?: VOInput<string>): string {\n    if (typeof value === 'string' && isDXTPassword(value)) return value;\n\n    this.throwError(value);\n  }\n\n  static random(): VODXTPassword {\n    return new VODXTPassword(generateRandomPassword());\n  }\n}\n", "import { ValueObject, VOInput } from \"@core/value_objects\";\n\n\nexport class VOStrings extends ValueObject<string[], string[]|string> {\n  \n  validate(input: VOInput<string[]|string>): string[] {\n    if (typeof input === 'string') return [input]; \n\n    if (!Array.isArray(input)) this.throwError(input); \n\n    return input.map(e => {\n      if (e==null) this.throwError(input); \n      return e.toString();\n    });\n  }\n  \n}\n", "import { FormListsSettings } from '#/crud_configs/users';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { ApiErrors } from '~/components/ApiErrors';\n\nimport { Loading } from './loading';\nimport { Success } from './success';\n\ninterface FormEditProps {\n  typeSettings: FormListsSettings;\n  id: string;\n}\n\nexport const FormEdit = (props: FormEditProps) => {\n  const { typeSettings, id } = props;\n\n  const { state, retry } = typeSettings.api.getOne(id);\n\n  return state.map({\n    loading: (_) => <Loading />,\n\n    error: ({ error }) => (\n      <ApiErrors\n        error={error}\n        retry={retry}\n        cancelAndNavigateTo={URL_SETTINGS_PATH}\n      />\n    ),\n\n    success: (state) => (\n      <Success stateData={state.data} typeSettings={typeSettings} />\n    ),\n  });\n};\n", "import { useNavigate, useParams } from '@remix-run/react';\n\nimport { settings } from '#/crud_configs/users';\n\nimport { integerValidator } from '@core/validate_schema';\nimport {\n  URL_SETTINGS_PATH,\n  URL_SETTINGS_VENDORS_PATH,\n} from 'src/config/url_paths';\nimport { CommonErrors } from '~/components/CommonErrors';\nimport { SettingsFormHeading } from '~/components/SettingsFormHeading';\n\nimport { FormEdit } from './components';\n\nexport default function Edit() {\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const typeSettings = settings.vendors;\n\n  try {\n    if (integerValidator(id)) {\n      return (\n        <>\n          <SettingsFormHeading\n            title={typeSettings.titles.edit}\n            actionButton={{\n              label: 'Cancelar',\n              buttonProps: {\n                colorScheme: 'gray',\n                onClick: () => {\n                  navigate(URL_SETTINGS_VENDORS_PATH);\n                },\n              },\n            }}\n          />\n          <FormEdit typeSettings={typeSettings} id={id as unknown as string} />\n        </>\n      );\n    }\n  } catch (e) {\n    return (\n      <CommonErrors\n        error={'Usuario no encontrado'}\n        buttonProps={{\n          label: 'Volver a Configuraci\u00F3n',\n          colorScheme: 'green',\n          onClick: () => {\n            navigate(URL_SETTINGS_PATH);\n          },\n        }}\n      />\n    );\n  }\n}\n", "import { Box, Divider, Grid, GridItem, HStack, Stack } from '@chakra-ui/react';\n\nimport { FormInputSkeleton } from '~/components/form_elements/FormSkeletons';\n\nexport const Loading = () => (\n  <Box\n    width={'full'}\n    sx={{\n      mt: 8,\n      mb: 4,\n    }}\n  >\n    <Grid\n      templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n      alignItems={'center'}\n      gap={4}\n    >\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Stack spacing={4} direction={{ base: 'column' }}>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n          <HStack spacing={4}>\n            <FormInputSkeleton />\n          </HStack>\n        </Stack>\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem></GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n    </Grid>\n  </Box>\n);\n", "import { useEffect } from 'react';\n\nimport { useAppResources } from '#/app_resources/app_resources';\nimport { FormListsSettings } from '#/crud_configs/users';\nimport { useTangoList } from '#/hooks/useTangoList';\nimport { promiseBasedToast } from '#/utils/promise_based_toast';\n\nimport {\n  Badge,\n  Box,\n  Divider,\n  Grid,\n  GridItem,\n  Heading,\n  HStack,\n  Stack,\n  useToast,\n} from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nimport {\n  FetchStateError,\n  FetchStateLoading,\n  FetchStateSuccess,\n} from '@core/react-hooks/useAxiosFetch';\nimport { useForm } from 'react-hook-form';\nimport { URL_SETTINGS_VENDORS_PATH } from 'src/config/url_paths';\nimport { UpdateVendedorInput } from 'src/domain/dxt/inputs';\nimport { DXTVendedorResult } from 'src/domain/dxt/results';\nimport { PerfilResult } from 'src/domain/tango/results';\nimport { API_TANGO_PERFIL } from 'src/api-client/tango/paths';\nimport { CommonCard } from '~/components/CommonCard';\nimport { ControlledInput } from '~/components/form_elements/ControlledInput';\nimport { ControlledRadio } from '~/components/form_elements/ControlledRadio';\nimport { ControlledSelect } from '~/components/form_elements/ControlledSelect';\nimport { ControlledSwitch } from '~/components/form_elements/ControlledSwitch';\nimport { FormErrors } from '~/components/form_elements/FormErrors';\nimport { InlineError } from '~/components/InlineError';\nimport { SettingsFormsButtons } from '~/components/SettingsFormButtons';\n\nimport { useCustomValidationSchema } from '../validation';\n\ninterface SuccessProps {\n  stateData: DXTVendedorResult;\n  typeSettings: FormListsSettings;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { stateData, typeSettings } = props;\n\n  const updateData = {\n    ...stateData,\n  };\n\n  const app = useAppResources();\n\n  const toast = useToast();\n\n  const { yupValidationSchema, passwordStatus } = useCustomValidationSchema();\n\n  type _InputSchema = yup.InferType<typeof yupValidationSchema>;\n\n  const { state: statePerfiles, result: resultPerfiles } =\n    useTangoList<PerfilResult[]>({\n      url: API_TANGO_PERFIL,\n      fieldsMap: {\n        label: 'name',\n        value: 'id',\n      },\n    });\n\n  const { state: stateRelationship, result: resultRelationship } =\n    typeSettings.api.getRelation();\n\n  const {\n    handleSubmit,\n    control,\n    resetField,\n    setError,\n    watch,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = useForm<_InputSchema>({\n    defaultValues: {\n      username: updateData.username,\n      email: updateData.email ?? '',\n      habilitado_en_dxt: updateData.habilitado_en_dxt,\n      puede_crear_pedido: updateData.puede_crear_pedido,\n      puede_editar_pedido: updateData.puede_anular_pedido,\n      ver_pedidos_cumplidos: updateData.ver_pedidos_cumplidos,\n      ver_sin_precio: updateData.ver_sin_precio,\n      mostrar_mensaje_de_advertencia: updateData.mostrar_mensaje_de_advertencia,\n      puede_anular_pedido: updateData.puede_anular_pedido,\n      borrar_pedido_al_anular: updateData.borrar_pedido_al_anular,\n      aprobar_pedido_al_crear: updateData.aprobar_pedido_al_crear,\n      dia_de_entrega: updateData.dia_de_entrega,\n    },\n    resolver: yupResolver(yupValidationSchema),\n  });\n\n  /*\n   * If the user can't cancel orders, the option to delete the order when canceling it is disabled\n   */\n  const watchPuedeAnularPedido = watch('puede_anular_pedido');\n\n  useEffect(() => {\n    if (watchPuedeAnularPedido === false)\n      resetField('borrar_pedido_al_anular', { defaultValue: false });\n  }, [watchPuedeAnularPedido]);\n\n  useEffect(() => {\n    if (stateRelationship instanceof FetchStateSuccess) {\n      // prettier-ignore\n      const defaultValue = (resultRelationship.find( (option) => option.value === updateData.tango_id)?.value as number) ?? undefined;\n\n      resetField('tango_id', { defaultValue });\n    }\n\n    if (statePerfiles instanceof FetchStateSuccess) {\n      // prettier-ignore\n      const defaultValue = (resultPerfiles.find((option) => option.value === updateData.perfil_facturacion_id)?.value as number) ?? undefined;\n\n      resetField('perfil_facturacion_id', { defaultValue });\n    }\n  }, [stateRelationship, statePerfiles]);\n\n  const disableForm = isSubmitSuccessful || isSubmitting;\n\n  const onSubmit = async (dataUnsafe: _InputSchema) => {\n    const { password_repeat, ...data } = dataUnsafe;\n\n    // remove unnecessary fields\n    if (data.email === '') delete data.email;\n    if (data.password === '') delete data.password;\n\n    const input: UpdateVendedorInput = data;\n\n    const result = await typeSettings.api.patch(updateData.id, input, app);\n\n    await promiseBasedToast({\n      toast,\n      result,\n      messages: {\n        success: { title: 'Usuario actualizado' },\n        error: { title: 'Ha ocurrido un error' },\n        loading: { title: 'Actualizando usuario' },\n      },\n    })\n      .then(() => {\n        app.navigate(URL_SETTINGS_VENDORS_PATH);\n      })\n      .catch((e) => {\n        setError('root', { message: e });\n      });\n  };\n\n  return (\n    <form noValidate onSubmit={handleSubmit(onSubmit)}>\n      <Box>\n        <FormErrors errors={errors} />\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Informaci\u00F3n del Vendedor\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledSelect\n                fieldProps={{\n                  name: 'tango_id',\n                  placeholder: typeSettings.tangoRelatedFields?.placeholder,\n                  options: resultRelationship,\n                  noOptionsMessage(obj) {\n                    return typeSettings.tangoRelatedFields?.empty;\n                  },\n                  isSearchable: true,\n                  selectedOptionStyle: 'check',\n                  isLoading: stateRelationship instanceof FetchStateLoading,\n                }}\n                formControlProps={{\n                  isDisabled:\n                    disableForm ||\n                    !(stateRelationship instanceof FetchStateSuccess),\n                }}\n                formControlInnerProps={{\n                  label: typeSettings.tangoRelatedFields?.label,\n                }}\n                control={control}\n              />\n              {stateRelationship instanceof FetchStateError && (\n                <InlineError error={stateRelationship.errorOrNull().error} />\n              )}\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'username',\n                  id: 'username',\n                  type: 'text',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Nombre de Usuario',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'email',\n                  id: 'email',\n                  type: 'text',\n                  inputMode: 'email',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Correo electr\u00F3nico',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'password',\n                  id: 'password',\n                  type: 'password',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Nueva contrase\u00F1a',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'password_repeat',\n                  id: 'password_repeat',\n                  type: 'password',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Confirmaci\u00F3n de Contrase\u00F1a',\n                }}\n                control={control}\n              />\n            </GridItem>\n            {passwordStatus != null && (\n              <GridItem colSpan={{ md: 2 }}>\n                {passwordStatus.tooShort && (\n                  <Badge colorScheme='red'>Contrase\u00F1a muy corta</Badge>\n                )}\n                {passwordStatus.tooLong && (\n                  <Badge colorScheme='red'>Contrase\u00F1a muy larga</Badge>\n                )}\n                {passwordStatus.invalidCharsPresent && (\n                  <Badge colorScheme='red'>Evite caracteres no v\u00E1lidos</Badge>\n                )}\n              </GridItem>\n            )}\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledSelect\n                fieldProps={{\n                  name: 'perfil_facturacion_id',\n                  placeholder: 'Seleccione un perfil',\n                  options: resultPerfiles,\n                  noOptionsMessage(obj) {\n                    return 'No hay perfiles disponibles';\n                  },\n                  isLoading: statePerfiles instanceof FetchStateLoading,\n                  selectedOptionStyle: 'check',\n                }}\n                formControlProps={{\n                  isDisabled:\n                    disableForm ||\n                    !(statePerfiles instanceof FetchStateSuccess),\n                }}\n                control={control}\n                formControlInnerProps={{\n                  label: 'Perfil de facturaci\u00F3n',\n                }}\n              />\n              {statePerfiles instanceof FetchStateError && (\n                <InlineError error={statePerfiles.errorOrNull().error} />\n              )}\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Estado\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledRadio\n                fieldProps={{\n                  name: 'habilitado_en_dxt',\n                  options: [\n                    {\n                      value: true,\n                      label: 'Establecido en Tango',\n                    },\n                    {\n                      value: false,\n                      label: 'Deshabilitado',\n                    },\n                  ],\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                radioProps={{\n                  size: { base: 'sm', sm: 'md' },\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Comunicaci\u00F3n\n              </Heading>\n            </GridItem>\n            <GridItem>\n              <ControlledSwitch\n                fieldProps={{\n                  name: 'mostrar_mensaje_de_advertencia',\n                  id: 'mostrar_mensaje_de_advertencia',\n                }}\n                formControlProps={{\n                  width: 'auto',\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Mostrar mensaje de advertencia',\n                }}\n                control={control}\n              />\n            </GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Pedidos\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Stack spacing={4} direction={{ base: 'column' }}>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_crear_pedido',\n                      id: 'puede_crear_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede crear pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_editar_pedido',\n                      id: 'puede_editar_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede editar pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_anular_pedido',\n                      id: 'puede_anular_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede anular pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'borrar_pedido_al_anular',\n                      id: 'borrar_pedido_al_anular',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Borrar pedido al anular',\n                    }}\n                    control={control}\n                    watch={{\n                      isDisabled: watchPuedeAnularPedido === false,\n                      ...(watchPuedeAnularPedido === false && {\n                        isChecked: false,\n                      }),\n                    }}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'aprobar_pedido_al_crear',\n                      id: 'aprobar_pedido_al_crear',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Los pedidos se aprueban al crearlos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'ver_pedidos_cumplidos',\n                      id: 'ver_pedidos_cumplidos',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede ver los pedidos cumplidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'ver_sin_precio',\n                      id: 'ver_sin_precio',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede ver art\u00EDculos sin precios',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n              </Stack>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'dia_de_entrega',\n                  id: 'dia_de_entrega',\n                  type: 'number',\n                  inputMode: 'tel',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Tiempo de entrega de pedidos',\n                  helperText: 'Expresado en d\u00EDas',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem></GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <SettingsFormsButtons\n            buttonActionText='Actualizar'\n            isLoading={disableForm}\n          />\n        </CommonCard>\n      </Box>\n    </form>\n  );\n};\n", "import { useState } from 'react';\n\nimport _ from 'lodash';\n\nimport * as yup from 'yup';\n\nimport { yupVOValidation } from 'src/yup/utils';\n\nimport { commonValidationSchema } from '#/crud_configs/users/validation';\nimport { DXTPasswordStatus, dxtPasswordStatus } from 'src/domain/shared/validation';\nimport { VODXTPassword } from 'src/domain/shared/value_objects';\n\nexport const useCustomValidationSchema = () => {\n  const [passwordStatus, setPasswordStatus] = useState<DXTPasswordStatus | null>(null);\n\n  const customValidationSchema = yup\n    .object({\n      password: yup\n        .string()\n        .test('password', 'Formato de contrase\u00F1a no v\u00E1lido', (v) => {\n          if (v != null && v != '') {\n            let newPasswordStatus = dxtPasswordStatus(v);\n\n            if (!_.isEqual(passwordStatus, newPasswordStatus))\n              setPasswordStatus(newPasswordStatus);\n\n            return yupVOValidation(VODXTPassword, v);\n          }\n\n          setPasswordStatus(null);\n\n          return true;\n        }),\n      password_repeat: yup\n        .string()\n        .when('password', {\n          is: (value:string) => {\n            return value != null && value != '';\n          },\n          then: (schema) => schema.required('Repita la contrase\u00F1a'),\n        })\n        .test(\n          'passwords-match',\n          'Las contrase\u00F1as no coinciden',\n          function (value) {\n            if (this.parent.password != null && this.parent.password != '') {\n              return this.parent.password === value;\n            }\n    \n            return true;\n          }\n        ),\n    })\n    .required();\n\n  const yupValidationSchema = commonValidationSchema.concat(customValidationSchema);\n\n  return { yupValidationSchema, passwordStatus };\n};", "import { FormListsSettings } from '#/crud_configs/users';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { ApiErrors } from '~/components/ApiErrors';\n\nimport { Loading } from './loading';\nimport { Success } from './success';\n\ninterface FormEditProps {\n  typeSettings: FormListsSettings;\n  id: string;\n}\n\nexport const FormEdit = (props: FormEditProps) => {\n  const { typeSettings, id } = props;\n\n  const { state, retry } = typeSettings.api.getOne(id);\n\n  return state.map({\n    loading: (_) => <Loading />,\n\n    error: ({ error }) => (\n      <ApiErrors\n        error={error}\n        retry={retry}\n        cancelAndNavigateTo={URL_SETTINGS_PATH}\n      />\n    ),\n\n    success: (state) => (\n      <Success stateData={state.data} typeSettings={typeSettings} />\n    ),\n  });\n};\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\nimport { dxtPedidoGetArticulosScreenListEndpoint, dxtPedidoSetArticulosScreenListEndpoint } from '!/api/dxt/pedido/endpoints';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await dxtPedidoGetArticulosScreenListEndpoint.get(request, params);\n}\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  return await dxtPedidoSetArticulosScreenListEndpoint.post(request, params);\n}\n", "export enum UserRole {\n  customer,\n  vendor,\n  admin,\n}\n", "import { ApiController, ApiResponse, type ApiRequest } from '@depsel-nodejs/api-server';\nimport { jsonResponse } from '@depsel-nodejs/api-server/utils';\nimport { ValidationException } from '@/validation/errors';\nimport {\n  type DXTErrorInfo,\n  exceptionToDXTErrorInfo,\n  getDXTErrorDescription,\n  getHttpStatusFromErrorCode,\n  HTTP_STATUS_UNAVAILABLE,\n  requiresContactingAdmin,\n} from 'src/domain/shared/errors';\n\nimport { isProduction } from 'src/environment';\n\nimport { VALIDATION_ERROR } from 'src/texts/dxt_error';\n\n\nexport class RootController<R extends ApiRequest = ApiRequest> extends ApiController<DXTErrorInfo, R> {\n\n  override async onError(e: any, req: Partial<R>): Promise<ApiResponse<never, DXTErrorInfo>> {\n    const finalE = e instanceof ValidationException && isProduction() ? new ValidationException(VALIDATION_ERROR) : e;\n\n    const dxtError = exceptionToDXTErrorInfo(finalE);\n\n    const {\n      status: originalStatus,\n      errorCode,\n      extra,\n    } = dxtError;\n\n    const status =\n      originalStatus === HTTP_STATUS_UNAVAILABLE\n        ? getHttpStatusFromErrorCode(errorCode)\n        : originalStatus;\n  \n    let errorDescription = getDXTErrorDescription(errorCode);\n\n    if (requiresContactingAdmin(errorCode)) {\n      errorDescription = errorDescription.toLocaleUpperCase() + '. Si el problema persiste contacte al administrador.';\n    }\n\n    return jsonResponse<never, DXTErrorInfo>(\n      {\n        status,\n        error: errorDescription,\n        errorCode,\n        extra,\n      },\n      {\n        status,\n      }\n    );\n  }  \n\n}\n\n\nexport const rootController = new RootController();\n", "import * as crypto from 'crypto';\nimport { BinaryToTextEncoding } from 'crypto';\n\nexport function sha256ToBuffer(value: string, secret: string): Buffer {\n  return crypto.createHmac('SHA256', secret).update(value).digest();\n}\n\nexport function sha256ToString(\n  value: string,\n  secret: string,\n  encoding: BinaryToTextEncoding = 'hex'\n): string {\n  return crypto.createHmac('SHA256', secret).update(value).digest(encoding);\n}\n\nexport function sha1ToBuffer(value: string, secret: string): Buffer {\n  return crypto.createHmac('SHA1', secret).update(value).digest();\n}\n\nexport function sha1ToString(\n  value: string,\n  secret: string,\n  encoding: BinaryToTextEncoding = 'hex'\n): string {\n  return crypto.createHmac('SHA1', secret).update(value).digest(encoding);\n}\n", "export enum HaltCode {\n  INVALID_SETTINGS = -1,\n  INITIALIZATION_ERROR = -2,\n  CRITICAL_ERROR = -3\n}\n\n\nexport function halt(code: HaltCode, message: string): never {\n  console.error(`${_haltCodeDescription(code)}: ${message}`);\n  process.exit(code);\n}\n\n\nconst _haltCodeDescriptions = {\n  [HaltCode.INVALID_SETTINGS]: \"Invalid settings\",\n  [HaltCode.INITIALIZATION_ERROR]: \"Initialization error\",\n  [HaltCode.CRITICAL_ERROR]: \"Critical error \",\n}\n\nfunction _haltCodeDescription(code: HaltCode): string {\n  return _haltCodeDescriptions[code] ?? _haltCodeDescriptions[HaltCode.CRITICAL_ERROR];\n}\n", "import { HaltCode, halt } from '@depsel-nodejs/system';\n\nexport const AUTH_SECRET: string = process.env.AUTH_SECRET ?? '';\nif (typeof AUTH_SECRET !== 'string' || AUTH_SECRET.length < 10) {\n  halt(HaltCode.INITIALIZATION_ERROR, 'Invalid AUTH_SECRET');\n}\n", "import { sha1ToString } from '@depsel-nodejs/crypto/utils';\n\nimport {\n  AuthTokenProps,\n  VOWeakCheckAuthToken,\n} from 'src/domain/auth/value_objects';\n\nimport { AUTH_SECRET } from '../consts';\n\n\nexport class VOAuthToken extends VOWeakCheckAuthToken {\n\n  override validate(rawValue: string | AuthTokenProps): AuthTokenProps {\n    if (rawValue instanceof AuthTokenProps) return rawValue;\n\n    if (typeof rawValue === 'string') {\n      const value = rawValue.trim().toLowerCase();\n\n      const p = value.lastIndexOf('-');\n      if (p < 0) this.throwError(rawValue);\n\n      const result = super.validate(value);\n\n      const payloadHash = sha1ToString(value.substring(0, p), AUTH_SECRET);\n\n      const weakCheckTokenHash = this.verificationHash?.toString();\n\n      if (payloadHash !== weakCheckTokenHash) this.throwError(rawValue);\n\n      return result;\n    }\n\n    this.throwError(rawValue);\n  }\n\n  override getVerificationHashString(): string {\n    return sha1ToString(this.getPayloadString(), AUTH_SECRET);\n  }\n}\n", "export const USER_NAME_MIN_LENGTH = 2;\nexport const USER_NAME_MAX_LENGTH = 60;\n\n\nexport function isUserName(value: unknown): boolean {\n  const re = /^[a-zA-Z0-9_]+$/iu;\n\n  return (\n    typeof value === 'string' &&\n    value.length >= USER_NAME_MIN_LENGTH &&\n    value.length <= USER_NAME_MAX_LENGTH &&\n    re.test(value)\n  );\n}\n", "import { EMAIL_MAX_LENGTH } from \"@/validation\";\nimport { USER_NAME_MAX_LENGTH } from \"src/domain/user/validation\";\n\nimport { BasicUserUnsafe } from \"src/domain/user/entities/user\";\n\nexport interface UserBaseModel extends Omit<BasicUserUnsafe, 'id'> {\n  tango_id: number,\n  password_hash?: string;\n  timestamp_modificacion: number;\n  habilitado_en_dxt: boolean;\n}\n\n\nexport const userBaseTableCreationFieldsSQL: { [k in keyof UserBaseModel]: string } = {\n  tango_id: `D_ID NOT NULL`,\n  username: `varchar(${USER_NAME_MAX_LENGTH}) NOT NULL`,\n  puede_crear_pedido: `bit NOT NULL`,\n  puede_editar_pedido: `bit NOT NULL`,\n  puede_anular_pedido: `bit NOT NULL`,\n  borrar_pedido_al_anular: `bit NOT NULL`,\n  perfil_facturacion_id: `D_ID NOT NULL`,\n  aprobar_pedido_al_crear: `bit NOT NULL`,\n  ver_pedidos_cumplidos: `bit NOT NULL`,\n  dia_de_entrega: `int NOT NULL`,\n  email: `varchar(${EMAIL_MAX_LENGTH})`,\n  ver_sin_precio: `bit NOT NULL`,\n  mostrar_mensaje_de_advertencia: `bit NOT NULL`,\n  habilitado_en_dxt: `bit NOT NULL`,\n  timestamp_modificacion: `bigint NOT NULL`,\n};\n", "import { MD5_LENGTH } from \"@/validation\";\nimport { type UserBaseModel, userBaseTableCreationFieldsSQL } from \"../../user/models/user_base.model\";\n\n\nexport const DXT_CLIENTE_TABLE = 'dxt_cliente';\nexport const DXT_CLIENTE_ID_FIELD = 'dxt_cliente_id';\n\n\nexport interface DXTClienteModel extends UserBaseModel {\n  dxt_cliente_id: number;\n  password_hash: string;\n}\n\n\nexport const dxtClienteTableCreationFieldsSQL: { [k in keyof Omit<DXTClienteModel, 'id'>]: string } = {\n  dxt_cliente_id: `int IDENTITY(1,1) NOT NULL`,\n  password_hash: `varchar(${MD5_LENGTH}) NOT NULL`,\n  ...userBaseTableCreationFieldsSQL,\n};\n\n\nexport const dxtClienteTableCreationIndexesSQL = [\n\t`CONSTRAINT pk_dxt_cliente_username UNIQUE (username)`,\n\t`CONSTRAINT pk_dxt_cliente_id PRIMARY KEY (dxt_cliente_id)`,\n]\n", "export const TRANSPORTE_TABLE = 'GVA24';\n\nexport const TRANSPORTE_ID_FIELD = 'ID_GVA24' as const;\nexport const TRANSPORTE_CODE_FIELD = 'COD_TRANSP' as const;\n\n\nexport interface TransporteModel {\n\t[TRANSPORTE_ID_FIELD]: number;\n  [TRANSPORTE_CODE_FIELD]: string;\n  \n  // COD_GVA24: string; // Duplica COD_TRANSP\n\n\tCATEG_TRAN?: string;\n\tCUIT_TRANS?: string;\n\tDOM_TRANS?: string;\n\tNOMBRE_TRA?: string;\n\tPORC_RECAR?: number;\n\tCOD_POSTAL?: string;\n\tLOCALIDAD?: string;\n\tCOD_PROVIN?: string;\n\tTELEFONO?: string;\n\tE_MAIL?: string;\n\tWEB?: string;\n\n\tCOD_GVA18?: string;\n  ID_GVA18?: number;\n}\n\n\nexport const transporteModelColumns: Array<keyof TransporteModel> = [\n\tTRANSPORTE_CODE_FIELD,\n  TRANSPORTE_ID_FIELD,\n\n\t'CATEG_TRAN',\n\t'CUIT_TRANS',\n\t'DOM_TRANS',\n\t'NOMBRE_TRA',\n\t'PORC_RECAR',\n\t'COD_POSTAL',\n\t'LOCALIDAD',\n\t'COD_PROVIN',\n\t'TELEFONO',\n\t'E_MAIL',\n\t'WEB',\n  \n\t'COD_GVA18',\n  'ID_GVA18',\n];\n\nexport const TRANSPORTE_NAME_COLUMNS: typeof transporteModelColumns = ['NOMBRE_TRA'];\n", "export const VENDEDOR_TABLE = 'GVA23';\n\nexport const VENDEDOR_ID_FIELD = 'ID_GVA23' as const;\nexport const VENDEDOR_CODE_FIELD = 'COD_VENDED' as const;\n\n\nexport interface VendedorModel {\n  [VENDEDOR_ID_FIELD]: number;\n  [VENDEDOR_CODE_FIELD]: string;\n\n  NOMBRE_VEN?: string;\n  INHABILITA?: boolean;\n}\n\n\nexport interface FullVendedorModel extends VendedorModel {\n\tPORC_COMIS?: number;\n\tTIPO_DOC?: string;\n\tNRO_DOC?: string;\n\tDOM_VENDED?: string;\n\tCOD_POSTAL?: string;\n\tLOCALIDAD?: string;\n\tCOD_PROVIN?: string;\n\tTELEFONO?: string;\n\tE_MAIL?: string;\n\tID_TIPO_DOCUMENTO_GV?: number;\n\n\tCOD_GVA18?: string;\n\tID_GVA18?: number;\n}\n\n\nexport const vendedorModelColumns: Array<keyof VendedorModel> = [\n  VENDEDOR_ID_FIELD,\n  VENDEDOR_CODE_FIELD,\n\n  'NOMBRE_VEN',\n  'INHABILITA',\n] as const;\n\n\nexport const VENDEDOR_NAME_COLUMNS: typeof vendedorModelColumns = ['NOMBRE_VEN'];\n\n\nexport const fullVendedorModelColumns: Array<keyof FullVendedorModel> = [\n  ...vendedorModelColumns,\n\n\t'PORC_COMIS',\n\t'TIPO_DOC',\n\t'NRO_DOC',\n\t'DOM_VENDED',\n\t'COD_POSTAL',\n\t'LOCALIDAD',\n\t'COD_PROVIN',\n\t'TELEFONO',\n\t'E_MAIL',\n\t'ID_TIPO_DOCUMENTO_GV',\n\n  'COD_GVA18',\n\t'ID_GVA18',\n] as const;\n", "import { TRANSPORTE_CODE_FIELD, TRANSPORTE_ID_FIELD } from \"./transporte.model\";\nimport { VENDEDOR_CODE_FIELD, VENDEDOR_ID_FIELD } from \"./vendedor.model\";\n\nexport const CLIENTE_TABLE = 'GVA14';\n\nexport const CLIENTE_ID_FIELD = 'ID_GVA14' as const;\nexport const CLIENTE_CODE_FIELD = 'COD_CLIENT' as const;\n\n\nexport interface ClienteModel {\n  [CLIENTE_ID_FIELD]: number;\n  [CLIENTE_CODE_FIELD]: string;\n\n  [VENDEDOR_ID_FIELD]?: number;\n  [VENDEDOR_CODE_FIELD]?: string;\n\n  [TRANSPORTE_ID_FIELD]?: string;\n  [TRANSPORTE_CODE_FIELD]?: string;\n\n  NOM_COM?: string;\n  RAZON_SOCI?: string;\n  HABILITADO: boolean;\n  FECHA_INHA?: string;\n}\n\n\nexport interface FullClienteModel extends ClienteModel {\n  [CLIENTE_ID_FIELD]: number;\n\n\tCOD_TRANSP?: string;\n  SOBRE_II?: string;\n\tSOBRE_IVA?: string;\n\tCOND_VTA?: number;\n  CUIT?: string;\n  N_IMPUESTO?: string;\n\tN_ING_BRUT?: string;\n\tE_MAIL?: string;\n\tCALLE?: string;\n\tDOMICILIO?: string;\n  C_POSTAL?: string;\n\tCIUDAD?: string;\n  COD_ZONA?: string;\n  COD_PROVIN?: string;\n\tTELEFONO_1?: string;\n\tTELEFONO_2?: string;\n}\n\n\nexport const clienteModelColumns: Array<keyof ClienteModel> = [\n  CLIENTE_ID_FIELD,\n  CLIENTE_CODE_FIELD,\n\n  VENDEDOR_ID_FIELD,\n  VENDEDOR_CODE_FIELD,\n\n  TRANSPORTE_ID_FIELD,\n  TRANSPORTE_CODE_FIELD,\n\n  'NOM_COM',\n  'RAZON_SOCI',\n  'HABILITADO',\n  'FECHA_INHA',\n] as const;\n\n\nexport const CLIENTE_NAME_COLUMNS: typeof clienteModelColumns = ['RAZON_SOCI', 'NOM_COM'];\n\n\nexport const fullClienteModelColumns: Array<keyof FullClienteModel> = [\n  ...clienteModelColumns,\n\n  'SOBRE_II',\n  'SOBRE_IVA',\n  'COND_VTA',\n  'CUIT',\n  'N_IMPUESTO',\n  'N_ING_BRUT',\n  'E_MAIL',\n  'CALLE',\n  'DOMICILIO',\n  'C_POSTAL',\n  'CIUDAD',\n  'COD_ZONA',\n  'COD_PROVIN',\n  'TELEFONO_1',\n  'TELEFONO_2',\n] as const;\n", "import path from 'path';\n\nimport { type DXTException } from 'src/domain/shared/errors';\n\nimport { configPath } from '../paths';\nimport { StoredDBSettingsDTO, StoredDBSettingsValidated, StoredMiscSettingsDTO, StoredMiscSettingsValidated } from '!/infrastucture/settings/dtos';\nimport { mkdir, readFile, writeFile } from 'fs/promises';\nimport { parse as parseINI, stringify as stringifyINI } from 'ini';\nimport { type DTO } from '@/dto';\n\n\nconst dbIniFilename = path.join(configPath, 'db_settings.ini');\nconst miscIniFilename = path.join(configPath, 'misc_settings.ini');\n\n\ntype InferDTOI<D extends DTO<any, any, any>> = D extends DTO<any, infer I, any> ? I : never;\n\nasync function _createDTOFromINI<D extends DTO<any, any, any>>(filename: string, dtoConstructor: (data: InferDTOI<D>)=>D): Promise<D> {\n  \n  let iniFileContent: string;\n\n  try {\n    iniFileContent = await readFile(filename, { encoding : 'utf-8' });\n\n    const settingsInput = parseINI(iniFileContent) as InferDTOI<D>;\n    return dtoConstructor(settingsInput);\n\n  } catch (e){\n    const settings = dtoConstructor({} as unknown as InferDTOI<D>);\n\n    await _saveDTOToINI(filename, settings);\n\n    return settings;\n  }\n\n}\n\n\nasync function _saveDTOToINI<D extends DTO<any, any, any>>(filename: string, dto: D): Promise<typeof dto> {\n  const iniFileContent = stringifyINI(dto.toUnsafe())\n\n  await mkdir(path.dirname(filename), {recursive: true});\n\n  await writeFile(filename, iniFileContent, { encoding : 'utf-8' });\n\n  return dto;\n}\n\n\nclass SettingsService {\n  _accessError: DXTException | null = null;\n\n  _dbSettings: StoredDBSettingsDTO | null = null;\n  _miscSettings: StoredMiscSettingsDTO | null = null;\n\n\n  async getDBSettings(ignoreCache?: boolean): Promise<StoredDBSettingsValidated> {\n    if ((ignoreCache ?? false) || this._dbSettings == null) this._dbSettings = await this._loadDBSettings();\n    \n    return this._dbSettings.data;\n  }\n\n\n  async setDBSettings(settings: StoredDBSettingsDTO): Promise<StoredDBSettingsValidated> {\n    this._dbSettings = await this._saveDBSettings(settings);\n\n    return this._dbSettings.data;\n  }\n\n\n  async getMiscSettings(ignoreCache?: boolean): Promise<StoredMiscSettingsValidated> {\n    if ((ignoreCache ?? false) || this._miscSettings == null) this._miscSettings = await this._loadMiscSettings();\n    \n    return this._miscSettings.data;\n  }\n\n\n  async setMiscSettings(settings: StoredMiscSettingsDTO): Promise<StoredMiscSettingsValidated> {\n    this._miscSettings = await this._saveMiscSettings(settings);\n    \n    return this._miscSettings.data;\n  }\n\n\n  private async _loadDBSettings(): Promise<StoredDBSettingsDTO> {\n    return await _createDTOFromINI<StoredDBSettingsDTO>(dbIniFilename, (data)=>new StoredDBSettingsDTO(data));\n  }\n\n\n  private async _loadMiscSettings(): Promise<StoredMiscSettingsDTO> {\n    return await _createDTOFromINI<StoredMiscSettingsDTO>(miscIniFilename, (data)=>new StoredMiscSettingsDTO(data));\n  }\n\n\n  private async _saveDBSettings(settings: StoredDBSettingsDTO): Promise<typeof settings> {\n    return await _saveDTOToINI(dbIniFilename, settings);\n  }\n\n  private async _saveMiscSettings(settings: StoredMiscSettingsDTO): Promise<typeof settings> {\n    return await _saveDTOToINI(miscIniFilename, settings);\n  }\n\n}\n\n\nexport const settingsService = new SettingsService();\n", "import envPaths from 'env-paths';\n\nimport { APP_NAME } from 'src/config/app';\n\n\nexport const appPaths = envPaths(APP_NAME.toLowerCase());\n\nexport const configPath = appPaths.config;\nexport const dataPath = appPaths.data;\nexport const logPath = appPaths.log;\nexport const tempPath = appPaths.temp;\nexport const cachePath = appPaths.cache;\n", "export const APP_NAME = 'DXTango';\n", "export abstract class DTO<T, I=T, U=T> {\n  readonly data: T;\n\n  constructor(input: I) {\n    this.data = this.validate(input);\n  }\n\n  abstract validate(input: I): T;\n  \n  abstract toUnsafe(): U;\n}\n\n\nexport abstract class DTOMapper<\n  M,\n  D extends DTO<T, any, U>,\n  T,\n  U,\n> {\n  protected abstract fromDTOImplementation(d: D): M | null;\n  protected abstract toUnsafeImplementation(m: M): U | null;\n\n  fromDTO(d: D): M | null {\n    if (d !== null) {\n      return this.fromDTOImplementation(d);\n    }\n\n    return null;\n  }\n\n  toUnsafe(m: M): U | null {\n    if (m !== null) {\n      return this.toUnsafeImplementation(m);\n    }\n\n    return null;\n  }\n}\n", "export function isMSSqlName(v?: string): boolean {\n  if (typeof v !== 'string') return false;\n\n  if (v.length < 1 ) return false;\n\n  const firstChar = v[0];\n\n  if (firstChar>='0' && firstChar<='9') return false;\n\n  return /^[A-Za-z0-9_]*$/.test(v);  \n}\n\n\nexport function isMSSqlDBName(v?: string): boolean {\n  if (!isMSSqlName(v)) return false;\n\n  return typeof v === 'string' && v[0] !== '_';\n}", "import { type VOInput, ValueObject } from '@/value_objects';\nimport { isMSSqlDBName } from '../validation';\n\n\nexport class VOMSSqlDBName extends ValueObject<string> {\n\n  override validate(rawValue: VOInput<string>): string {\n    if (typeof rawValue === 'string') {\n      const value = rawValue.trim();\n      if (isMSSqlDBName(rawValue)) return value;\n    }\n    \n    this.throwError(rawValue);\n  }\n\n}\n", "import md5 from \"md5\";\n\nimport { DUMMY_MD5 } from \"@/value_objects\";\n\nimport { ADMIN_USERNAME } from \"src/domain/auth/validation\";\nimport { DXTError, DXTErrorCode, DXTException } from \"src/domain/shared/errors\";\nimport { UserEntity } from \"src/domain/user/entities/user\";\nimport { userRoleToNumber } from \"src/domain/user/transformation\";\nimport { UserRole } from \"src/domain/user/types\";\nimport { settingsService } from \"../settings/settings.repository\";\nimport { DEFAULT_ADMIN_NAME } from \"!/infrastucture/settings/consts\";\n\n\nexport function createAdminUserEntity(email: string): UserEntity {\n  return new UserEntity({\n    id: 0,\n    username: ADMIN_USERNAME,\n    puede_crear_pedido: false,\n    puede_editar_pedido: false,\n    puede_anular_pedido: true,\n    borrar_pedido_al_anular: true,\n    perfil_facturacion_id: 0,\n    aprobar_pedido_al_crear: false,\n    ver_pedidos_cumplidos: true,\n    dia_de_entrega: 0,\n    email,\n    ver_sin_precio: true,\n    mostrar_mensaje_de_advertencia: false,\n    habilitado_en_dxt: true,\n    screen_name: DEFAULT_ADMIN_NAME,\n    role: userRoleToNumber(UserRole.admin),\n    password_hash: DUMMY_MD5,\n    timestamp_modificacion: 0,\n  });\n}\n\n\nexport async function resolveUserStateException(\n  user: UserEntity,\n  tangoUserNotFoundErrorCode: DXTErrorCode,\n): Promise<DXTException | undefined> {\n  if (!user.tangoUserExists()) return new DXTException(tangoUserNotFoundErrorCode);\n  \n  let userDisabled: boolean = false;\n  let errorCode: DXTErrorCode | undefined;\n\n  if (user.habilitado_en_tango?.valueOf() === false) {\n    errorCode = DXTErrorCode.TANGO_USER_DISABLED;\n    userDisabled = true;\n  } else {\n    if (!user.habilitado_en_dxt.valueOf()) {\n      errorCode = DXTErrorCode.DXT_USER_DISABLED;\n      userDisabled = true;\n    }\n  }\n\n  if (errorCode != null) {\n    const miscSettings = await settingsService.getMiscSettings();\n\n    return new DXTException(\n      new DXTError(\n        errorCode,\n        {\n          messageToUser: {\n            type: 'warning',\n            title: miscSettings.user_disabled_message_title,\n            content: miscSettings.user_disabled_message_content,\n          }\n        }\n      )\n    );\n  }\n\n  return undefined;\n}\n\n\nexport function getPasswordHash(password: string, ): string {\n  return md5(password).toLocaleLowerCase();\n}\n", "import { INT64_BYTES } from '@/validation';\nimport validator from 'validator';\n\n\nexport const ADMIN_USERNAME = 'admin';\n\nexport const AUTH_RANDOM_BYTES = INT64_BYTES;\n\nexport const AUTH_DEVICE_ID_BYTES = 128 / 8;\n\nexport const AUTH_DEVICE_NAME_MAX_LENGTH = 200;\n\n\nexport function isAuthDeviceId(value: string): boolean {\n  return validator.isMD5(value);\n}\n\nexport function isAuthDeviceName(value: string): boolean {\n  return (\n    typeof value === 'string' && value.length <= AUTH_DEVICE_NAME_MAX_LENGTH\n  );\n}\n", "import { type WithIdUnsafe, type WithTimestampUnsafe } from '../unsafe';\nimport { type ValueObjectBase, VODateTime } from '../value_objects';\n\n\nexport abstract class Entity<\n  ID extends ValueObjectBase<any>,\n  UID,\n  U extends WithIdUnsafe<UID>,\n> {\n  constructor(\n    readonly id: ID\n  ) {}\n\n  abstract toUnsafe(): U;\n\n  parentToUnsafe(): WithIdUnsafe<UID> {\n    return {\n      id: this.id.valueOf(),\n    };\n  }\n}\n\n\nexport abstract class DomainEntity<\n  R extends RootEntity<any, any, any>,\n  ID extends ValueObjectBase<any>,\n  UID,\n  U extends WithIdUnsafe<UID>,\n> extends Entity<ID, UID, U> {\n\n  protected constructor(\n    readonly root: R,\n    id: ID\n  ) {\n    super(id);\n  }\n\n}\n\n\nexport abstract class RootEntity<\n  ID extends ValueObjectBase<any>,\n  UID,\n  U extends WithIdUnsafe<UID>,\n> extends Entity<ID, UID, U>  {}\n\n\nexport abstract class WithTimestampDomainEntity<\n  R extends RootEntity<any, any, any>,\n  ID extends ValueObjectBase<any>,\n  UID,\n  U extends WithTimestampUnsafe<UID>,\n> extends DomainEntity<R, ID, UID, U> {\n  readonly createdAt: VODateTime;\n  readonly updatedAt: VODateTime;\n\n  constructor(r: R, id: ID, createdAt: string, updatedAt: string) {\n    super(r, id);\n    this.createdAt = new VODateTime(createdAt);\n    this.updatedAt = new VODateTime(updatedAt);\n  }\n\n  override parentToUnsafe(): WithTimestampUnsafe<UID> {\n    return {\n      ...super.parentToUnsafe(),\n      created_at: this.createdAt.toString(),\n      updated_at: this.updatedAt.toString(),\n    };\n  }\n}\n\nexport abstract class WithTimestampRootEntity<\n  ID extends ValueObjectBase<any>,\n  UID,\n  U extends WithTimestampUnsafe<UID>,\n> extends RootEntity<ID, UID, U> {\n  readonly createdAt: VODateTime;\n  readonly updatedAt: VODateTime;\n\n  constructor(id: ID, createdAt: string, updatedAt: string) {\n    super(id);\n    this.createdAt = new VODateTime(createdAt);\n    this.updatedAt = new VODateTime(updatedAt);\n  }\n\n  override parentToUnsafe(): WithTimestampUnsafe<UID> {\n    return {\n      ...super.parentToUnsafe(),\n      created_at: this.createdAt.toString(),\n      updated_at: this.updatedAt.toString(),\n    };\n  }\n}\n\n\nexport abstract class EntityMapper<\n  M,\n  E extends Entity<ID, UID, U>,\n  ID extends ValueObjectBase<any>,\n  UID,\n  U extends WithIdUnsafe<UID>,\n> {\n  protected abstract fromEntityImplementation(e: E): M;\n  protected abstract toUnsafeImplementation(m: M): U;\n\n  fromEntityOrNull(e?: E): M|null {\n    return e==null ? null :  this.fromEntityImplementation(e);\n  }\n\n  toUnsafeOrNull(m?: M): U|null {\n    return m==null ? null : this.toUnsafeImplementation(m);\n  }\n\n  fromEntity(e: E): M {\n    return this.fromEntityImplementation(e);\n  }\n\n  toUnsafe(m: M): U {\n    return this.toUnsafeImplementation(m);\n  }\n\n}\n", "import {\n  enumToString,\n  stringToEnum,\n} from '@/transformation';\n\nimport { UserRole } from '../types';\nimport { ValidationException } from '@/validation/errors';\nimport { valueToString } from '@/strings';\n\nexport function userRoleToString(value: UserRole): keyof typeof UserRole {\n  try {\n    return enumToString(UserRole, value) as keyof typeof UserRole;\n  } catch (e) {\n    throw new ValidationException(`Invalid user role value: ${value}`);\n  }\n}\n\nexport function stringToUserRole(value: unknown): UserRole {\n  try {\n    return stringToEnum(UserRole, value);\n  } catch (e) {\n    throw new ValidationException(`Invalid user role string: ${valueToString(value, true)}`);\n  }\n}\n\n\nexport function userRoleToNumber(role: UserRole): number {\n  switch (role) {\n    case UserRole.customer: return 0;\n    case UserRole.vendor: return 1;\n    case UserRole.admin: return 2;\n  }\n\n  throw new ValidationException(`Invalid user role: ${valueToString(role, true)}`);\n}\n\n\nexport function numberToUserRole(value: number): UserRole {\n  switch (value) {\n    case 0: return UserRole.customer;\n    case 1: return UserRole.vendor;\n    case 2: return UserRole.admin;\n  }\n\n  throw new ValidationException(`Invalid user role number: ${valueToString(value, true)}`);\n}\n", "import { type VOInput, ValueObject } from '@/value_objects';\n\nimport { isValidEnumValue } from '@/validation';\n\nimport { stringToUserRole, userRoleToString } from '../transformation';\n\nimport { UserRole } from '../types';\n\nexport class VOUserRole extends ValueObject<UserRole> {\n\n  validate(value: VOInput<UserRole>): UserRole {\n    try {\n      if (typeof value === 'string') return stringToUserRole(value);\n      if (isValidEnumValue(UserRole, value)) return value as any;\n    } catch (_) {}\n\n    this.throwError(value);\n  }\n\n  override toString(): string {\n    return userRoleToString(this.value);\n  }\n}\n", "import { type VOInput, ValueObject } from '@/value_objects';\n\nimport { isUserName } from '../validation';\n\nexport class VOUserName extends ValueObject<string> {\n\n  override validate(rawValue?: VOInput<string>): string {\n    if (typeof rawValue === 'string') {\n      const value = rawValue.trim();\n\n      if (isUserName(value)) return value;\n    }\n\n    this.throwError(rawValue);\n  }\n  \n}\n", "import { RootEntity } from '@/entity';\nimport { type WithIdUnsafe } from '@/unsafe';\nimport {\n  DUMMY_MD5,\n  VOBoolean,\n  VOEmailAddress,\n  VOInteger,\n  VOMD5,\n  VOString,\n  VOUInt32,\n} from '@/value_objects';\nimport { type VOFullName } from '@/value_objects/vo_full_name';\nimport { DXTError, DXTErrorCode, DXTException } from 'src/domain/shared/errors';\n\nimport { VOUserName, VOUserRole } from '../value_objects';\nimport { UserRole } from '../types';\nimport { numberToUserRole, userRoleToNumber } from '../transformation';\n\n\nexport class UserEntity extends RootEntity<VOInteger, number, UserUnsafe> {\n\n  readonly username: VOUserName;\n  readonly tangoId?: VOUInt32;\n  readonly habilitado_en_tango?: VOBoolean;\n  readonly screenName: VOFullName;\n  readonly email?: VOString;\n  readonly passwordHash: VOMD5;\n  readonly role: VOUserRole;\n  readonly habilitado_en_dxt: VOBoolean;\n\n  readonly puedeCrearPedido: VOBoolean;\n  readonly puedeEditarPedido: VOBoolean;\n  readonly puedeAnularPedido: VOBoolean;\n  readonly borrarPedidoAlAnular: VOBoolean;\n  readonly perfilFacturacionId: VOUInt32;\n  readonly aprobarPedidoAlCrear: VOBoolean;\n  readonly verPedidosCumplidos: VOBoolean;\n  readonly diaDeEntrega: VOInteger;\n  readonly verSinPrecio: VOBoolean;\n  readonly mostrarMensajeDeAdvertencia: VOBoolean;\n  \n  readonly timestampModificacion: VOInteger;\n\n  \n  constructor(unsafe: UserUnsafe) {\n    super(new VOInteger(unsafe.id));\n\n    const {\n      username,\n\n      tango_id,\n      habilitado_en_tango,      \n      screen_name,\n\n      email,\n      password_hash,\n      role,\n      habilitado_en_dxt,\n\n      puede_crear_pedido,\n      puede_editar_pedido,\n      puede_anular_pedido,\n      borrar_pedido_al_anular,\n      perfil_facturacion_id,\n      aprobar_pedido_al_crear,\n      ver_pedidos_cumplidos,\n      dia_de_entrega,\n      ver_sin_precio,\n      mostrar_mensaje_de_advertencia,\n\n      timestamp_modificacion,\n    } = unsafe;\n\n    this.username = new VOUserName(username);\n    this.screenName = new VOString(screen_name);\n\n    if (typeof email === 'string') {\n      this.email = new VOString( email.trim() !== '' ? new VOEmailAddress(email).valueOf() : '' );\n    }\n\n    this.passwordHash = new VOMD5(password_hash);\n    this.role = new VOUserRole(numberToUserRole(role));\n\n    this.habilitado_en_dxt = new VOBoolean(habilitado_en_dxt);\n\n    this.puedeCrearPedido = new VOBoolean(puede_crear_pedido);\n    this.puedeEditarPedido = new VOBoolean(puede_editar_pedido);\n    this.puedeAnularPedido = new VOBoolean(puede_anular_pedido);\n    this.borrarPedidoAlAnular = new VOBoolean(borrar_pedido_al_anular);\n    this.perfilFacturacionId = new VOUInt32(perfil_facturacion_id);\n    this.aprobarPedidoAlCrear = new VOBoolean(aprobar_pedido_al_crear);\n    this.verPedidosCumplidos = new VOBoolean(ver_pedidos_cumplidos);\n    this.diaDeEntrega = new VOInteger(dia_de_entrega);\n    this.verSinPrecio = new VOBoolean(ver_sin_precio);\n    this.mostrarMensajeDeAdvertencia = new VOBoolean(mostrar_mensaje_de_advertencia);\n\n    this.timestampModificacion = new VOInteger(timestamp_modificacion);\n\n    if (this.role.valueOf() !== UserRole.admin && (tango_id == null))\n      throw new DXTException(\n        new DXTError(DXTErrorCode.UNPROCESSABLE_ENTITY, {\n          extra: 'tango_id missing in UserEntity',\n        })\n      );\n\n    this.tangoId = (tango_id != null) ? new VOUInt32(tango_id) : undefined;\n    this.habilitado_en_tango = (habilitado_en_tango!=null) ? new VOBoolean(habilitado_en_tango) : undefined;\n\n  }\n\n  \n  toUnsafe(): UserUnsafe {\n    const result: UserUnsafe = {\n      ...this.parentToUnsafe(),\n\n      username: this.username.valueOf(),\n      \n      tango_id: this.tangoId?.valueOf(),\n      habilitado_en_tango: this.habilitado_en_tango?.valueOf(),\n\n      screen_name: this.screenName.valueOf(),\n      email: this.email?.valueOf() ?? null,\n      password_hash: this.passwordHash.valueOf(),\n      role: userRoleToNumber(this.role.valueOf()),\n\n      habilitado_en_dxt: this.habilitado_en_dxt.valueOf(),\n\n      puede_crear_pedido: this.puedeCrearPedido.valueOf(),\n      puede_editar_pedido: this.puedeEditarPedido.valueOf(),\n      puede_anular_pedido: this.puedeAnularPedido.valueOf(),\n      borrar_pedido_al_anular: this.borrarPedidoAlAnular.valueOf(),\n      perfil_facturacion_id: this.perfilFacturacionId.valueOf(),\n      aprobar_pedido_al_crear: this.aprobarPedidoAlCrear.valueOf(),\n      ver_pedidos_cumplidos: this.verPedidosCumplidos.valueOf(),\n      dia_de_entrega: this.diaDeEntrega.valueOf(),\n      ver_sin_precio: this.verSinPrecio.valueOf(),\n      mostrar_mensaje_de_advertencia: this.mostrarMensajeDeAdvertencia.valueOf(),\n\n      timestamp_modificacion: this.timestampModificacion.valueOf(),\n\n    };\n\n    return result;\n  }\n\n\n  tangoUserExists(): boolean {\n    return this.habilitado_en_tango != null;\n  }\n\n\n  habilitado(): boolean {\n    return (\n      this.habilitado_en_dxt.valueOf()\n      &&\n      this.habilitado_en_tango != null\n      &&\n      this.habilitado_en_tango.valueOf()\n    );\n  }\n\n\n  toPublicInfo(): UserPublicInfo {\n    const { password_hash, email, ...remaining } = this.toUnsafe();\n\n    return remaining;\n  }\n\n  fromPublicInfo(\n    publicInfo: UserPublicInfo,\n    options?: {\n      email: string,\n      password_hash: string,\n    }\n  ) {\n    return new UserEntity({\n      ...publicInfo,\n      email: options?.email ?? null,\n      password_hash: options?.password_hash ?? DUMMY_MD5\n    })\n  }\n\n  hasAdminAccess() {\n    const role = this.role.valueOf();\n    return role === UserRole.admin;\n  }\n}\n\n\nexport interface BasicUserUnsafe extends WithIdUnsafe<number> {\n  tango_id?: number;\n  \n  username: string;\n  puede_crear_pedido: boolean;\n  puede_editar_pedido: boolean;\n  puede_anular_pedido: boolean;\n  borrar_pedido_al_anular: boolean;\n  perfil_facturacion_id: number;\n  aprobar_pedido_al_crear: boolean;\n  ver_pedidos_cumplidos: boolean;\n  dia_de_entrega: number;\n  email?: string|null;\n  ver_sin_precio: boolean;\n  mostrar_mensaje_de_advertencia: boolean;\n\n  habilitado_en_dxt: boolean;\n}\n\n\nexport type UserAndRelations<U extends BasicUserUnsafe> = U & {\n  tango_id: number;\n  habilitado_en_tango?: boolean;\n  screen_name: string;\n}\n\nexport interface UserUnsafe extends Omit<UserAndRelations<BasicUserUnsafe>, 'tango_id'> {\n  tango_id?: number;\n\n  password_hash: string;\n\n  timestamp_modificacion: number;\n\n  role: number;\n}\n\n\nexport interface UserMinimalInfo {\n  id: number;\n  tango_id: number;\n  username: string;\n  screen_name: string;\n  habilitado_en_dxt: boolean;\n  usuario_tango_existe: boolean;\n  habilitado_en_tango?: boolean;\n}\n\nexport interface UserPublicInfo extends Omit<UserUnsafe, 'email'|'password_hash'> {\n  email?: never;\n  password_hash?: never;\n}\n", "import { AUTH_EXPIRATION_MAX_DAYS } from \"src/domain/settings/consts\";\n\nexport const DEFAULT_DB_HOST = \"localhost\";\nexport const DEFAULT_DB_PORT = 1433;\nexport const DEFAULT_DB_USER = \"sa\";\nexport const DEFAULT_DB_PASSWORD = \"Axoft1988\";\nexport const DEFAULT_DB_CONNECTION_TIMEOUT_SECONDS = 30;\n\nexport const DEFAULT_TANGO_DICTIONARY = \"Diccionario\";\n\nexport const DEFAULT_SMTP_HOST = 'localhost';\nexport const DEFAULT_SMTP_PORT = 587;\nexport const DEFAULT_SMTP_USE_TLS = false;\n\nexport const DEFAULT_AUTH_EXPIRATION_DAYS = AUTH_EXPIRATION_MAX_DAYS;\n\nexport const DEFAULT_USER_WARNING_MESSAGE_TITLE = 'Atenci\u00F3n';\nexport const DEFAULT_USER_WARNING_MESSAGE_CONTENT = 'Comun\u00EDquese con el administrador';\n\nexport const DEFAULT_USER_DISABLED_MESSAGE_TITLE = 'Atenci\u00F3n';\nexport const DEFAULT_USER_DISABLED_MESSAGE_CONTENT = 'Usuario deshabilitado. Comun\u00EDquese con el administrador';\n\n\nexport const DEFAULT_ADMIN_NAME = 'Administrador';\nexport const DEFAULT_ADMIN_PASSWORD = 'admin';\n", "import { type InferUnsafeInputFromSchema, type InferValidatedInputFromSchema } from \"@/validate_schema\";\nimport { DTO } from \"@/dto\";\nimport { VONotEmptyString, VOString, VOIntegerRange, VOHost, VOTCPPort, VOBoolean, VOEmailAddress, tryVO } from \"@/value_objects\";\nimport { validateInput } from \"src/domain/shared/validation\";\nimport { VOMSSqlDBName } from \"src/domain/db/value_objects/vo_mssql_db_name\";\nimport { getPasswordHash } from \"!/infrastucture/auth/utils\";\n\nimport { DB_CONNECTION_TIMEOUT_MIN_SECONDS, DB_CONNECTION_TIMEOUT_MAX_SECONDS, AUTH_EXPIRATION_MIN_DAYS, AUTH_EXPIRATION_MAX_DAYS } from \"src/domain/settings/consts\";\nimport { DEFAULT_DB_HOST, DEFAULT_DB_PORT, DEFAULT_DB_USER, DEFAULT_DB_PASSWORD, DEFAULT_DB_CONNECTION_TIMEOUT_SECONDS, DEFAULT_TANGO_DICTIONARY, DEFAULT_SMTP_HOST, DEFAULT_SMTP_PORT, DEFAULT_SMTP_USE_TLS, DEFAULT_AUTH_EXPIRATION_DAYS, DEFAULT_USER_WARNING_MESSAGE_TITLE, DEFAULT_USER_WARNING_MESSAGE_CONTENT, DEFAULT_USER_DISABLED_MESSAGE_TITLE, DEFAULT_USER_DISABLED_MESSAGE_CONTENT } from \"../consts\";\n\n\nexport const storedDBSettingsSchema = {\n  db_host: (v?: string) => tryVO(()=>new VONotEmptyString(v), new VONotEmptyString(DEFAULT_DB_HOST)),\n  db_port: (v?: number) => tryVO(()=>new VOTCPPort(v ?? DEFAULT_DB_PORT), new VOTCPPort(DEFAULT_DB_PORT)),\n  db_user: (v?: string) => tryVO(()=>new VONotEmptyString(v), new VONotEmptyString(DEFAULT_DB_USER)),\n  db_password: (v?: string) => tryVO(()=>new VOString(v?.trim()), new VOString(DEFAULT_DB_PASSWORD)),\n  db_connection_timeout_seconds: (v?: number) => tryVO(\n    ()=>new VOIntegerRange(v, DB_CONNECTION_TIMEOUT_MIN_SECONDS, DB_CONNECTION_TIMEOUT_MAX_SECONDS),\n    new VOIntegerRange(DEFAULT_DB_CONNECTION_TIMEOUT_SECONDS,DB_CONNECTION_TIMEOUT_MIN_SECONDS, DB_CONNECTION_TIMEOUT_MAX_SECONDS),\n  ),\n\n  tango_dictionary: (v?: string) => tryVO(()=>new VOMSSqlDBName(v), new VOMSSqlDBName(DEFAULT_TANGO_DICTIONARY)),\n  tango_active_company: (v?: string) => tryVO(()=>new VOMSSqlDBName(v), new VOString('')),\n}\n\n\nexport const storedMiscSettingsSchema = {\n  smtp_host: (v?: string) => tryVO(()=>new VOHost(v), new VOHost(DEFAULT_SMTP_HOST)),\n  smtp_username: (v?: string) => new VOString(typeof v === 'string' ? v?.trim() : ''),\n  smtp_password: (v?: string) => new VOString(typeof v === 'string' ? v?.trim() : ''),\n  smtp_port: (v?: number) => tryVO(()=>new VOTCPPort(v), new VOTCPPort(DEFAULT_SMTP_PORT)),\n  smtp_use_tls: (v?: boolean) => tryVO(()=>new VOBoolean(v ?? DEFAULT_SMTP_USE_TLS), new VOBoolean(DEFAULT_SMTP_USE_TLS)),\n\n  auth_expiration_days: (v?: number) => tryVO(\n    ()=>new VOIntegerRange(v, AUTH_EXPIRATION_MIN_DAYS, AUTH_EXPIRATION_MAX_DAYS),\n    new VOIntegerRange(DEFAULT_AUTH_EXPIRATION_DAYS, AUTH_EXPIRATION_MIN_DAYS, AUTH_EXPIRATION_MAX_DAYS)\n  ),\n  \n  user_warning_message_title: (v?: string) => tryVO(()=>new VONotEmptyString(v), new VONotEmptyString(DEFAULT_USER_WARNING_MESSAGE_TITLE)),\n  user_warning_message_content: (v?: string) => tryVO(()=>new VONotEmptyString(v), new VONotEmptyString(DEFAULT_USER_WARNING_MESSAGE_CONTENT)),\n  \n  user_disabled_message_title: (v?: string) => tryVO(()=>new VONotEmptyString(v), new VONotEmptyString(DEFAULT_USER_DISABLED_MESSAGE_TITLE)),\n  user_disabled_message_content: (v?: string) => tryVO(()=>new VONotEmptyString(v), new VONotEmptyString(DEFAULT_USER_DISABLED_MESSAGE_CONTENT)),\n  \n  admin_password_hash: (v?: string) => tryVO(()=>new VONotEmptyString(v), new VONotEmptyString(getPasswordHash(DEFAULT_USER_DISABLED_MESSAGE_TITLE))),\n  admin_email: (v?: string) => tryVO(()=>new VOString(new VOEmailAddress(v).valueOf()), new VOString('')),\n}\n\n\nexport type StoredDBSettingsInput = InferUnsafeInputFromSchema<typeof storedDBSettingsSchema>;\nexport type StoredDBSettingsValidated = InferValidatedInputFromSchema<typeof storedDBSettingsSchema>;\n\nexport class StoredDBSettingsDTO extends DTO<StoredDBSettingsValidated, StoredDBSettingsInput> {\n\n  validate(input: StoredDBSettingsInput): StoredDBSettingsValidated {\n    return validateInput(storedDBSettingsSchema, input);\n  }\n\n  toUnsafe(): StoredDBSettingsValidated {\n    return this.data;\n  }\n}\n\n\nexport type StoredMiscSettingsInput = InferUnsafeInputFromSchema<typeof storedMiscSettingsSchema>;\nexport type StoredMiscSettingsValidated = InferValidatedInputFromSchema<typeof storedMiscSettingsSchema>;\n\nexport class StoredMiscSettingsDTO extends DTO<StoredMiscSettingsValidated, StoredMiscSettingsInput> {\n\n  validate(input: StoredMiscSettingsInput): StoredMiscSettingsValidated {\n    return validateInput(storedMiscSettingsSchema, input);\n  }\n\n  toUnsafe(): StoredMiscSettingsValidated {\n    return this.data;\n  }\n\n}\n", "import { BusEvent } from \"src/event_bus\";\n\n\ninterface DBSettingsChangedPayload {\n  passiveDBChanges: boolean,\n  newDictionary: boolean,\n  newCompany: boolean,\n  resetCache: boolean,\n}\n\n\nexport class DBSettingsChangedEvent extends BusEvent<DBSettingsChangedPayload> {\n  static readonly NAME = 'DB_SETTINGS_CHANGED';\n\n  constructor(payload: DBSettingsChangedPayload) {\n    super(\n      DBSettingsChangedEvent.NAME, payload\n    );\n  }\n}\n\n\n\ninterface MiscSettingsChangedPayload {\n  newAuthExpiration: boolean,\n}\n\nexport class MiscSettingsChangedEvent extends BusEvent<MiscSettingsChangedPayload> {\n  static readonly NAME = 'DB_SETTINGS_CHANGED';\n\n  constructor(payload: MiscSettingsChangedPayload) {\n    super(\n      MiscSettingsChangedEvent.NAME, payload\n    );\n  }\n}\n", "import { isRealObject } from '@/objects';\nimport { stringifyJSON } from '@core/json';\nimport knex from 'knex';\n\nimport { DXTError, DXTErrorCode, DXTException } from 'src/domain/shared/errors';\nimport { isDevelopment } from 'src/environment';\nimport { TYPES } from 'tedious';\n\n\ninterface KnexSettings {\n  db_host: string;\n  db_port: number;\n  db_user: string;\n  db_password: string;\n  db_connection_timeout_seconds: number;\n}\n\n\n\nexport enum TangoConnectionChangeRequired {\n  none,\n  passiveRefresh,\n  fullReload\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport abstract class TDBProvider {\n\n  private _lastConnectionError: DXTException|undefined;\n  \n  protected connectionChangeRequired = TangoConnectionChangeRequired.fullReload;\n\n\n  cleanConnectionError(){\n    this._lastConnectionError = undefined;\n  }\n\n\n  protected async initializeKnex(dbName: string, dbSettings: KnexSettings, unknownDBError: DXTErrorCode): Promise<knex.Knex> {\n    const originalConnectionChangeRequired = this.connectionChangeRequired;\n    this.connectionChangeRequired = TangoConnectionChangeRequired.none;\n\n    // if (this._lastConnectionError != null) {\n    //   throw this._lastConnectionError;\n    // }\n\n    const { db_host, db_port, db_user, db_password, db_connection_timeout_seconds  } = dbSettings;\n\n    const knexInstance = knex({\n      dialect: 'mssql',\n      client: 'mssql',\n      connection: {\n        server: db_host,\n        port: db_port,\n        user: db_user,\n        password: db_password,\n        connectionTimeout: db_connection_timeout_seconds * 1000,\n        requestTimeout: db_connection_timeout_seconds * 1000,\n        options: {\n          mapBinding: (value) => {\n            if (typeof value === 'string') {\n              return {\n                type: TYPES.VarChar,\n                value,\n              };\n            }\n          },\n        },\n      },\n      pool: {\n        min: 50,\n        max: 100,\n      }\n    }).on('query-error', function (error, obj) {\n      if (isDevelopment()) {\n        console.error(stringifyJSON(error));\n        console.error(stringifyJSON(obj));\n      }\n    });\n\n\n    if (knexInstance == null) return knexInstance;\n\n    try{\n      const connectionCheck = await knexInstance.raw(`select (1+1) as two`);\n\n      const connectionOk = Array.isArray(connectionCheck) && connectionCheck.length>0 && connectionCheck[0]?.two?.toString() === '2';\n\n      if (!connectionOk) {\n        this._lastConnectionError = new DXTException(DXTErrorCode.TANGO_DB_ACCESS_ERROR);\n        throw this._lastConnectionError;\n      }\n\n    } catch(e){\n      this._lastConnectionError = new DXTException(DXTErrorCode.TANGO_DB_ACCESS_ERROR, (e as Error)?.message?.toString());\n      throw this._lastConnectionError;\n    }\n\n    try {\n      const result = await knexInstance.raw(`use ${dbName}`);\n    } catch(e){\n      this._lastConnectionError = new DXTException(unknownDBError, (e as Error)?.message?.toString());\n      throw this._lastConnectionError;\n    }\n\n    this.connectionChangeRequired = originalConnectionChangeRequired;\n\n    return knexInstance;\n  }\n\n}\n\n\ninterface SqlServerError {\n  code: 'EREQUEST';\n  number: number;\n}\n\nexport function dbErrorToDXTException(e: unknown): DXTException {\n  if (e instanceof DXTException) return e;\n  \n  if (!isRealObject(e)) {\n    return new DXTException(new DXTError(\n      DXTErrorCode.UNEXPECTED_ERROR,\n      {\n        extra: typeof e?.toString === 'function' ? e?.toString() : undefined\n      }\n    ));\n  }\n\n  const error = e as SqlServerError;\n\n  if (error.code !== 'EREQUEST') {\n    return new DXTException(new DXTError(\n      DXTErrorCode.FATAL_UNKNOWN_DB_ERROR,\n      {\n        extra: error.toString()\n      }\n    ));\n  }\n\n  const sqlServerError = error.number ?? 0;\n\n  let errorCode: DXTErrorCode;\n  switch (sqlServerError) {\n    case 2627: errorCode = DXTErrorCode.DUPLICATED_TABLE_RECORD; break;\n    default: errorCode = DXTErrorCode.FATAL_UNKNOWN_DB_ERROR;\n  }\n\n  return new DXTException(new DXTError(\n    errorCode,\n    {\n      extra: `[Sql error=${sqlServerError}] [${error.toString()}]`\n    }\n  ));\n}\n", "import { MD5_LENGTH } from \"@/validation\";\nimport { type UserBaseModel, userBaseTableCreationFieldsSQL } from \"../../user/models/user_base.model\";\n\n\nexport const DXT_VENDEDOR_TABLE = 'dxt_vendedor';\nexport const DXT_VENDEDOR_ID_FIELD = 'dxt_vendedor_id';\n\n\nexport interface DXTVendedorModel extends UserBaseModel {\n  dxt_vendedor_id: number;\n  password_hash: string;\n}\n\n\nexport const dxtVendedorTableCreationFieldsSQL: { [k in keyof Omit<DXTVendedorModel, 'id'>]: string } = {\n  dxt_vendedor_id: `int IDENTITY(1,1) NOT NULL`,\n  password_hash: `varchar(${MD5_LENGTH}) NOT NULL`,\n  ...userBaseTableCreationFieldsSQL,\n};\n\n\nexport const dxtVendedorTableCreationIndexesSQL = [\n\t`CONSTRAINT pk_dxt_vendedor_username UNIQUE (username)`,\n\t`CONSTRAINT pk_dxt_vendedor_id PRIMARY KEY (dxt_vendedor_id)`,\n]\n", "import { BusEvent } from \"src/event_bus\";\n\n\nexport class DBTablesChangedEvent extends BusEvent<string[]> {\n  static readonly NAME = 'DB_TABLES_CHANGED';\n\n  constructor(payload: string[]) {\n    super(\n      DBTablesChangedEvent.NAME, payload\n    );\n  }\n}\n", "import { tryVO } from \"@/value_objects\";\nimport { VOBoolean } from \"@/value_objects\";\nimport { GeneralID } from \"../shared/repository\";\nimport { DBTablesChangedEvent } from \"src/domain/db/events\";\nimport { DBSettingsChangedEvent } from \"src/domain/settings/events\";\nimport { eventBus } from \"src/event_bus\";\nimport { isDevelopment } from \"src/environment\";\n\n\nexport const isCacheEnabledGlobally = tryVO(()=>new VOBoolean(process.env.ENABLE_CACHE), new VOBoolean(false)).valueOf();\n\n\nexport interface CacheOwnerStatus {\n  getTableName: () => string;\n  getTableDependencies: () => string[];\n  isReady: () => Promise<boolean>\n}\n\nexport class MemoryCache<ID extends GeneralID, T> {\n\n  _byIdCache = new Map<ID, T>();\n  _metadataCache = new Map<string, any>();\n\n  constructor(\n    private readonly _cacheOwnerStatus: CacheOwnerStatus,\n  ){\n    if (isCacheEnabledGlobally) {\n      eventBus.on(DBSettingsChangedEvent.NAME, this.onDBSettingsChanged.bind(this) );\n\n      eventBus.on(DBTablesChangedEvent.NAME, this.onTablesChanged.bind(this) );\n    }\n  }\n\n\n  private _consoleLog(...args: any) {\n    if (isDevelopment()) {\n      const tableName = this._cacheOwnerStatus.getTableName()?.toUpperCase();\n      console.info(`[${tableName}] `, ...args);\n    }\n  }\n\n\n  onDBSettingsChanged(event: DBSettingsChangedEvent) {\n    const { newDictionary, newCompany, resetCache } = event.payload;\n    if (newDictionary || newCompany || resetCache) this.clear();\n  }\n\n\n  onTablesChanged(event: DBTablesChangedEvent) {\n    const { payload: tablesChanged } = event;\n\n    const dependencies = this._cacheOwnerStatus.getTableDependencies();\n\n    const mainTableChanged = tablesChanged.findIndex(table => dependencies.includes(table)) >= 0;\n\n    if (mainTableChanged) this.clear();\n  }\n\n\n  async isEnabled(): Promise<boolean> {\n    return isCacheEnabledGlobally && await this._cacheOwnerStatus.isReady();\n  }\n\n\n  async clear() {\n    this._byIdCache.clear();\n    this._metadataCache.clear();\n\n    this._consoleLog(`Cache.clear()`);\n  }\n\n\n  async getByIdBuffer(): Promise<typeof this._byIdCache | undefined> {\n    if (!await this.isEnabled()) return ;\n\n    return this._byIdCache;\n  }\n\n\n  async getMetadata<C>(id: string): Promise<C | undefined> {\n    if (!await this.isEnabled()) return ;\n\n    const data = this._metadataCache.get(id);\n\n    if (data!=null) {\n      this._consoleLog(`Cache.getMetadata(\"${id}\")`);\n    }\n\n    return data;\n  }\n\n\n  async setMetadata<T>(id: string, data: T): Promise<void> {\n    if (!await this.isEnabled()) return ;\n\n    this._consoleLog(`Cache.setMetadata(\"${id}\")`);\n\n    this._metadataCache.set(id, data);\n  }\n\n\n  async setById(id: ID, data: T): Promise<void> {\n    if (!await this.isEnabled()) return ;\n\n    this._consoleLog(`Cache.setById(\"${id}\")`);\n\n    this._byIdCache.set(id, data);\n  }\n\n\n  async getById(id: ID): Promise<T|undefined> {\n    if (!await this.isEnabled()) return ;\n\n    const data = this._byIdCache.get(id);\n\n    if (data!=null) {\n      this._consoleLog(`Cache.getById(\"${id}\")`);\n    }\n\n    return data;\n  }\n\n\n  async invalidateById(id: ID): Promise<void> {\n    if (!await this.isEnabled()) return ;\n\n    if (isDevelopment()) {\n      console.info(`Cache.invalidateById(\"${id}\")`);\n    }\n\n    this._byIdCache.delete(id);\n  }\n\n}", "import { ARTICULO_ID_FIELD } from \"!/infrastucture/articulo/models\";\nimport { DXTPedidoArticuloModel } from \"./dxt_pedido_articulo.model\";\n\n\nexport interface DXTPedidoArticuloWithRelationsModel extends DXTPedidoArticuloModel {\n  [ARTICULO_ID_FIELD]: number;\n}\n\n\nexport const DXT_PEDIDO_ARTICULOS_PRINT_TABLE = 'dxt_pedido_articulos_print';\n\nexport interface DXTPedidoArticuloPrintModel extends DXTPedidoArticuloModel {\n}\n", "export interface DXTPedidoArticuloModel {\n  id: number;\n  codigo_articulo: string;\n  params?: string;\n}\n\n\nexport const DXT_PEDIDO_ARTICULOS_CODE_FIELD = 'codigo_articulo' as const;\nexport const DXT_PEDIDO_ARTICULOS_ID_FIELD = 'id' as const;\n\nexport const dxtPedidoArticuloCreationFieldsSQL: { [k in keyof DXTPedidoArticuloModel]: string } = {\n  id: `int IDENTITY(0,1) NOT NULL`,\n  codigo_articulo: `varchar(100) COLLATE Latin1_General_BIN NOT NULL`,\n  params: `varchar(500) COLLATE Latin1_General_BIN NULL`,\n};\n\n\nexport const dxtPedidoArticuloCreationIndexesSQL = [\n]\n", "import { DXTPedidoArticuloModel } from \"./dxt_pedido_articulo.model\";\n\n\nexport const DXT_PEDIDO_ARTICULOS_SCREEN_TABLE = 'dxt_pedido_articulos_screen';\n\n\nexport interface DXTPedidoArticuloScreenModel extends DXTPedidoArticuloModel {\n}\n", "import { DatasetUnsafe } from \"src/domain/dictionary/entities/dataset.unsafe\";\n\nexport const DATASET_TABLE = 'Dataset';\n\nexport interface DatasetModel extends DatasetUnsafe {\n}\n", "export const ALICUOTA_TABLE = 'GVA41';\n\nexport const ALICUOTA_ID_FIELD = 'ID_GVA41' as const;\nexport const ALICUOTA_CODE_FIELD = 'COD_ALICUO' as const;\n\n\nexport interface AlicuotaModel {\n  [ALICUOTA_ID_FIELD]: number;\n\t[ALICUOTA_CODE_FIELD]: number;\n\n\tCOD_REGIM?: number;\n\tDESCRIPCIO?: string;\n\tIMPORTE?: number;\n\tPORCENTAJE?: number;\n\tPROVINCIA?: string;\n\tGRUPO?: string;\n\tGRUPO_AGIP?: string;\n\tCOD_SII?: string;\n\tGRUPO_MAGNITUDES_SUPERADAS_AGIP?: string;\n\tGRUPO_EXENTOS_AGIP?: string;\n\n\tGRUPO_REGIMEN_GENERAL_AGIP?: string;\n\tGRUPO_PADRON?: string;\n\tPADRON?: number;\n\n\tCOD_GVA18?: string;\n  ID_GVA18?: number;\n}\n\n\nexport const alicuotaModelColumns: Array<keyof AlicuotaModel> = [\n  ALICUOTA_ID_FIELD,\n  ALICUOTA_CODE_FIELD,\n \n  'COD_REGIM', \n  'DESCRIPCIO', \n  'IMPORTE', \n  'PORCENTAJE', \n  'PROVINCIA', \n  'GRUPO', \n  'GRUPO_AGIP', \n  'COD_SII', \n  'GRUPO_MAGNITUDES_SUPERADAS_AGIP', \n  'GRUPO_EXENTOS_AGIP', \n\n  'GRUPO_REGIMEN_GENERAL_AGIP', \n  'PADRON', \n  'GRUPO_PADRON', \n\n  'COD_GVA18', \n  'ID_GVA18',\n];\n\n\nexport const ALICUOTA_NAME_COLUMNS: typeof alicuotaModelColumns = ['DESCRIPCIO'];\n", "export const ASIENTO_TABLE = 'GVA25';\n\nexport const ASIENTO_ID_FIELD = 'ID_GVA25' as const;\nexport const ASIENTO_CODE_FIELD = 'COD_GVA25' as const;\n\nexport interface AsientoModel {\n  [ASIENTO_ID_FIELD]: number;\n  [ASIENTO_CODE_FIELD]?: string\n \n\tRENGLON: number;\n  \n\tCOD_CUENTA?: number;\n\tCONC_ASI?: string;\n\tCONC_MOV?: string;\n\tDEBE?: string;\n\tHABER?: string;\n\tTIPO_ASIEN?: string;\n\tCOD_IMPUES?: string;\n}\n\n\nexport const asientoModelColumns: Array<keyof AsientoModel> = [\n  ASIENTO_ID_FIELD,\n  ASIENTO_CODE_FIELD,\n   \n  'RENGLON',\n\n  'COD_CUENTA',\n  'CONC_ASI',\n  'CONC_MOV',\n  'DEBE',\n  'HABER',\n  'TIPO_ASIEN',\n  'COD_IMPUES',\n];\n", "export const CONDICION_TABLE = 'GVA01';\n\nexport const CONDICION_ID_FIELD = 'ID_GVA01' as const;\nexport const CONDICION_CODE_FIELD = 'COND_VTA' as const;\n\n\nexport interface CondicionModel {\n  [CONDICION_ID_FIELD]: number;\n  [CONDICION_CODE_FIELD]?: number;\n\n  ACEPTA_CONTADO: boolean;\n  PORC_MIN_CONTADO: number;\n  ACEPTA_CTA: boolean;\n  OBLIGA_CONTADO: boolean;\n\n  DESC_COND?: string;\n  FAC_CREDIT?: boolean;\n  NRO_DE_LIS?: number;\n  PAGO_CF?: number;\n  APLICA_MORA?: string;\n  ID_INTERES_POR_MORA?: number;\n  GENERA_FECHAS_ALTERNATIVAS?: string;\n  FECHA_VIGENCIA_DESDE?: string;\n  FECHA_VIGENCIA_HASTA?: string;\n  CONTADO?: string;\n  CALCULA_INTERESES?: string;\n  ID_GVA10?: number;\n  TIPO_ASIGNACION?: string;\n}\n\n\nexport const condicionModelColumns: Array<keyof CondicionModel> = [\n  CONDICION_ID_FIELD,\n  CONDICION_CODE_FIELD,\n\n  'ACEPTA_CONTADO',\n  'PORC_MIN_CONTADO',\n  'ACEPTA_CTA',\n  'OBLIGA_CONTADO',\n\n  'DESC_COND',\n  'FAC_CREDIT',\n  'NRO_DE_LIS',\n  'PAGO_CF',\n  'APLICA_MORA',\n  'ID_INTERES_POR_MORA',\n  'GENERA_FECHAS_ALTERNATIVAS',\n  'FECHA_VIGENCIA_DESDE',\n  'FECHA_VIGENCIA_HASTA',\n  'CONTADO',\n  'CALCULA_INTERESES',\n  'ID_GVA10',\n  'TIPO_ASIGNACION',\n];\n\n\nexport const CONDICION_NAME_COLUMNS: typeof condicionModelColumns = ['DESC_COND'];\n", "export const DEPOSITO_TABLE = 'STA22';\n\nexport const DEPOSITO_ID_FIELD = 'ID_STA22' as const;\nexport const DEPOSITO_CODE_FIELD = 'COD_SUCURS' as const;\n\n\nexport interface DepositoModel {\n  [DEPOSITO_CODE_FIELD]: string;\n\t[DEPOSITO_ID_FIELD]: number;\n\n\tABASTECE?: boolean;\n\tDIR_SUCURS?: string;\n\tNOMBRE_SUC?: string;\n\tINHABILITA?: boolean;\n\tSUCURSAL_DESTINO?: number;\n\tSINCRONIZA_NEXO_PEDIDOS?: boolean;\n}\n\n\nexport const depositoModelColumns: Array<keyof DepositoModel> = [\n\tDEPOSITO_ID_FIELD,\n  DEPOSITO_CODE_FIELD,\n  \n\t'ABASTECE',\n\t'DIR_SUCURS',\n\t'NOMBRE_SUC',\n\t'INHABILITA',\n\t'SUCURSAL_DESTINO',\n\t'SINCRONIZA_NEXO_PEDIDOS',\n];\n\n\nexport const DEPOSITO_NAME_COLUMNS: typeof depositoModelColumns = ['NOMBRE_SUC'];\n", "export const TANGO_PARAMETROS_TABLE = 'GVA16';\nexport const TANGO_PARAMETROS_ID_FIELD = 'ID_GVA16' as const;\n\n\nexport interface TangoParametrosModel  {\n  [TANGO_PARAMETROS_ID_FIELD]: number;\n\n\tPED_APR_CO?: boolean;\n\tPED_AUT_CO?: boolean;\n\tPED_FECHA?: string;\n\tPROX_NDOC?: number;\n}\n\n\nexport const tangoParametrosModelColumns: Array<keyof TangoParametrosModel> = [\n  TANGO_PARAMETROS_ID_FIELD,\n\n\t'PED_APR_CO',\n\t'PED_AUT_CO',\n\t'PED_FECHA',\n\t'PROX_NDOC',\n];\n\n", "export const PERFIL_TABLE = 'GVA51';\n\nexport const PERFIL_ID_FIELD = 'ID_GVA51' as const;\nexport const PERFIL_CODE_FIELD = 'COD_PERFIL' as const;\n\n\nexport interface PerfilModel {\n  [PERFIL_CODE_FIELD]: string;\n  [PERFIL_ID_FIELD]: number;\n\n  DESCRIPCIO: string;\n\n  BONIFIC?: string;\n\tCOND_VENTA?: string;\n\tD_TAL_FACT?: number;\n\tD_TIPO_ASI?: string;\n\tD_TRANSPOR?: string;\n  DEPOSITO?: string;\n  FECHA?: string;\n\tTAL_FACTUR?: string;\n\tTAL_PEDIDO?: string;\n\tTAL_REMITO?: string;\n\tTIPO_ASIEN?: string;\n}\n\n\nexport const perfilModelColumns: Array<keyof PerfilModel> = [\n  PERFIL_CODE_FIELD,\n  PERFIL_ID_FIELD,\n  \n  'DESCRIPCIO',\n\n  'BONIFIC',\n  'COND_VENTA',\n  'D_TAL_FACT',\n  'D_TIPO_ASI',\n  'D_TRANSPOR',\n  'DEPOSITO',\n  'FECHA',\n  'TAL_FACTUR',\n  'TAL_PEDIDO',\n  'TAL_REMITO',\n  'TIPO_ASIEN',\n];\n\n\nexport const PERFIL_NAME_COLUMNS: typeof perfilModelColumns = ['DESCRIPCIO'];\n", "export const TALONARIO_TABLE = 'GVA43';\n\nexport const TALONARIO_CODE_FIELD = 'TALONARIO' as const;\nexport const TALONARIO_ID_FIELD = 'ID_GVA43' as const;\n\n\nexport interface TalonarioModel {\n  [TALONARIO_CODE_FIELD]: number;\n  [TALONARIO_ID_FIELD]: number;\n\n  COMPROB?: string;\n  DESCRIP?: string;\n  DESTINO?: string;\n  EDITA_NRO?: boolean;\n  FECHA_VTO?: string;\n  NRO_DESDE?: string;\n  NRO_HASTA?: string;\n  PROXIMO?: string;\n  RENGLONES?: number;\n  SUCURSAL?: string;\n  TIPO?: string;\n  EXCLUSIVO?: boolean;\n  FECH_AVISO?: string;\n  VAL_FECHA?: boolean;\n  TIPO_TALONARIO?: string;\n}\n\n\nexport const talonarioModelColumns: Array<keyof TalonarioModel> = [\n  TALONARIO_CODE_FIELD,\n  TALONARIO_ID_FIELD,\n\n  'TIPO',\n\n  'COMPROB',\n  'DESCRIP',\n  'DESTINO',\n  'EDITA_NRO',\n  'FECHA_VTO',\n  'NRO_DESDE',\n  'NRO_HASTA',\n  'PROXIMO',\n  'RENGLONES',\n  'SUCURSAL',\n  'EXCLUSIVO',\n  'FECH_AVISO',\n  'VAL_FECHA',\n  'TIPO_TALONARIO',\n];\n\n\nexport const TALONARIO_NAME_COLUMNS: typeof talonarioModelColumns = ['DESCRIP'];\n", "import { TRANSPORTE_CODE_FIELD, TRANSPORTE_ID_FIELD, CLIENTE_ID_FIELD, VENDEDOR_ID_FIELD, DEPOSITO_CODE_FIELD, VENDEDOR_CODE_FIELD, CLIENTE_CODE_FIELD } from \"!/infrastucture/auxiliar/models\";\n\nexport const PEDIDO_TABLE = 'GVA21';\n\nexport const PEDIDO_ID_FIELD = 'ID_GVA21' as const;\nexport const PEDIDO_CODE_FIELD = 'NRO_PEDIDO' as const;\n\n\nexport interface PedidoModel {\n  [PEDIDO_ID_FIELD]: number;\n  [PEDIDO_CODE_FIELD]: string;\n\n  [CLIENTE_ID_FIELD]?: number;\n  [CLIENTE_CODE_FIELD]?: string;\n\n  [VENDEDOR_ID_FIELD]?: number;\n  [VENDEDOR_CODE_FIELD]?: string;\n\n  [DEPOSITO_CODE_FIELD]?: string;\n\n  [TRANSPORTE_ID_FIELD]?: number;\n  [TRANSPORTE_CODE_FIELD]?: string;\n\n  FECHA_ENTR?: string;\n  FECHA_PEDI?: string;\n\n  LEYENDA_4?: string;\n  LEYENDA_5?: string;\n\n  TOTAL_PEDI?: number;\n  PORC_DESC?: number;\n\n  ESTADO: number;  \n}\n\nexport interface PedidoAndRelationsModel extends PedidoModel {\n  // Nombre cliente\n  RAZON_SOCI?: string,\n  NOM_COM?: string,\n\n  // Nombre vendedor\n  NOMBRE_VEN?: string,\n  \n  // Nombre transporte\n  NOMBRE_TRA?: string;\n}\n\n\nexport interface FullPedidoModel extends PedidoModel {\n  APRUEBA?: string;\n  EXPORTADO?: boolean;\n  FECHA_APRU?: string;\n  HORA_APRUE?: string;\n  ID_EXTERNO?: string;\n  NRO_O_COMP?: string;\n  NRO_SUCURS?: number;\n  ORIGEN?: string;\n  REVISO_FAC?: string;\n  REVISO_STK ?: string;\n  N_REMITO?: string;\n}\n\n\nexport const pedidoModelColumns: Array<keyof PedidoModel> = [\n  PEDIDO_ID_FIELD,\n  PEDIDO_CODE_FIELD,\n  \n  CLIENTE_ID_FIELD,\n  CLIENTE_CODE_FIELD,\n\n  VENDEDOR_ID_FIELD,\n  VENDEDOR_CODE_FIELD,\n\n  DEPOSITO_CODE_FIELD,\n\n  TRANSPORTE_CODE_FIELD,\n  TRANSPORTE_ID_FIELD,\n\n  'FECHA_PEDI',\n  'FECHA_ENTR',\n\n  'LEYENDA_4',\n  'LEYENDA_5',\n\n  'TOTAL_PEDI',\n  'PORC_DESC',\n\n  'ESTADO',\n];\n\n\nexport const fullPedidoModelColumns: Array<keyof FullPedidoModel> = [\n  ...pedidoModelColumns,\n\n  'APRUEBA',\n  'EXPORTADO',\n  'FECHA_APRU',\n  'HORA_APRUE',\n  'ID_EXTERNO',\n  'NRO_O_COMP',\n  'NRO_SUCURS',\n  'ORIGEN',\n  'REVISO_FAC',\n  'REVISO_STK',\n  'N_REMITO',\n];\n\n\n/*\nIgnored columns\n\nFILLER?: string;\nCIRCUITO?: number;\nCOMP_STK?: boolean;\nCOND_VTA?: number;\nCOTIZ?: number;\nMON_CTE?: boolean;\nN_LISTA?: number;\nREVISO_PRE?: string;\nTALONARIO?: number;\nTALON_PED: number;\nTIPO_ASIEN ?: string;\nMOTIVO: string;\nHORA?: string;\nCOD_CLASIF?: string;\nID_ASIENTO_MODELO_GV?: number;\nTAL_PE_ORI?: number;\nNRO_PE_ORI?: string;\nFECHA_INGRESO?: string;\nHORA_INGRESO?: string;\nUSUARIO_INGRESO?: string;\nTERMINAL_INGRESO?: string;\nFECHA_ULTIMA_MODIFICACION?: string;\nHORA_ULTIMA_MODIFICACION?: string;\nUSUA_ULTIMA_MODIFICACION?: string;\nTERM_ULTIMA_MODIFICACION?: string;\nID_DIRECCION_ENTREGA?: number;\nES_PEDIDO_WEB?: boolean;\nWEB_ORDER_ID?: number;\nFECHA_O_COMP?: string;\nACTIVIDAD_COMPROBANTE_AFIP?: string;\nID_ACTIVIDAD_EMPRESA_AFIP?: number;\nTIPO_DOCUMENTO_PAGADOR?: number;\nNUMERO_DOCUMENTO_PAGADOR?: string;\nUSUARIO_TIENDA?: string;\nTIENDA?: string;\nORDER_ID_TIENDA?: string;\nNRO_OC_COMP?: string;\nTOTAL_DESC_TIENDA?: number;\nTIENDA_QUE_VENDE?: string;\nPORCEN_DESC_TIENDA?: number;\nUSUARIO_TIENDA_VENDEDOR?: string;\nID_NEXO_PEDIDOS_ORDEN?: number;\nID_GVA01?: number;\nID_GVA10?: number;\n[TRANSPORTE_ID_FIELD]?: number;\nID_GVA38?: number;\nID_GVA43_TALON_PED?: number;\nID_GVA81?: number;\nMETODO_EXPORTACION?: string;\nNRO_SUCURSAL_DESTINO_PEDIDO?: number;\nROW_VERSION: Date;\nID_MODELO_PEDIDO?: number;\nCOMENTARIO?: string;\nLEYENDA_1?: string;\nLEYENDA_2?: string;\nLEYENDA_3?: string;\n\n*/\n", "import { CampoUnsafe } from \"src/domain/dictionary/entities/campo.unsafe\";\n\nexport const CAMPO_TABLE = 'Campo';\nexport interface CampoModel extends CampoUnsafe {\n}\n", "import { EmpresaUnsafe } from \"src/domain/dictionary/entities/empresa.unsafe\";\n\nexport const EMPRESA_TABLE = 'Empresa';\n\nexport interface EmpresaModel extends EmpresaUnsafe {\n}\n", "export const DatasetIDField = 'IDDataset';\n\nexport interface DatasetUnsafe {\n  [DatasetIDField]: number;\n  Dataset: string;\n}\n", "import type knex from 'knex';\nimport { settingsService } from '../settings/settings.repository';\nimport { DBSettingsChangedEvent } from 'src/domain/settings/events';\nimport { eventBus } from 'src/event_bus';\nimport { TangoConnectionChangeRequired, TDBProvider } from '../db';\nimport { DATASET_TABLE } from './models/dataset.model';\nimport { PEDIDO_TABLE } from '../pedido/models/pedido.model';\nimport { CAMPO_TABLE } from './models/campo.model';\nimport { LONGITUD_MINIMA_PEDIDO_PRECISION } from 'src/domain/pedido/validation';\nimport { EMPRESA_TABLE } from './models/empresa.model';\n\nimport { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\nimport { TangoCompanyResult, type TangoCompaniesResult } from 'src/domain/dictionary/results';\nimport { DatasetIDField } from 'src/domain/dictionary/entities';\n\n\nexport interface TangoNumeroPedidoRange {\n  min: bigint;\n  max: bigint;\n}\n\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport abstract class DictionaryProvider extends TDBProvider {\n\n  private _knexInstance: knex.Knex | undefined;\n \n  private _numeroPedidoRange: TangoNumeroPedidoRange | undefined;\n  private readonly _tangoCompanies = new Map<string, TangoCompanyResult>();\n  \n\n  constructor(){\n    super();\n    \n    eventBus.on(DBSettingsChangedEvent.NAME, this.onDBSettingsChanged.bind(this) );\n  }\n  \n\n  onDBSettingsChanged(event: DBSettingsChangedEvent) {\n    const { newDictionary, newCompany, passiveDBChanges } = event.payload;\n\n    if (newDictionary || newCompany) {\n      this.connectionChangeRequired = TangoConnectionChangeRequired.fullReload;   \n    } else {\n      if (passiveDBChanges) {\n        this.connectionChangeRequired = TangoConnectionChangeRequired.passiveRefresh;\n      }\n    }\n\n  }\n     \n\n  async getDictionary(): Promise<knex.Knex> {\n    if (\n      this.connectionChangeRequired === TangoConnectionChangeRequired.none &&\n      this._knexInstance\n    ) {\n      return this._knexInstance;\n    }\n\n    const originalKnexInstance = this._knexInstance;\n\n    // Borramos todo de modo s\u00EDncrono\n    this._knexInstance = undefined;\n    this._numeroPedidoRange = undefined;\n    this._tangoCompanies.clear();\n\n    // Ahora hacemos lo as\u00EDncrono\n    await originalKnexInstance?.destroy();\n\n    const settings = (await settingsService.getDBSettings());\n\n    if (this.connectionChangeRequired === TangoConnectionChangeRequired.fullReload) {\n      this.cleanConnectionError();\n    }\n\n    const newKnexInstance = await this.initializeKnex(settings.tango_dictionary, settings, DXTErrorCode.TANGO_DICTIONARY_ACCESS_ERROR);\n    \n    if (this.connectionChangeRequired === TangoConnectionChangeRequired.fullReload) {\n      await this._prepareDictionary(newKnexInstance);\n    }\n\n    // Luego de lo as\u00EDncrono establecemos las banderas\n    this._knexInstance = newKnexInstance;\n    this.connectionChangeRequired = TangoConnectionChangeRequired.none;\n\n    return this._knexInstance;\n  }\n\n\n  private async _prepareDictionary(knex: knex.Knex) {\n    try {\n      await this._prepareNumeroPedido(knex);\n      await this._loadCompaniesFromDictionary(knex);\n    } catch(e){\n      throw new DXTException(DXTErrorCode.TANGO_DICTIONARY_INITIALIZATION_ERROR, (e as Error)?.message);\n    }\n  }\n\n\n  private async _prepareNumeroPedido(q: knex.Knex): Promise<void> {\n    this._numeroPedidoRange = undefined;\n\n    const result = await q(DATASET_TABLE).first('*').where({Dataset: PEDIDO_TABLE});\n\n    if (result == null) throw new DXTException(DXTErrorCode.UNEXPECTED_ERROR, 'DictionaryProvider._prepareNumeroPedido');\n\n    const datasetId = result[DatasetIDField];\n\n    const campos = await q(CAMPO_TABLE).select('*').where({\n      [DatasetIDField]: datasetId,\n      Campo: 'N_REMITO', \n    });\n\n    if (campos.length === 0) throw new Error('Error');\n\n    if (campos.length > 1) throw new Error('Error');\n\n    const nroPedidoLongitud = campos[0].Longitud;\n\n    if (nroPedidoLongitud < LONGITUD_MINIMA_PEDIDO_PRECISION) {\n      throw new DXTException(\n        DXTErrorCode.UNEXPECTED_ERROR,\n        `Error en longitud para el n\u00FAmero de remito: \u00ABLongitud\u00BB es menor a ${LONGITUD_MINIMA_PEDIDO_PRECISION}.`\n      );\n    }\n\n    this._numeroPedidoRange = {\n      min: BigInt(1),\n      max: BigInt(10) ** BigInt(nroPedidoLongitud) - BigInt(1),\n    }\n\n  }\n\n\n  private async _loadCompaniesFromDictionary(q: knex.Knex): Promise<void> {\n    this._tangoCompanies.clear();\n\n    const empresas = await q(EMPRESA_TABLE).select('*');\n\n    const settings = await settingsService.getDBSettings();\n\n    const currentCompany = settings.tango_active_company;\n\n    empresas.forEach(empresa => {\n      this._tangoCompanies.set(\n        empresa.NombreBD, {\n          db_name: empresa.NombreBD,\n          name: empresa.NombreEmpresa,\n          is_active: currentCompany === empresa.NombreBD,\n        })\n    })\n  }\n\n\n  async isReadyOrThrow(): Promise<true> {\n    await this.getDictionary();\n\n    return true;\n  }\n\n\n  async getCompanies(): Promise<TangoCompaniesResult> {\n    await this.getDictionary();\n\n    return Array.from(this._tangoCompanies.values());\n  }\n\n  \n  async getNumeroPedidoRange(): Promise<TangoNumeroPedidoRange> {\n    await this.getDictionary();\n\n    if (!this._numeroPedidoRange) throw new DXTException(DXTErrorCode.UNEXPECTED_ERROR, 'DictionaryProvider.getNumeroPedidoRange');\n\n    return this._numeroPedidoRange;\n  }\n\n}\n", "import { DictionaryProvider } from \"./dictionary.provider\";\n\n\nclass DictionaryRepository extends DictionaryProvider {\n}\n\n\nexport const dictionaryRepository = new DictionaryRepository();\n", "import type knex from 'knex';\nimport { settingsService } from '../settings/settings.repository';\nimport { DBSettingsChangedEvent } from 'src/domain/settings/events';\nimport { emitBusEvent, eventBus } from 'src/event_bus';\n\nimport { TangoConnectionChangeRequired, TDBProvider } from '../db';\nimport { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\nimport { DXT_CLIENTE_TABLE, dxtClienteTableCreationFieldsSQL, dxtClienteTableCreationIndexesSQL } from '../dxt/models/dxt_cliente.model';\nimport { DXT_VENDEDOR_TABLE, dxtVendedorTableCreationFieldsSQL, dxtVendedorTableCreationIndexesSQL } from '../dxt/models/dxt_vendedor.model';\nimport { isDevelopment } from 'src/environment';\n\nimport { isCacheEnabledGlobally } from '../cache';\nimport { DBTablesChangedEvent } from 'src/domain/db/events';\nimport { DXT_PEDIDO_ARTICULOS_PRINT_TABLE } from '../dxt/pedido/models/dxt_pedido_articulo_print.model';\nimport { dxtPedidoArticuloCreationFieldsSQL, dxtPedidoArticuloCreationIndexesSQL } from '../dxt/pedido/models/dxt_pedido_articulo.model';\nimport { DXT_PEDIDO_ARTICULOS_SCREEN_TABLE } from '../dxt/pedido/models/dxt_pedido_articulo_screen.model';\nimport { dictionaryRepository } from '../dictionary';\nimport { stringifyJSON } from '@core/json';\n\n\ntype _DBChangesStatus = Array<{tableName: string, updates: string}>;\n\nexport abstract class CompanyInitProvider extends TDBProvider {\n  \n  private _knexInstance: knex.Knex | undefined;\n\n  private _dbChanges = new Map<string, number>();\n\n  constructor(){\n    super();\n    \n    eventBus.on(DBSettingsChangedEvent.NAME, this.onDBSettingsChanged.bind(this) );\n  }\n\n\n  onDBSettingsChanged(event: DBSettingsChangedEvent) {\n\n    if (event.payload.newCompany) {\n      this.connectionChangeRequired = TangoConnectionChangeRequired.fullReload;   \n    } else {\n      this.connectionChangeRequired = TangoConnectionChangeRequired.passiveRefresh;   \n    }\n\n  }\n\n\n  async getCompany(): Promise<knex.Knex> {\n    const settings = (await settingsService.getDBSettings());\n    const companyDBName = settings.tango_active_company;\n\n    await dictionaryRepository.isReadyOrThrow(); \n    \n    if (\n      this.connectionChangeRequired === TangoConnectionChangeRequired.none &&\n      this._knexInstance\n    ) {\n      return await this._queryChangesAndContinue(this._knexInstance, companyDBName);\n    }\n\n    const originalKnexInstance = this._knexInstance;\n\n    // Borramos todo de modo s\u00EDncrono\n    this._knexInstance = undefined;\n    this._cleanDBChanges();\n    \n    // Ahora hacemos lo as\u00EDncrono\n    await originalKnexInstance?.destroy();\n\n    if (companyDBName === '') throw new DXTException(DXTErrorCode.TANGO_COMPANY_NOT_SELECTED);\n\n    if (this.connectionChangeRequired === TangoConnectionChangeRequired.fullReload) {\n      this.cleanConnectionError();\n    }\n\n    const newKnexInstance = await this.initializeKnex(companyDBName, settings, DXTErrorCode.TANGO_COMPANY_ACCESS_ERROR);\n\n    if (this.connectionChangeRequired === TangoConnectionChangeRequired.fullReload) {\n      await this._prepareCompany(newKnexInstance);\n    }\n\n    this._knexInstance = newKnexInstance;\n    this.connectionChangeRequired = TangoConnectionChangeRequired.none;\n\n    return await this._queryChangesAndContinue(this._knexInstance, companyDBName);\n  }\n\n\n  _cleanDBChanges() {\n    this._dbChanges.clear();\n  }\n\n\n  private async _queryChangesAndContinue(knexInstance: knex.Knex, dbName: string): Promise<knex.Knex> {\n    if (!isCacheEnabledGlobally) return knexInstance;\n    \n    const result = await knexInstance.raw(\n      'SELECT OBJECT_NAME(OBJECT_ID) AS tableName, user_updates as updates FROM sys.dm_db_index_usage_stats WHERE user_updates>0 and database_id = DB_ID( :dbName )',\n      { dbName }\n    );\n    \n    this._updateDBChanges(result as _DBChangesStatus);\n\n    return knexInstance;\n  }\n\n\n  _updateDBChanges(status: _DBChangesStatus) {\n\n    const newStatus = new Map<string, number>();\n  \n    status.forEach(({tableName, updates}) => {\n      const updatesNumber = Number.parseInt(updates);\n  \n      const current = newStatus.get(tableName);\n  \n      const newUpdates = (current ?? 0) + (Number.isFinite(updatesNumber) ? updatesNumber : 0);\n  \n      newStatus.set(tableName, newUpdates);\n    });\n  \n  \n    const tablesWithChanges: string[] = [];\n  \n    newStatus.forEach((updates, table)=>{\n      const _previousUpdates = this._dbChanges.get(table);\n  \n      if (_previousUpdates !== updates) {\n        tablesWithChanges.push(table);\n      }\n    });\n  \n    this._dbChanges = newStatus;\n\n    if (tablesWithChanges.length > 0) {\n      if (isDevelopment()) {\n        console.info(\"DB CHANGES >>\", stringifyJSON(tablesWithChanges) );\n      }\n  \n      emitBusEvent(\n        new DBTablesChangedEvent(tablesWithChanges)\n      );\n\n    }\n\n  }\n  \n\n  private async _prepareCompany(knexInstance: knex.Knex): Promise<void> {\n    await this._initializeTables(knexInstance);\n  }\n\n\n  private async _initializeTables(knex: knex.Knex) {\n    await this._initializeTable(knex, DXT_CLIENTE_TABLE, dxtClienteTableCreationFieldsSQL, dxtClienteTableCreationIndexesSQL);\n    await this._initializeTable(knex, DXT_VENDEDOR_TABLE, dxtVendedorTableCreationFieldsSQL, dxtVendedorTableCreationIndexesSQL);\n    await this._initializeTable(knex, DXT_PEDIDO_ARTICULOS_PRINT_TABLE, dxtPedidoArticuloCreationFieldsSQL, dxtPedidoArticuloCreationIndexesSQL);\n    await this._initializeTable(knex, DXT_PEDIDO_ARTICULOS_SCREEN_TABLE, dxtPedidoArticuloCreationFieldsSQL, dxtPedidoArticuloCreationIndexesSQL);\n  }\n\n\n  private async _initializeTable(\n    knex: knex.Knex,\n    tableName: string,\n    fields: Record<string, string>,\n    indexes: string[]    \n  ): Promise<void> {\n\n    let tableExists = false;\n    let tableWithUnknownColumns = false;\n\n    try {\n      const count = await knex.count().from(tableName);\n      tableExists = Array.isArray(count) && count.length > 0;\n    } catch(e){\n      console.error(e);\n    }\n\n    if (tableExists) {\n      try {\n        const requiredFields = Object.keys(fields);\n        await knex.select(...requiredFields).from(tableName).first();\n        return ;\n      } catch(e){\n        console.error(e);\n        tableWithUnknownColumns = true;\n      }\n    }\n\n    if (tableWithUnknownColumns) throw new DXTException(DXTErrorCode.TANGO_COMPANY_INITIALIZATION_ERROR, `Tabla con formato no v\u00E1lido: ${tableName}`);\n\n    const fieldDefinitions = Object.entries(fields).map(([field, sql]) => `${field} ${sql}`);\n    const allDefinitions = [ ...fieldDefinitions, ...indexes ].join(',');\n\n    const creationSql = `CREATE TABLE ${tableName} (${allDefinitions});`;\n\n    await knex.raw(creationSql);\n  }\n\n}\n", "\nimport { eventBus } from \"src/event_bus\";\nimport { type ModelRepository, GeneralID, GetAllOptions, GetOneOptions, ModelRepositoryConfig } from \"../shared/repository\";\nimport { CompanyInitProvider } from \"./company_init.provider\";\n\nimport { DBSettingsChangedEvent } from \"src/domain/settings/events\";\nimport { MemoryCache, CacheOwnerStatus } from \"../cache\";\nimport { DXTErrorCode, DXTException } from \"src/domain/shared/errors\";\nimport { UserRole } from \"src/domain/user/types\";\n\n\nexport interface CompanyProviderConfig<M> extends ModelRepositoryConfig<M> {\n  sortField?: string;\n  columns?: Array<keyof M>;\n  tableDependencies?: string[]\n}\n\nexport abstract class CompanyProvider<ID extends GeneralID, M, R=M, C extends CompanyProviderConfig<M>=CompanyProviderConfig<M>> extends CompanyInitProvider implements ModelRepository<ID, M, R>, CacheOwnerStatus {\n  protected readonly cache: MemoryCache<ID, R>;\n\n  private readonly _tableDependencies: string[];\n\n  readonly config: C;\n\n  constructor(config: C){\n    super();\n\n    this.config = config;\n    \n    this._tableDependencies = [\n      this.config.mainTable,\n      ...(this.config.tableDependencies ?? [])\n    ]\n\n    this.cache = new MemoryCache(this);\n\n    eventBus.on(DBSettingsChangedEvent.NAME, this.onDBSettingsChanged.bind(this) );\n  }\n\n  getTableName(): string {\n    return this.config.mainTable;\n  }\n  \n  getTableDependencies(): string[] {\n    return this._tableDependencies;\n  }\n  \n\n  async isReady(): Promise<boolean> {\n    await this.getCompany();\n\n    return true;\n  }\n\n\n  async getById(id: ID, options?: GetOneOptions): Promise< typeof this.config.columns extends string[] ? Partial<R> : R > {\n    const q = await this.getCompany();\n\n    const useCache = options?.useCache ?? true;\n    \n    if (useCache) {\n      const cachedData = await this.cache.getById(id);\n      if (cachedData!=null) return cachedData;\n    }\n\n    const { mainTable, mainIdField, columns } = this.config;\n\n    const data = await q(mainTable).first(...columns ?? '*').where(mainIdField, id) as M;\n\n    if (data == null) throw new DXTException(DXTErrorCode.NOT_FOUND);\n\n    const result = this.toResult(data);\n\n    if (useCache) await this.cache.setById(id, result);\n\n    return result;\n  }\n\n\n  async getAll(options?: GetAllOptions): Promise<R[]> {\n    const cacheKey = this.getAllCacheKey(options);\n    \n    if (cacheKey!=null) {\n      const cachedData = await this.cache.getMetadata<R[]>(cacheKey);\n      if (cachedData) return cachedData;\n    }\n\n    const { mainTable, columns, sortField } = this.config;\n\n    const q = await this.getCompany();\n\n    let query = q(mainTable);\n\n    const where = options?.where;\n    if (where!=null) {\n      query = query.where(where.field, where.value);\n    }\n\n    const whereIn = options?.whereIn;\n    if (whereIn!=null) {\n      query = query.whereIn(whereIn.field, whereIn.values);\n    }\n\n    if (sortField!=null) query = query.orderBy(sortField);\n\n    if ((options?.offset) != null) {\n      query = query.offset(options?.offset).limit(options?.limit ?? 10);\n    }\n\n    const data = (await query.select(...columns ?? '*') as M[]);\n\n    const result = data.map((p) => this.toResult(p));\n\n    if (cacheKey!=null) await this.cache.setMetadata(cacheKey, result);\n\n    return result;\n  }\n\n\n  async deleteById(id: ID): Promise<void> {\n    const { mainTable, mainIdField } = this.config;\n\n    const q = await this.getCompany();\n\n    const result = await q(mainTable).where(mainIdField, id).del();\n\n    if (result <= 0) throw new DXTException(DXTErrorCode.NOT_FOUND);\n\n    await this.cache.invalidateById(id);\n  }\n\n  \n  getAllByUserCacheKey(role: UserRole, tangoUserId: number|undefined, options: GetAllOptions|undefined): string|null {\n    const useCache = options?.useCache ?? true;\n    if (!useCache) return null;\n    \n    const { mainTable } = this.config;\n\n    return `${mainTable}_BU_${role}_${tangoUserId??'A'}`;\n  }\n\n  \n  getAllCacheKey(options: GetAllOptions|undefined): string|null {\n    const useCache = options?.useCache ?? true;\n    if (!useCache) return null;\n\n    const { mainTable } = this.config;\n\n    if (options==null) return mainTable;\n\n    const {\n      offset, limit, \n      where, whereIn\n    } = options;\n\n    const chunks = [\n      offset??'O',\n      limit??'L',\n      where?.field??'W',\n      where?.value??'V',\n      whereIn?.field??'I',\n      whereIn?.values.join('-')??'V'\n    ];\n\n    return `${mainTable}_ALL_${chunks.join('_')}`;\n  }\n  \n  abstract toResult(m: M): R;\n}\n", "import { OmitTangoDisposableProperties } from \"src/domain/tango/types\";\nimport { CompanyProvider } from \"../company\";\n\n\nexport abstract class TangoProvider<M, R=M> extends  CompanyProvider<number, M, R> {\n      \n  toResultWithoutDisposables(m: M): OmitTangoDisposableProperties<R> {\n    const { FILLER, OBSERVACIONES, ROW_VERSION, CAMPOS_ADICIONALES, ...remaining } = m as any;\n\n    return {\n      ...remaining,\n    };\n  }\n\n}", "import { NO_NAME } from \"src/texts/common\";\nimport { TangoProvider } from \"./tango.provider\";\n\n\nexport function createTangoRepository<M, R=M>(\n  mainTable: string,\n  mainIdField: string,\n  modelMapper: (m: M)=>R,\n  columns?: Array<keyof M>,\n) {\n  return new class extends TangoProvider<M, R> {\n    constructor(){\n      super({\n        mainTable,\n        mainIdField,\n        columns,\n      });\n    }\n        \n    toResult(m: M): R {\n      return modelMapper(m);\n    }\n  }\n}\n\n\nexport function resolveScreenName(\n  screenNameFields: string[],\n  model: Record<string, any>,\n  def: string = NO_NAME\n): string {\n\n  for (const f of screenNameFields) {\n    const v = model[f as string];\n    if (typeof v === 'string' && v.length > 0) {\n      return v;\n    }\n  }\n\n  return def;\n  \n}\n", "import { CompanyProvider, CompanyProviderConfig } from \"../company/company.provider\";\nimport { BasicUserUnsafe, UserMinimalInfo, UserAndRelations } from \"src/domain/user/entities/user\";\nimport { NullableRecord } from \"@/typescript\";\n\nimport { DXTException, DXTErrorCode } from \"src/domain/shared/errors\";\n\nimport { UserBaseModel } from \"../user/models/user_base.model\";\nimport knex from \"knex\";\nimport { getPasswordHash } from \"!/infrastucture/auth/utils\";\n\nimport { now } from \"@/time\";\nimport { resolveScreenName } from \"../auxiliar/utils\";\nimport { dbErrorToDXTException } from \"../db\";\nimport { GetAllOptions,  } from \"../shared/repository\";\n\nexport interface BasicUpdateInput extends Omit<BasicUserUnsafe, 'id'> {\n  tango_id: number;\n  password?: string|undefined;\n  habilitado_en_dxt: boolean;\n}\n\nexport interface BasicInsertInput extends BasicUpdateInput {\n  tango_id: number;\n  password: string;\n  habilitado_en_dxt: boolean;\n}\n\n\nexport interface DXTUserRepositoryConfig<M, TangoModel> extends CompanyProviderConfig<M> {\n  tangoTable: string; \n  tangoIdField: string;\n  dxtUserNotFoundErrorCode: DXTErrorCode;\n  tangoUserNotFoundErrorCode: DXTErrorCode;\n  tangoColumns: Array<keyof TangoModel>;\n  screenNameFields: Array<keyof TangoModel>;\n}\n\nexport abstract class DXTUserRepository<\n  InsertInput extends BasicInsertInput,\n  UpdateInput extends BasicUpdateInput,\n  DXTModel extends UserBaseModel,\n  R extends BasicUserUnsafe,\n  TangoModel\n> extends CompanyProvider<number, DXTModel, R, DXTUserRepositoryConfig<DXTModel, TangoModel>> {\n\n  constructor(config: DXTUserRepositoryConfig<DXTModel, TangoModel>) {\n    super(config);\n  }\n\n  async changePassword(id: number, passwordHash: string): Promise<void> {\n    const { mainTable, mainIdField } = this.config;\n\n    const q = await this.getCompany();\n\n    await q(mainTable)\n      .where(mainIdField as any, id)\n      .update({\n        password_hash: passwordHash\n      });\n\n    await this.cache.invalidateById(id);\n  }\n\n\n  async getUserWithRelationsById(id: number, relationRequired?: boolean): Promise<R> {\n    relationRequired = relationRequired ?? true;\n\n    const cachedUser = await this.cache.getById(id);\n    if (cachedUser) return cachedUser;\n\n    const { mainIdField } = this.config;\n\n    const q = await this.getCompany();\n    return await this._getUserWithRelationsByWhere(q, mainIdField, id, relationRequired);\n  }\n  \n\n  async getUserWithRelationsByName(username: string, relationRequired?: boolean): Promise<R> {\n    relationRequired = relationRequired ?? true;\n\n    const cache = await this.cache.getByIdBuffer();\n\n    if (cache) {\n      for (const [key, user] of cache) {\n        if (user.username.toLowerCase() === username.toLowerCase()) return user;\n      }\n    }\n\n    const q = await this.getCompany();\n    return await this._getUserWithRelationsByWhere(q, 'username', username, relationRequired);\n  }\n\n\n  async _getUserWithRelationsByWhere(knexInstance: knex.Knex, field: string, value: number|string, relationRequired: boolean): Promise<R> {\n    const q = knexInstance;\n\n    const { mainTable, mainIdField, tangoTable, tangoIdField, dxtUserNotFoundErrorCode, tangoUserNotFoundErrorCode } = this.config;\n\n    const modelAndRelations: (DXTModel & NullableRecord<TangoModel>) | undefined = await q(mainTable)\n      .joinRaw(\n        'LEFT JOIN :tangoTable: ON :mainTable:.tango_id = :tangoTable:.:tangoIdField:',\n        {\n          tangoTable: tangoTable,\n          mainTable: mainTable,\n          tangoIdField: tangoIdField,\n        }\n      )\n      .first('*').where(field, value) as (DXTModel & NullableRecord<TangoModel>) | undefined;\n\n    if (modelAndRelations==null) throw new DXTException(dxtUserNotFoundErrorCode);\n\n    const tangoUserExists = (modelAndRelations as any)[tangoIdField] != null;\n\n    if (relationRequired && !tangoUserExists) throw new DXTException(tangoUserNotFoundErrorCode)\n\n    const unsafe = this.toResultWithRelations(modelAndRelations);\n\n    if (tangoUserExists) this.cache.setById(unsafe.id, unsafe);\n\n    return unsafe;\n  }\n\n\n  async getAllWithRelations(options?: GetAllOptions): Promise<UserMinimalInfo[]> {\n    const cacheKey = this.getAllCacheKey(options);\n\n    if (cacheKey!=null) {\n      const cachedData = await this.cache.getMetadata<UserMinimalInfo[]>(cacheKey);\n      if (cachedData) return cachedData;\n    }\n\n    const { mainTable, mainIdField, sortField, tangoTable, tangoIdField, tangoColumns } = this.config;\n\n    const q = await this.getCompany();\n\n    let query = q(mainTable)\n    .joinRaw(\n      'LEFT JOIN :tangoTable: ON :mainTable:.tango_id = :tangoTable:.:tangoIdField:',\n      {\n        tangoTable: tangoTable,\n        mainTable: mainTable,\n        tangoIdField: tangoIdField\n      }\n    );\n\n    if (sortField!=null) query = query.orderBy(sortField);\n\n    if (options?.offset != null) {\n      query = query.offset(options?.offset).limit(options?.limit ?? 10);\n    }\n\n    \n    const modelAndRelationss = await query.select(\n      mainIdField,\n      tangoIdField,\n      'tango_id',\n      'username',\n      `${mainTable}.habilitado_en_dxt`,\n      ...(tangoColumns??[] as string[]).map(c=>`${tangoTable}.${c as string}`),\n    ) as Array< any >;\n\n    const result = modelAndRelationss?.map(model => this.createUserMinimalInfo(model));\n\n    if (cacheKey!=null) await this.cache.setMetadata(cacheKey, result);\n    \n    return result;\n  }\n\n\n  createUserMinimalInfo(modelAndRelations: any ): UserMinimalInfo {\n    const result = this.toResultWithRelations(modelAndRelations);\n\n    const { id, tango_id, username, screen_name, habilitado_en_dxt, habilitado_en_tango } = result;\n\n    const { tangoIdField } = this.config;\n\n    const usuario_tango_existe = modelAndRelations[tangoIdField] != null;\n\n    if (usuario_tango_existe && habilitado_en_tango == null) {\n      throw new DXTException(DXTErrorCode.TANGO_DB_INVALID_DATA, 'DXTUserRepository.createUserMinimalInfo: habilitado_en_tango must exists');\n    }\n\n    return {\n      id,\n      tango_id,\n      username,\n      screen_name,\n      habilitado_en_dxt,\n      habilitado_en_tango,\n      usuario_tango_existe,\n    };\n  }\n  \n  getScreenName(relatedModel: Record<string, any>): string {\n    return resolveScreenName(this.config.screenNameFields as string[], relatedModel, relatedModel.username);\n  }\n\n  abstract toResultWithRelations(modelAndRelations: DXTModel & NullableRecord<TangoModel>): UserAndRelations<R>;\n\n  async create(input: InsertInput): Promise<R> {\n\n    const q = await this.getCompany();\n\n    const inputModel = this._userInputToModel(input);\n\n    const { mainTable, mainIdField } = this.config;\n\n    try{\n      const result: any = await q(mainTable).returning(mainIdField).insert(inputModel);\n      const id = result[0][mainIdField];\n      return await this.getById(id);\n    } catch(e) {\n      throw dbErrorToDXTException(e);\n    }\n  }\n   \n\n  async update(id: number, input: UpdateInput): Promise<R> {\n\n    const q = await this.getCompany();\n\n    const inputModel = this._userInputToModel(input);\n\n    const { mainTable, mainIdField } = this.config;\n\n    try{\n      const result = await q(mainTable)\n        .where(mainIdField, id)\n        .update(inputModel);\n\n      if (result <= 0) throw new DXTException(DXTErrorCode.NOT_FOUND);\n    } catch(e) {\n      throw dbErrorToDXTException(e);\n    }\n\n    await this.cache.invalidateById(id);\n\n    return await this.getById(id);\n  }\n\n\n  async delete(id: number, username: string): Promise<void> {\n    const user = await this.getById(id);\n\n    if (user.username !== username) throw new DXTException(DXTErrorCode.INVALID_PARAMETER, 'username no coincide');\n\n    return await this.deleteById(id);\n  }\n\n\n  private _userInputToModel(input: UpdateInput | InsertInput): UserBaseModel {\n    const {\n      password,\n      habilitado_en_dxt,\n      email,\n      ...remaining\n    } = input;\n\n    return {\n      ...remaining,\n      password_hash: password!=null ? getPasswordHash(password) : undefined,\n      email: email != null ? email : null,\n      habilitado_en_dxt,\n      timestamp_modificacion: now(),\n    }\n  }\n\n}", "import { type DXTClienteUnsafe } from \"src/domain/dxt/entities\";\nimport { DXT_CLIENTE_TABLE, DXT_CLIENTE_ID_FIELD, type DXTClienteModel } from \"./models/dxt_cliente.model\";\n\nimport { UserRole } from \"src/domain/user/types\";\nimport { CLIENTE_ID_FIELD, CLIENTE_NAME_COLUMNS, CLIENTE_TABLE, ClienteModel, clienteModelColumns } from \"../auxiliar/models/cliente.model\";\nimport { NullableRecord } from \"@/typescript\";\nimport { DXTErrorCode } from \"src/domain/shared/errors\";\nimport { DXTUserRepository } from \"./dxt_user.repository\";\nimport { userRoleToNumber } from \"src/domain/user/transformation\";\n\nimport { InsertClienteInputValidated, UpdateClienteInputValidated } from \"src/domain/dxt/inputs/cliente\";\n\n\nclass DXTClienteRepository extends DXTUserRepository<\n  InsertClienteInputValidated, UpdateClienteInputValidated, DXTClienteModel, DXTClienteUnsafe, ClienteModel\n> {\n  \n  constructor(){\n    super({\n      mainTable: DXT_CLIENTE_TABLE,\n      mainIdField: DXT_CLIENTE_ID_FIELD,\n      \n      tangoTable: CLIENTE_TABLE,\n      tangoIdField: CLIENTE_ID_FIELD,\n      tangoColumns: clienteModelColumns,\n    \n      dxtUserNotFoundErrorCode: DXTErrorCode.DXT_CUSTOMER_NOT_FOUND,\n      tangoUserNotFoundErrorCode: DXTErrorCode.TANGO_CUSTOMER_NO_LONGER_EXISTS,\n    \n      screenNameFields: CLIENTE_NAME_COLUMNS,\n    \n      sortField: 'RAZON_SOCI',\n    });\n  }\n\n  toResult(m: DXTClienteModel): DXTClienteUnsafe {\n    const { habilitado_en_dxt } = m;\n\n    return {\n      ...m,\n      screen_name: m.username,\n      role: userRoleToNumber(UserRole.customer),\n      id: m.dxt_cliente_id,\n      habilitado_en_dxt,\n    }\n  }\n\n\n  toResultWithRelations(cliente: DXTClienteModel & NullableRecord<ClienteModel>): DXTClienteUnsafe {\n    const { mainIdField } = this.config;\n    const { habilitado_en_dxt, HABILITADO: habilitado_en_tango, ...remaining} = cliente;\n    const id = (cliente as any)[mainIdField];\n\n    return {\n      ...remaining,\n      id,\n      role: UserRole.customer,\n      screen_name: this.getScreenName(cliente),\n      habilitado_en_tango: habilitado_en_tango !== null ? habilitado_en_tango : undefined,\n      habilitado_en_dxt,\n    };\n    \n  }\n\n}\n\n\nexport const dxtClienteRepository = new DXTClienteRepository();\n", "import { type DXTVendedorUnsafe } from \"src/domain/dxt/entities\";\nimport { DXT_VENDEDOR_TABLE, DXT_VENDEDOR_ID_FIELD, type DXTVendedorModel } from \"./models/dxt_vendedor.model\";\n\nimport { UserRole } from \"src/domain/user/types\";\nimport { NullableRecord } from \"@/typescript\";\nimport { VENDEDOR_ID_FIELD, VENDEDOR_NAME_COLUMNS, VENDEDOR_TABLE, VendedorModel, vendedorModelColumns } from \"../auxiliar/models/vendedor.model\";\nimport { DXTErrorCode } from \"src/domain/shared/errors\";\nimport { DXTUserRepository } from \"./dxt_user.repository\";\nimport { userRoleToNumber } from \"src/domain/user/transformation\";\n\nimport { InsertVendedorInputValidated, UpdateVendedorInputValidated } from \"src/domain/dxt/inputs/vendedor\";\n\n\nclass DXTVendedorRepository extends DXTUserRepository<\n  InsertVendedorInputValidated, UpdateVendedorInputValidated, DXTVendedorModel, DXTVendedorUnsafe, VendedorModel\n> {\n  \n  constructor() {\n    super({\n      mainTable: DXT_VENDEDOR_TABLE,\n      mainIdField: DXT_VENDEDOR_ID_FIELD,\n      columns: undefined,\n    \n      tangoTable: VENDEDOR_TABLE,\n      tangoIdField: VENDEDOR_ID_FIELD,\n      tangoColumns: vendedorModelColumns,\n    \n      dxtUserNotFoundErrorCode: DXTErrorCode.DXT_VENDOR_NOT_FOUND,\n      tangoUserNotFoundErrorCode: DXTErrorCode.TANGO_VENDOR_NO_LONGER_EXISTS,\n    \n      screenNameFields: VENDEDOR_NAME_COLUMNS,\n    \n      sortField: 'NOMBRE_VEN',\n    });\n  }\n\n\n  toResult(m: DXTVendedorModel): DXTVendedorUnsafe {\n    const { habilitado_en_dxt } = m;\n\n    return {\n      ...m,\n      id: m.dxt_vendedor_id,\n      screen_name: m.username,\n      role: userRoleToNumber(UserRole.vendor),\n      habilitado_en_dxt,\n    }\n  }\n\n  \n  toResultWithRelations(vendedor: DXTVendedorModel & NullableRecord<VendedorModel>): DXTVendedorUnsafe {\n    const { dxt_vendedor_id: id, habilitado_en_dxt, INHABILITA: inhabilitado_en_tango, ...remaining} = vendedor;\n\n    return {\n      ...remaining,\n      id,\n      role: UserRole.vendor,\n      screen_name: this.getScreenName(vendedor),\n      habilitado_en_tango: inhabilitado_en_tango != null ? !inhabilitado_en_tango : undefined,\n      habilitado_en_dxt,\n    };\n  }\n\n}\n\n\nexport const dxtVendedorRepository = new DXTVendedorRepository();\n", "import { VOAuthToken } from \"!/api/auth/value_objects\";\nimport { MINUTE_IN_MILLISECONDS, DAY_IN_MILLISECONDS, now } from \"@/time\";\nimport { AuthPrivateResult } from \"src/domain/auth/results\";\nimport { AuthTokenProps, VOAuthRandom } from \"src/domain/auth/value_objects\";\nimport { UserEntity } from \"src/domain/user/entities/user\";\nimport { userRoleToNumber } from \"src/domain/user/transformation\";\nimport { isDevelopment } from \"src/environment\";\nimport { settingsService } from \"../settings/settings.repository\";\nimport path, { join } from \"path\";\nimport { cachePath } from \"!/infrastucture/paths\";\nimport { mkdir, open, opendir, stat, unlink } from \"fs/promises\";\n\n\ntype TokenString = string;\ntype CreationTime = number;\n\nexport type AuthTokensList = Map<TokenString, CreationTime>;\n\n\nconst _tokensPath = path.join(cachePath, 'tokens');\n\n\nexport class AuthTokenRepository {\n\n  _tokensList: AuthTokensList|undefined;\n  \n\n  private async _getTokensList(): Promise<AuthTokensList> {\n    \n    if (this._tokensList) {\n      await this._removeExpiredTokens();\n      return this._tokensList;\n    }\n\n    this._tokensList = await this._loadTokensFromFiles();\n\n    return this._tokensList;\n  }\n\n\n  private async _loadTokensFromFiles() {\n    const result = new Map();\n\n    const settings = await settingsService.getMiscSettings();\n\n    const expirationInMillis = settings.auth_expiration_days * (isDevelopment() ? MINUTE_IN_MILLISECONDS : DAY_IN_MILLISECONDS);\n\n    const currentTime = now();\n\n    await mkdir(_tokensPath, { recursive: true });\n\n    const dir = await opendir(_tokensPath, {\n      bufferSize: 200\n    });\n  \n    for await (const dirent of dir) {\n      if (!dirent.isFile()) continue;\n      \n      \n      let token: VOAuthToken|null = null;\n      try{\n        token = new VOAuthToken(dirent.name);\n      }catch(_){}\n      \n      const fullFileName = dirent.path;\n      const info = await stat(fullFileName);\n\n      if (\n        (token == null) || (info.ctimeMs + expirationInMillis < currentTime)\n      ) {\n        try{\n          await unlink(fullFileName);\n        } catch(_) {}\n        \n        continue ;\n      }\n\n      result.set(\n        token.toString(),\n        info.ctimeMs\n      );\n    }\n\n    return result;\n  }\n  \n\n  private async _removeExpiredTokens(): Promise<void> {\n    const settings = await settingsService.getMiscSettings();\n\n    const expirationInMillis = settings.auth_expiration_days * (isDevelopment() ? MINUTE_IN_MILLISECONDS : DAY_IN_MILLISECONDS);\n\n    const currentTime = now();\n\n    this._tokensList?.forEach((creationTime , key)=>{\n      if (creationTime + expirationInMillis < currentTime) {\n        this._tokensList?.delete(key);\n      }\n    });\n  }\n\n\n  async tokenExists(authToken: VOAuthToken): Promise<boolean> {\n    const tokensList = await this._getTokensList();\n\n    return tokensList.get(authToken.toString()) != null;\n  }\n\n\n  async save(authToken: VOAuthToken): Promise<void> {\n    const tokensList = await this._getTokensList();\n\n    const fullFileName = join(_tokensPath, authToken.toString());\n    const fh = await open(fullFileName, 'w');\n    await fh.close();\n\n    tokensList.set(authToken.toString(), now());\n  }\n\n\n  async delete(authToken: string): Promise<void> {\n    const tokensList = await this._getTokensList();\n\n    const fullFileName = join(_tokensPath, authToken.toString());\n    await unlink(fullFileName);\n\n    tokensList.delete(authToken);\n  }\n\n\n  async createUserAuthToken(user: UserEntity): Promise<AuthPrivateResult> {\n    const tokensList = await this._getTokensList();\n\n    let authToken: VOAuthToken;\n    let authTokenString: string;\n  \n    do {\n      authToken = new VOAuthToken(\n        new AuthTokenProps(\n          user.id.valueOf(),\n          VOAuthRandom.generate().valueOf(),\n          userRoleToNumber(user.role.valueOf()),\n        )\n      );\n  \n      authTokenString = authToken.toString();\n    } while (tokensList.get(authTokenString) != null);\n\n    await this.save(authToken);\n  \n    return {\n      auth_token: authTokenString,\n      user,\n    }\n  \n  }\n  \n}\n\n\nexport const authTokenRepository = new AuthTokenRepository();", "import { VOAuthToken } from \"!/api/auth/value_objects\";\nimport { dxtClienteRepository } from \"!/infrastucture/dxt/dxt_cliente.repository\";\nimport { dxtVendedorRepository } from \"!/infrastucture/dxt/dxt_vendedor.repository\";\nimport { settingsService } from \"!/infrastucture/settings/settings.repository\";\nimport { AuthInfoResult, AuthPrivateResult } from \"src/domain/auth/results\";\nimport { DXTException, DXTErrorCode } from \"src/domain/shared/errors\";\nimport { UserEntity } from \"src/domain/user/entities/user\";\nimport { numberToUserRole } from \"src/domain/user/transformation\";\nimport { UserRole } from \"src/domain/user/types\";\nimport { AuthService, isAutoLoginEnabled } from \"../auth.service\";\nimport { createAdminUserEntity, resolveUserStateException } from \"../utils\";\nimport { authTokenRepository } from \"../auth_token.repository\";\nimport { DXTUserRepository } from \"!/infrastucture/dxt/dxt_user.repository\";\nimport { valueToString } from \"@/strings\";\n\n\nexport async function connectWorker(this: AuthService, authTokenString: string): Promise<AuthPrivateResult|undefined> {\n  let token: VOAuthToken|undefined;\n\n  try{\n    token = new VOAuthToken(authTokenString);\n  } catch(_){\n    throw new DXTException(DXTErrorCode.INVALID_AUTH_TOKEN);\n  }\n\n  const tokenExists = await authTokenRepository.tokenExists(token);\n\n  if (!tokenExists) {\n\n    if (!isAutoLoginEnabled) throw new DXTException(DXTErrorCode.MISSING_AUTH_TOKEN);\n\n    authTokenRepository.save(token);\n   \n  }\n\n  const tokenProps = token.valueOf();\n  \n  const userId = tokenProps.userId.valueOf();\n  const role = numberToUserRole(tokenProps.roleNumber.valueOf());\n\n  \n  if (role === UserRole.admin) {\n    const settings = await settingsService.getMiscSettings();\n    return {\n      auth_token: authTokenString,\n      user: createAdminUserEntity(settings.admin_email),\n    }\n  }\n  \n  let result: AuthInfoResult | undefined;\n\n  if (role === UserRole.customer) return await _testUserConnect(dxtClienteRepository, userId, token, DXTErrorCode.TANGO_CUSTOMER_NO_LONGER_EXISTS );\n\n  if (role === UserRole.vendor) return await _testUserConnect(dxtVendedorRepository, userId, token, DXTErrorCode.TANGO_VENDOR_NO_LONGER_EXISTS );\n\n  throw new DXTException(DXTErrorCode.MISSING_AUTH_TOKEN);  \n}\n\n\nasync function _testUserConnect(\n  repository: DXTUserRepository<any, any, any, any, any>,\n  userId: number,\n  authToken: VOAuthToken,\n  tangoUserNotFoundErrorCode: DXTErrorCode,\n): Promise<AuthPrivateResult | undefined> {\n  \n  const userUnsafe = await repository.getUserWithRelationsById(userId, false);\n\n  let userEntity: UserEntity|undefined;\n  try {\n    userEntity = new UserEntity(userUnsafe);\n  } catch(e) {\n    const message = valueToString(e);\n\n    throw new DXTException(DXTErrorCode.UNEXPECTED_ERROR, message);\n  }\n\n  const userStateException = await resolveUserStateException(userEntity, tangoUserNotFoundErrorCode);\n\n  if (userStateException) throw userStateException;\n\n  return {\n    auth_token: authToken.toString(),\n    user: userEntity,\n  }\n}\n", "import { dxtClienteRepository } from \"!/infrastucture/dxt/dxt_cliente.repository\";\nimport { dxtVendedorRepository } from \"!/infrastucture/dxt/dxt_vendedor.repository\";\nimport { settingsService } from \"!/infrastucture/settings/settings.repository\";\nimport { AuthPrivateResult } from \"src/domain/auth/results\";\nimport { ADMIN_USERNAME } from \"src/domain/auth/validation\";\nimport { DXTException, DXTErrorCode, isNotFoundException } from \"src/domain/shared/errors\";\nimport { UserEntity, UserUnsafe } from \"src/domain/user/entities/user\";\n\nimport { AuthService } from \"../auth.service\";\nimport { resolveUserStateException, createAdminUserEntity } from \"../utils\";\nimport { authTokenRepository } from \"../auth_token.repository\";\nimport { DXTUserRepository } from \"!/infrastucture/dxt/dxt_user.repository\";\nimport { getPasswordHash } from \"!/infrastucture/auth/utils\";\n\n\nexport async function loginWorker(this: AuthService, username: string, password: string): Promise<AuthPrivateResult> {\n  const passwordHash = getPasswordHash(password);\n\n  if (username.toLocaleLowerCase() === ADMIN_USERNAME.toLowerCase()) {\n    const settings = await settingsService.getMiscSettings();\n\n    if (passwordHash === settings.admin_password_hash) {\n      const user = createAdminUserEntity(settings.admin_email);\n\n      return await authTokenRepository.createUserAuthToken(user);\n    }\n\n    throw new DXTException(DXTErrorCode.INVALID_USERNAME_OR_PASSWORD);\n  }\n\n  \n  let result = await _testUserLogin(\n    dxtClienteRepository, username, passwordHash,\n    DXTErrorCode.TANGO_CUSTOMER_NO_LONGER_EXISTS\n  );\n  if (result) return result;\n  \n\n  result = await _testUserLogin(\n    dxtVendedorRepository, username, passwordHash,\n    DXTErrorCode.TANGO_VENDOR_NO_LONGER_EXISTS\n  );\n  if (result) return result;\n\n\n  throw new DXTException(DXTErrorCode.INVALID_USERNAME_OR_PASSWORD);\n}\n\n\nasync function _testUserLogin(\n  repository: DXTUserRepository<any, any, any, any, any>,\n  username: string, passwordHash: string,\n  tangoUserNotFoundErrorCode: DXTErrorCode,\n): Promise<AuthPrivateResult | undefined> {\n\n  let userUnsafe: UserUnsafe | undefined;\n  try{\n    userUnsafe = await repository.getUserWithRelationsByName(username, false);\n  } catch(e) {\n    const notFoundError = isNotFoundException(e);\n    if (!notFoundError) throw e;\n  }\n\n  const user = userUnsafe ? new UserEntity(userUnsafe) : undefined;\n\n  if (user==null) return undefined;\n  \n  const userPasswordHash = user.passwordHash.valueOf();\n\n  if (passwordHash !== userPasswordHash) return undefined;\n  \n  const userStateException = await resolveUserStateException(user, tangoUserNotFoundErrorCode);\n\n  if (userStateException) throw userStateException;\n\n  const userInfo = await authTokenRepository.createUserAuthToken(user);\n\n  if (user.mostrarMensajeDeAdvertencia.valueOf()) {\n    const miscSettings = await settingsService.getMiscSettings();\n\n    userInfo.message_to_user = {\n      type: 'warning',\n      title: miscSettings.user_warning_message_title,\n      content: miscSettings.user_warning_message_content,\n    }\n  }\n\n  return userInfo;\n\n}\n", "import { dxtClienteRepository } from \"!/infrastucture/dxt/dxt_cliente.repository\";\nimport { dxtVendedorRepository } from \"!/infrastucture/dxt/dxt_vendedor.repository\";\nimport { settingsService } from \"!/infrastucture/settings/settings.repository\";\nimport { StoredMiscSettingsDTO } from \"!/infrastucture/settings/dtos\";\nimport { DXTException, DXTErrorCode } from \"src/domain/shared/errors\";\nimport { UserRole } from \"src/domain/user/types\";\nimport { AuthService } from \"../auth.service\";\nimport { getPasswordHash } from \"!/infrastucture/auth/utils\";\n\n\nexport async function changePasswordWorker(\n  this: AuthService, \n  role: UserRole,\n  id: number,\n  password: string,\n): Promise<void> {\n  const passwordHash = getPasswordHash(password);\n\n  switch(role) {\n    case UserRole.admin: \n      {\n        const settings = await settingsService.getMiscSettings();\n\n        await settingsService.setMiscSettings(\n          new StoredMiscSettingsDTO({\n            ...settings,\n            admin_password_hash: passwordHash,\n          })\n        );\n\n        return ;\n      }\n    case UserRole.customer:\n      await dxtClienteRepository.changePassword(id, passwordHash);\n      return ;\n    case UserRole.vendor:\n      await dxtVendedorRepository.changePassword(id, passwordHash);\n      return ;\n  }\n\n  throw new DXTException(DXTErrorCode.UNEXPECTED_ERROR, 'AuthRepository.changepassword');\n}\n", "import { isDevelopment } from \"src/environment\";\nimport { VOBoolean } from \"@/value_objects\";\nimport { tryVO } from \"@/value_objects\";\nimport { connectWorker } from \"./workers/connect.worker\";\nimport { loginWorker } from \"./workers/login.worker\";\nimport { changePasswordWorker } from \"./workers/change_password.worker\";\nimport { authTokenRepository } from \"./auth_token.repository\";\n\n\n\nexport const isAutoLoginEnabled = isDevelopment() && tryVO( ()=>new VOBoolean(process.env.AUTO_LOGIN), new VOBoolean(false) ).valueOf();\n\n\nexport class AuthService {\n  \n  connect = connectWorker;\n  login = loginWorker;\n  changePassword = changePasswordWorker;\n \n  async logout(authToken: string): Promise<void> {\n    await authTokenRepository.delete(authToken);\n  }\n\n}\n\n\nexport const authService = new AuthService();\n", "import { type ApiRequest } from '@depsel-nodejs/api-server/types';\n\nimport { RootController } from './root.controller';\nimport { type AuthPrivateResult } from 'src/domain/auth/results';\n\nimport { authService, isAutoLoginEnabled } from '!/infrastucture/auth/auth.service';\nimport { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\n\n\n\nexport interface AuthenticatedApiRequest extends ApiRequest {\n  auth: AuthPrivateResult;\n}\n\nexport class AuthenticatedRootController extends RootController<AuthenticatedApiRequest> {\n\n  override async onRequest(req: AuthenticatedApiRequest): Promise<void> {\n    await super.onRequest(req);\n\n    let token = req.headers.get('authorization')?.toLowerCase();\n    if (typeof token !== 'string') {\n\n      if ( !isAutoLoginEnabled ) throw new DXTException(DXTErrorCode.UNAUTHORIZED);\n\n      const devUsername = process.env.DEV_AUTH_USERNAME;\n      const devPassword = process.env.DEV_AUTH_PASSWORD;\n\n      if ((devUsername != null) && (devPassword != null)) {\n        const result = await authService.login(devUsername, devPassword);\n        token = result.auth_token;\n      }\n\n      if (typeof token !== 'string') throw new DXTException(DXTErrorCode.INVALID_USERNAME_OR_PASSWORD);\n    }\n\n    token = token.trim();\n    if (token.substring(0, 7) === 'bearer ') token = token.substring(7).trim();\n\n    const result = await authService.connect(token);\n\n    if (result == null) throw new DXTException(DXTErrorCode.UNAUTHORIZED);\n    \n    req.auth = result;\n  }\n  \n}\n\n\nexport const authenticatedRootController = new AuthenticatedRootController();\n", "import { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\nimport { UserRole } from 'src/domain/user/types';\n\nimport { type AuthenticatedApiRequest, AuthenticatedRootController } from './authenticated_root.controller';\n\nclass AdminRootController extends AuthenticatedRootController {\n\n  override async onRequest(req: AuthenticatedApiRequest): Promise<void> {\n    await super.onRequest(req);\n\n    if (req.auth.user.role.valueOf() !== UserRole.admin) {\n      throw new DXTException(DXTErrorCode.ADMIN_ROLE_REQUIRED);\n    }\n  }\n  \n}\n\nexport const adminRootController = new AdminRootController();\n", "import { CompanyProvider, CompanyProviderConfig } from \"!/infrastucture/company\";\n\nimport { DXT_PEDIDO_ARTICULOS_CODE_FIELD, DXTPedidoArticuloModel } from \"./models/dxt_pedido_articulo.model\";\nimport { emitBusEvent } from \"src/event_bus\";\nimport { DBSettingsChangedEvent } from \"src/domain/settings/events\";\nimport { DXTPedidoArticuloRecord } from \"src/domain/dxt/pedido/types\";\n\n\nexport type DXTPedidoArticuloRepositoryConfig<M> = Omit<CompanyProviderConfig<M>, \"mainIdField\">;\n \nexport abstract class DXTPedidoArticuloRepository<DXTModel extends DXTPedidoArticuloModel> extends CompanyProvider<string, DXTModel, DXTPedidoArticuloRecord> {\n\n  constructor(config: DXTPedidoArticuloRepositoryConfig<DXTModel>) {\n    super({\n      mainIdField: DXT_PEDIDO_ARTICULOS_CODE_FIELD,\n      ...config,\n    })\n  }\n\n  async getList(): Promise<string[]> {\n    const rows = await this.getAll();\n\n    return rows.map(v => {\n      const line = v.codigo_articulo;\n      if (v.params==null) return line;\n      \n      return `${line}; ${v.params}`;\n    });\n  }\n\n  async setList(list: DXTPedidoArticuloRecord[]): Promise<true> {\n    this.cache.clear();\n\n    const finalList = list.filter(e => e.codigo_articulo.trim().length>0);\n\n    const { mainTable } = this.config;\n\n    const q = await this.getCompany();\n\n    const trx = await q.transaction();\n\n    await trx(mainTable).truncate();\n    await trx.batchInsert(mainTable, finalList, 500);\n\n    await trx.commit();\n\n    emitBusEvent(\n      new DBSettingsChangedEvent({\n        passiveDBChanges: false,\n        newDictionary: false,\n        newCompany: false,\n        resetCache: true,\n      })\n    );    \n\n    return true;\n  }\n\n\n  toResult(m: DXTModel): DXTPedidoArticuloRecord {\n    return m;\n  }\n\n}\n", "export const ARTICULO_TABLE = 'STA11';\n\nexport const ARTICULO_ID_FIELD = 'ID_STA11' as const;\nexport const ARTICULO_CODE_FIELD = 'COD_ARTICU' as const;\n\n\nexport interface ArticuloModel {\n  [ARTICULO_ID_FIELD]: number;\n\t[ARTICULO_CODE_FIELD] : string;\n\n  DESCRIPCIO?: string;\n  DESC_ADIC?: string;\n\n  COD_IB?: number;\n\tCOD_IB3?: number;\n\tCOD_II?: number;\n\tCOD_II_CO?: number;\n\tCOD_IVA?: number;\n\tCOD_IVA_CO?: number;\n\tCOD_S_II?: number;\n\tCOD_S_II_C?: number;\n\tCOD_S_IVA?: number;\n\tCOD_S_IV_C?: number;\n\tCOMISION_V?: number;\n\n\tDESCUENTO?: number;\n\tIMPUESTO_I?: number;\n\tIMPUEST_IC?: number;\n}\n\n\nexport const articuloModelColumns: Array<keyof ArticuloModel> = [\n  ARTICULO_ID_FIELD,\n  ARTICULO_CODE_FIELD,\n\n  'DESCRIPCIO',\n  'DESC_ADIC',\n\n  'COD_IB',\n  'COD_IB3',\n  'COD_II',\n  'COD_II_CO',\n  'COD_IVA',\n  'COD_IVA_CO',\n  'COD_S_II',\n  'COD_S_II_C',\n  'COD_S_IVA',\n  'COD_S_IV_C',\n  'COMISION_V',\n\n  'DESCUENTO',\n  'IMPUESTO_I',\n  'IMPUEST_IC', \n];\n\n\nexport const ARTICULO_NAME_COLUMNS: typeof articuloModelColumns = ['DESCRIPCIO', 'DESC_ADIC'];\n", "import { isStr } from \"@core/strings\";\nimport { DXTPedidoArticulo, DXTPedidoArticuloParams, DXTPedidoArticuloRecord } from \"../types\";\n\n\nfunction _getDXTPedidoArticuloParam(s: string): { key: string, value: string}|null {\n  const chunks = s.split('=', 2);\n  if (chunks.length != 2) return null;\n\n  const key = chunks[0].trim().toLowerCase();\n  const value = chunks[1].trim();\n\n  if (key.length == 0) return null;\n\n  return { key, value };\n}\n\n\nexport function strToDXTPedidoArticuloRecord(s: string): DXTPedidoArticuloRecord|null {\n  if (!isStr(s)) return null;\n  \n  let p = s.indexOf(';');\n  if (p <= 0) p = s.length;\n\n  const codigo_articulo = s.substring(0, p).trimEnd();\n  if (codigo_articulo.length == 0) return null;\n\n  const params = s.substring(p+1).trim();\n\n  if (params.length == 0) return { codigo_articulo };\n\n  return {\n    codigo_articulo,\n    params,\n  }  \n}\n\n\nexport function strToDXTPedidoArticuloParams(paramsStr?: string): DXTPedidoArticuloParams|undefined {\n  if (paramsStr==null) return undefined;\n\n  const result: DXTPedidoArticuloParams = {};\n  let emptyParams = true;\n\n  const chunks = paramsStr.split(\";\");\n\n  chunks.forEach((s, i) => {\n    const paramEntry = _getDXTPedidoArticuloParam(s);\n\n    if (paramEntry==null) return;\n    \n    const { key, value } = paramEntry;\n\n    result[key] = value;\n    emptyParams = false;\n  });\n\n  return emptyParams ? undefined : result;\n\n}\n\n\nexport function strToDXTPedidoArticulo(s: string): DXTPedidoArticulo|null {\n\n  const record = strToDXTPedidoArticuloRecord(s);\n\n  if (record == null) return null;\n  \n  const { codigo_articulo, params: paramsStr } = record;\n  \n  const params = strToDXTPedidoArticuloParams(paramsStr);\n\n  return {\n    codigo_articulo,\n    params,\n  }\n}", "import { DXTPedidoArticuloIdResult } from \"src/domain/dxt/pedido/results\";\nimport { DXTPedidoArticuloRepository } from \"./dxt_pedido_articulo.repository\";\nimport { DXTPedidoArticuloPrintModel, DXTPedidoArticuloWithRelationsModel, DXT_PEDIDO_ARTICULOS_PRINT_TABLE } from \"./models/dxt_pedido_articulo_print.model\";\nimport { ARTICULO_CODE_FIELD, ARTICULO_ID_FIELD, ARTICULO_TABLE } from \"!/infrastucture/articulo/models\";\nimport { DXT_PEDIDO_ARTICULOS_CODE_FIELD, DXT_PEDIDO_ARTICULOS_ID_FIELD } from \"./models/dxt_pedido_articulo.model\";\nimport { DXTErrorCode, DXTException } from \"src/domain/shared/errors\";\nimport { strToDXTPedidoArticuloParams } from \"src/domain/dxt/pedido/utils\";\n\nexport class DXTPedidoArticuloPrintRepository extends DXTPedidoArticuloRepository<DXTPedidoArticuloPrintModel> {\n  private readonly mainColumns: string[];\n  private readonly articuloColumns: string[];\n\n  constructor(){\n    super({\n      mainTable: DXT_PEDIDO_ARTICULOS_PRINT_TABLE,\n      tableDependencies: [ARTICULO_TABLE],\n    });\n\n    this.mainColumns = [`${DXT_PEDIDO_ARTICULOS_PRINT_TABLE}.*`];\n\n    this.articuloColumns = [ ARTICULO_ID_FIELD ].map(c => `${ARTICULO_TABLE}.${c}`);    \n  }\n\n\n  async getIdsWithParams(paramsToReturn: string[]): Promise<DXTPedidoArticuloIdResult[]> {\n\n    const cacheKey = `ids_${ paramsToReturn?.join(\".\") }`;\n\n    const resultFromCache = await this.cache.getMetadata<DXTPedidoArticuloIdResult[]>(cacheKey);\n    if (resultFromCache != null) return resultFromCache;\n\n    const { mainTable } = this.config;\n\n    const q = await this.getCompany();\n\n    const rawData: DXTPedidoArticuloWithRelationsModel[] = await q(mainTable)\n      .select(...this.mainColumns, ...this.articuloColumns)\n      .innerJoin(ARTICULO_TABLE, `${mainTable}.${DXT_PEDIDO_ARTICULOS_CODE_FIELD}`, `${ARTICULO_TABLE}.${ARTICULO_CODE_FIELD}`)\n      .orderBy(DXT_PEDIDO_ARTICULOS_ID_FIELD);\n\n    if (rawData == null) throw new DXTException(DXTErrorCode.NOT_FOUND);\n\n    const data = rawData.map(m => this.toArticuloIdResult(m, paramsToReturn) );\n\n    await this.cache.setMetadata<DXTPedidoArticuloIdResult[]>(cacheKey, data);\n\n    return data;\n  }\n\n\n  toArticuloIdResult(m: DXTPedidoArticuloWithRelationsModel, paramsToReturn: string[]): DXTPedidoArticuloIdResult {\n    const { [ARTICULO_ID_FIELD]: id_articulo } = m;\n\n    const params = strToDXTPedidoArticuloParams(m.params);\n\n    if (paramsToReturn.length == 0) {\n      if (params!=null) return [ id_articulo, params];\n      return id_articulo;\n    }\n\n    const filteredParamsEntries = params==null ? null : Object.entries(params).filter(\n      (([key, _]) => paramsToReturn.includes(key) )\n    );\n\n    if (filteredParamsEntries!=null && filteredParamsEntries.length>0) {\n      return [ id_articulo, Object.fromEntries( filteredParamsEntries ) ];\n    }\n\n    return id_articulo;\n  } \n\n}\n\n\nexport const dxtPedidoArticuloPrintRepository = new DXTPedidoArticuloPrintRepository();\n", "import { ARTICULO_TABLE } from \"!/infrastucture/articulo/models\";\nimport { DXTPedidoArticuloRepository } from \"./dxt_pedido_articulo.repository\";\nimport { DXTPedidoArticuloScreenModel, DXT_PEDIDO_ARTICULOS_SCREEN_TABLE } from \"./models/dxt_pedido_articulo_screen.model\";\n\nexport class DXTPedidoArticulosScreenRepository extends DXTPedidoArticuloRepository<DXTPedidoArticuloScreenModel> {\n  constructor(){\n    super({\n      mainTable: DXT_PEDIDO_ARTICULOS_SCREEN_TABLE,\n      tableDependencies: [ARTICULO_TABLE],\n    });\n  }\n}\n\n\nexport const dxtPedidoArticuloScreenRepository = new DXTPedidoArticulosScreenRepository();\n", "import { ValueObject } from \"@/value_objects\";\nimport { DXTPedidoArticuloRecord } from \"../types\";\n\nimport { strToDXTPedidoArticuloRecord } from \"../utils\";\n\n\nexport class VOPedidoArticuloRecords extends ValueObject<DXTPedidoArticuloRecord[], string[]> {\n  \n  override validate(rawValue?: string[]): DXTPedidoArticuloRecord[] {\n    if (!Array.isArray(rawValue))  this.throwError(rawValue);\n\n    for (const e in rawValue) {\n      if (typeof e !== 'string') this.throwError(rawValue);\n    }\n\n    const result = rawValue.map(\n      s => strToDXTPedidoArticuloRecord(s)\n    ).filter(e => e!=null);\n\n    return result;\n  }\n\n}\n", "import { InferUnsafeInputFromSchema } from \"@core/validate_schema\";\nimport { validateInput } from \"src/domain/shared/validation\";\nimport { VOPedidoArticuloRecords } from \"../value_objects\";\n\n\nexport const setPedidoArticulosInputSchema = {\n  data: (v: string[]) => new VOPedidoArticuloRecords(v),\n}\n\nexport type PedidoArticulosInput = InferUnsafeInputFromSchema<typeof setPedidoArticulosInputSchema>;\n\nexport const validatePedidoArticulosInput = (input: PedidoArticulosInput) => validateInput(setPedidoArticulosInputSchema, input);\n", "import { VOValidationFunction, ValidationFunction } from '@/validate_schema';\nimport { VOStrings } from '../value_objects/vo_strings';\nimport { VOIntegers } from '../value_objects';\n\n\nexport const integersValidator: VOValidationFunction<VOIntegers>\n= (v) => new VOIntegers(v).valueOf();\n\n\nexport const stringsValidator: VOValidationFunction<VOStrings>\n= (v) => new VOStrings(v).valueOf();\n\n\nexport const optionalStringsValidator: ValidationFunction<string[]|undefined>\n= (v, def) => v == null ? def : new VOStrings(v).valueOf();\n\n\nexport const optionalIntegersValidator: ValidationFunction<number[]|undefined>\n= (v, def) => v == null ? def : new VOIntegers(v).valueOf();\n", "import { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { adminRootController } from '../../../admin_root.controller';\nimport { dxtPedidoArticuloPrintRepository } from '!/infrastucture/dxt/pedido/dxt_pedido_articulo_print.repository';\nimport { dxtPedidoArticuloScreenRepository } from '!/infrastucture/dxt/pedido/dxt_pedido_articulo_screen.repository';\nimport { validatePedidoArticulosInput } from 'src/domain/dxt/pedido/input';\nimport { DXTApiOkResult } from 'src/api-universal';\nimport { optionalStringsValidator } from 'src/domain/shared/validate_schema';\nimport { DXTPedidoArticuloIdResult } from 'src/domain/dxt/pedido/results';\n\n\nexport const dxtPedidoGetArticulosPrintListEndpoint = createApiEndpoint(\n  adminRootController,\n  undefined,\n  async (req): Promise<string[]> => await dxtPedidoArticuloPrintRepository.getList()\n);\n\n\nexport const dxtPedidoGetArticulosScreenListEndpoint = createApiEndpoint(\n  adminRootController,\n  undefined,\n  async (req): Promise<string[]> => await dxtPedidoArticuloScreenRepository.getList()\n);\n\n\nexport const dxtPedidoSetArticulosPrintListEndpoint = createApiEndpoint(\n  adminRootController,\n\n  {\n    validation: {\n      body: validatePedidoArticulosInput,\n    },\n  },\n\n  async (req): Promise<DXTApiOkResult> => {\n    await dxtPedidoArticuloPrintRepository.setList(req.validated.body.data);\n    return { ok: true }\n  }\n);\n\n\nexport const dxtPedidoSetArticulosScreenListEndpoint = createApiEndpoint(\n  adminRootController,\n\n  {\n    validation: {\n      body: validatePedidoArticulosInput,\n    },\n  },\n\n  async (req): Promise<DXTApiOkResult> => {\n    await dxtPedidoArticuloScreenRepository.setList(req.validated.body.data);\n    return { ok: true }\n  }\n);\n\n\nexport const dxtPedidoGetArticulosPrintIdsEndpoint = createApiEndpoint(\n  adminRootController,\n\n  {\n    validation: {\n      query: {\n        param: optionalStringsValidator\n      }\n    }\n  },\n\n  async (req): Promise<DXTPedidoArticuloIdResult[]> => {\n    const { param: params } = req.validated.query;\n\n    const paramsToReturn = (params ?? []).map(p => p.trim().toLowerCase()).filter(p => p!=null && p.length>0);\n\n    return await dxtPedidoArticuloPrintRepository.getIdsWithParams(paramsToReturn);\n  } \n);\n", "import { useNavigate } from '@remix-run/react';\n\nimport { settings } from '#/crud_configs/users';\n\nimport { URL_SETTINGS_CUSTOMERS_PATH } from 'src/config/url_paths';\nimport { SettingsFormHeading } from '~/components/SettingsFormHeading';\n\nimport { Form } from './components';\n\nexport default function Add() {\n  const typeSettings = settings.customers;\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <SettingsFormHeading\n        title={typeSettings.titles.create}\n        actionButton={{\n          label: 'Cancelar',\n          buttonProps: {\n            colorScheme: 'gray',\n            onClick: () => {\n              navigate(URL_SETTINGS_CUSTOMERS_PATH);\n            },\n          },\n        }}\n      />\n      <Form typeSettings={typeSettings} />\n    </>\n  );\n}\n", "import { useEffect } from 'react';\n\nimport { useAppResources } from '#/app_resources/app_resources';\nimport { FormListsSettings } from '#/crud_configs/users';\nimport { useTangoList } from '#/hooks/useTangoList';\nimport { promiseBasedToast } from '#/utils/promise_based_toast';\n\nimport {\n  Badge,\n  Box,\n  Divider,\n  Grid,\n  GridItem,\n  Heading,\n  HStack,\n  Stack,\n  useToast,\n} from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nimport {\n  FetchStateError,\n  FetchStateLoading,\n  FetchStateSuccess,\n} from '@core/react-hooks/useAxiosFetch';\nimport { useForm } from 'react-hook-form';\nimport { URL_SETTINGS_CUSTOMERS_PATH } from 'src/config/url_paths';\nimport { InsertClienteInput } from 'src/domain/dxt/inputs';\n\nimport { API_TANGO_PERFIL } from 'src/api-client/tango/paths';\nimport { CommonCard } from '~/components/CommonCard';\nimport { ControlledInput } from '~/components/form_elements/ControlledInput';\nimport { ControlledRadio } from '~/components/form_elements/ControlledRadio';\nimport { ControlledSelect } from '~/components/form_elements/ControlledSelect';\nimport { ControlledSwitch } from '~/components/form_elements/ControlledSwitch';\nimport { FormErrors } from '~/components/form_elements/FormErrors';\nimport { InlineError } from '~/components/InlineError';\nimport { SettingsFormsButtons } from '~/components/SettingsFormButtons';\n\nimport { useCustomValidationSchema } from '../validation';\nimport { AuxiliarItem } from 'src/domain/tango/results';\n\ninterface SuccessProps {\n  typeSettings: FormListsSettings;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { typeSettings } = props;\n\n  const app = useAppResources();\n\n  const toast = useToast();\n\n  const { yupValidationSchema, passwordStatus } = useCustomValidationSchema();\n\n  type _InputSchema = yup.InferType<typeof yupValidationSchema>;\n\n  const { state: statePerfiles, result: resultPerfiles } =\n    useTangoList<AuxiliarItem>({\n      url: API_TANGO_PERFIL,\n      fieldsMap: {\n        label: 'name',\n        value: 'id',\n      },\n    });\n\n  const { state: stateRelationship, result: resultRelationship } =\n    typeSettings.api.getRelation();\n\n  const {\n    handleSubmit,\n    control,\n    setError,\n    resetField,\n    watch,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = useForm<_InputSchema>({\n    defaultValues: {\n      habilitado_en_dxt: true,\n      puede_crear_pedido: true,\n      puede_editar_pedido: true,\n      ver_pedidos_cumplidos: true,\n      ver_sin_precio: false,\n      mostrar_mensaje_de_advertencia: false,\n      puede_anular_pedido: false,\n      borrar_pedido_al_anular: false,\n      aprobar_pedido_al_crear: false,\n    },\n    resolver: yupResolver(yupValidationSchema),\n  });\n\n  /*\n   * If the user can't cancel orders, the option to delete the order when canceling it is disabled\n   */\n  const watchPuedeAnularPedido = watch('puede_anular_pedido');\n\n  useEffect(() => {\n    if (watchPuedeAnularPedido === false)\n      resetField('borrar_pedido_al_anular', { defaultValue: false });\n  }, [watchPuedeAnularPedido]);\n\n  const disableForm = isSubmitSuccessful || isSubmitting;\n\n  const onSubmit = async (dataUnsafe: _InputSchema) => {\n    const { password_repeat, ...data } = dataUnsafe;\n\n    // remove unnecessary fields\n    if (data.email === '') delete data.email;\n\n    const input: InsertClienteInput = data;\n\n    const result = await typeSettings.api.post(input, app);\n\n    await promiseBasedToast({\n      toast,\n      result,\n      messages: {\n        success: { title: 'Usuario creado' },\n        error: { title: 'Ha ocurrido un error' },\n        loading: { title: 'Creando usuario' },\n      },\n    })\n      .then(() => {\n        app.navigate(URL_SETTINGS_CUSTOMERS_PATH);\n      })\n      .catch((e) => {\n        setError('root', { message: e });\n      });\n  };\n\n  return (\n    <form noValidate onSubmit={handleSubmit(onSubmit)}>\n      <Box>\n        <FormErrors errors={errors} />\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Informaci\u00F3n del Cliente\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledSelect\n                fieldProps={{\n                  name: 'tango_id',\n                  placeholder: typeSettings.tangoRelatedFields?.placeholder,\n                  options: resultRelationship,\n                  noOptionsMessage(obj) {\n                    return typeSettings.tangoRelatedFields?.empty;\n                  },\n                  isSearchable: true,\n                  selectedOptionStyle: 'check',\n                  isLoading: stateRelationship instanceof FetchStateLoading,\n                }}\n                formControlProps={{\n                  isDisabled:\n                    disableForm ||\n                    !(stateRelationship instanceof FetchStateSuccess),\n                }}\n                formControlInnerProps={{\n                  label: typeSettings.tangoRelatedFields?.label,\n                }}\n                control={control}\n              />\n              {stateRelationship instanceof FetchStateError && (\n                <InlineError error={stateRelationship.errorOrNull().error} />\n              )}\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'username',\n                  id: 'username',\n                  type: 'text',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Nombre de Usuario',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'email',\n                  id: 'email',\n                  type: 'text',\n                  inputMode: 'email',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Correo electr\u00F3nico',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'password',\n                  id: 'password',\n                  type: 'password',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Contrase\u00F1a',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'password_repeat',\n                  id: 'password_repeat',\n                  type: 'password',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Confirmaci\u00F3n de Contrase\u00F1a',\n                }}\n                control={control}\n              />\n            </GridItem>\n            {passwordStatus != null && (\n              <GridItem colSpan={{ md: 2 }}>\n                {passwordStatus.tooShort && (\n                  <Badge colorScheme='red'>Contrase\u00F1a muy corta</Badge>\n                )}\n                {passwordStatus.tooLong && (\n                  <Badge colorScheme='red'>Contrase\u00F1a muy larga</Badge>\n                )}\n                {passwordStatus.invalidCharsPresent && (\n                  <Badge colorScheme='red'>Evite caracteres no v\u00E1lidos</Badge>\n                )}\n              </GridItem>\n            )}\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledSelect\n                fieldProps={{\n                  name: 'perfil_facturacion_id',\n                  placeholder: 'Seleccione un perfil',\n                  options: resultPerfiles,\n                  noOptionsMessage(obj) {\n                    return 'No hay perfiles disponibles';\n                  },\n                  isLoading: statePerfiles instanceof FetchStateLoading,\n                  selectedOptionStyle: 'check',\n                }}\n                formControlProps={{\n                  isDisabled:\n                    disableForm ||\n                    !(statePerfiles instanceof FetchStateSuccess),\n                }}\n                formControlInnerProps={{\n                  label: 'Perfil de facturaci\u00F3n',\n                }}\n                control={control}\n              />\n              {statePerfiles instanceof FetchStateError && (\n                <InlineError error={statePerfiles.errorOrNull().error} />\n              )}\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Estado\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledRadio\n                fieldProps={{\n                  name: 'habilitado_en_dxt',\n                  options: [\n                    {\n                      value: true,\n                      label: 'Establecido en Tango',\n                    },\n                    {\n                      value: false,\n                      label: 'Deshabilitado',\n                    },\n                  ],\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                radioProps={{\n                  size: { base: 'sm', sm: 'md' },\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Comunicaci\u00F3n\n              </Heading>\n            </GridItem>\n            <GridItem>\n              <ControlledSwitch\n                fieldProps={{\n                  name: 'mostrar_mensaje_de_advertencia',\n                  id: 'mostrar_mensaje_de_advertencia',\n                }}\n                formControlProps={{\n                  width: 'auto',\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Mostrar mensaje de advertencia',\n                }}\n                control={control}\n              />\n            </GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Pedidos\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Stack spacing={4} direction={{ base: 'column' }}>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_crear_pedido',\n                      id: 'puede_crear_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede crear pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_editar_pedido',\n                      id: 'puede_editar_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede editar pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_anular_pedido',\n                      id: 'puede_anular_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede anular pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'borrar_pedido_al_anular',\n                      id: 'borrar_pedido_al_anular',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Borrar pedido al anular',\n                    }}\n                    control={control}\n                    watch={{\n                      isDisabled: watchPuedeAnularPedido === false,\n                      ...(watchPuedeAnularPedido === false && {\n                        isChecked: false,\n                      }),\n                    }}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'aprobar_pedido_al_crear',\n                      id: 'aprobar_pedido_al_crear',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Los pedidos se aprueban al crearlos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'ver_pedidos_cumplidos',\n                      id: 'ver_pedidos_cumplidos',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede ver los pedidos cumplidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'ver_sin_precio',\n                      id: 'ver_sin_precio',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede ver art\u00EDculos sin precios',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n              </Stack>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'dia_de_entrega',\n                  id: 'dia_de_entrega',\n                  type: 'number',\n                  inputMode: 'tel',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Tiempo de entrega de pedidos',\n                  helperText: 'Expresado en d\u00EDas',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem></GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <SettingsFormsButtons\n            buttonActionText='Guardar'\n            isLoading={disableForm}\n            buttonCancelUrl={typeSettings.cancelButtonNavigateTo}\n          />\n        </CommonCard>\n      </Box>\n    </form>\n  );\n};\n", "import { useState } from 'react';\n\nimport { yupVOValidation } from 'src/yup/utils';\nimport * as yup from 'yup';\n\nimport { commonValidationSchema } from '#/crud_configs/users/validation';\nimport _ from 'lodash';\nimport { DXTPasswordStatus, dxtPasswordStatus } from 'src/domain/shared/validation';\nimport { VODXTPassword } from 'src/domain/shared/value_objects';\n\nexport const useCustomValidationSchema = () => {\n  const [passwordStatus, setPasswordStatus] = useState<DXTPasswordStatus | null>(null);\n\n  const customValidationSchema = yup\n    .object({\n      password: yup\n        .string()\n        .required('Ingrese una contrase\u00F1a')\n        .test('password', 'Formato de contrase\u00F1a no v\u00E1lido', (v) => {\n          if (v != '' && v != null) {\n            let newPasswordStatus = dxtPasswordStatus(v);\n\n            if (!_.isEqual(passwordStatus, newPasswordStatus))\n              setPasswordStatus(newPasswordStatus);\n\n            return yupVOValidation(VODXTPassword, v);\n          }\n\n          return true;\n        }),\n      password_repeat: yup\n        .string()\n        .required('Repita la contrase\u00F1a')\n        .test(\n          'passwords-match',\n          'Las contrase\u00F1as no coinciden',\n          function (value) {\n            return this.parent.password === value;\n          }\n        ),\n    })\n    .required();\n\n  const yupValidationSchema = commonValidationSchema.concat(customValidationSchema);\n\n  return { yupValidationSchema, passwordStatus };\n};\n", "import { FormListsSettings } from '#/crud_configs/users';\n\nimport { Success } from './success';\n\ninterface FormListsProps {\n  typeSettings: FormListsSettings;\n}\n\nexport const Form = (props: FormListsProps) => {\n  const { typeSettings } = props;\n\n  return <Success typeSettings={typeSettings} />;\n};\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\nimport { dxtPedidoGetArticulosPrintListEndpoint, dxtPedidoSetArticulosPrintListEndpoint } from '!/api/dxt/pedido/endpoints';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await dxtPedidoGetArticulosPrintListEndpoint.get(request, params);\n}\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  return await dxtPedidoSetArticulosPrintListEndpoint.post(request, params);\n}\n", "import { useNavigate, useParams } from '@remix-run/react';\n\nimport { settings, SettingsProps } from '#/crud_configs/users';\n\nimport { Icon } from '@chakra-ui/react';\n\nimport AccountPlusIcon from 'mdi-react/AccountPlusIcon.js';\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { CommonErrors } from '~/components/CommonErrors';\nimport { SettingsFormHeading } from '~/components/SettingsFormHeading';\n\nimport { ListsUsers } from './components';\n\nexport default function Lists() {\n  const navigate = useNavigate();\n  const { type } = useParams();\n\n  const typeSettings = settings[type as keyof SettingsProps];\n\n  if (type != null && typeSettings != null) {\n    return (\n      <>\n        <SettingsFormHeading\n          title={typeSettings.titles.common}\n          actionButton={{\n            label: typeSettings.titles.create,\n            buttonProps: {\n              leftIcon: <Icon as={AccountPlusIcon} />,\n              onClick: () => {\n                if (typeSettings.actionButtonNavigateTo != null)\n                  navigate(typeSettings.actionButtonNavigateTo);\n              },\n            },\n          }}\n        />\n        <ListsUsers typeSettings={typeSettings} />\n      </>\n    );\n  }\n\n  return (\n    <CommonErrors\n      error={'Tipo de lista no v\u00E1lida'}\n      buttonProps={{\n        label: 'Volver a Configuraci\u00F3n',\n        colorScheme: 'green',\n        onClick: () => {\n          navigate(URL_SETTINGS_PATH);\n        },\n      }}\n    />\n  );\n}\n", "import { Box, Grid, GridItem } from '@chakra-ui/react';\n\nimport {\n  FormInputSkeleton,\n  FormTextareaSkeleton,\n} from '~/components/form_elements/FormSkeletons';\n\nexport const Loading = () => {\n  return (\n    <Box\n      width={'full'}\n      sx={{\n        mt: 8,\n        mb: 4,\n      }}\n    >\n      <Grid templateColumns={'1fr'} gap={{ base: 2, md: 4 }}>\n        <GridItem>\n          <FormInputSkeleton />\n        </GridItem>\n        <GridItem>\n          <FormInputSkeleton />\n        </GridItem>\n        <GridItem>\n          <FormTextareaSkeleton height='400px' />\n        </GridItem>\n        <GridItem>\n          <FormInputSkeleton />\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n};\n", "import { useMemo, useRef, useState } from 'react';\n\nimport { useAppResources } from '#/app_resources/app_resources';\nimport { FormListsSettings } from '#/crud_configs/users';\nimport { useSearchField } from '#/hooks/useSearchField';\nimport { pathParamsToUrl, resolveUserStatusColor } from '#/utils';\nimport { promiseBasedToast } from '#/utils/promise_based_toast';\n\nimport {\n  Box,\n  Flex,\n  Grid,\n  GridItem,\n  HStack,\n  Icon,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/react';\n\nimport AccountCancelIcon from 'mdi-react/AccountCancelIcon.js';\nimport AccountCheckIcon from 'mdi-react/AccountCheckIcon.js';\nimport CloseIcon from 'mdi-react/CloseIcon.js';\nimport MagnifyIcon from 'mdi-react/MagnifyIcon.js';\nimport PencilIcon from 'mdi-react/PencilIcon.js';\nimport TrashIcon from 'mdi-react/TrashIcon.js';\nimport { UserMinimalInfo } from 'src/domain/user/entities/user';\nimport { UserMinimalInfoResult } from 'src/domain/user/results';\nimport { CommonCard } from '~/components/CommonCard';\nimport { DeleteDialog } from '~/components/DeleteDialog';\nimport { Pagination } from '~/components/Pagination';\nimport { SearchField } from '~/components/SearchField';\nimport { TextWordBreak } from '~/components/TextWordBreak';\n\ninterface SuccessProps {\n  stateData: UserMinimalInfoResult;\n  retry: () => void;\n  typeSettings: FormListsSettings;\n}\n\ninterface SelectedUserProps {\n  id: number;\n  username: string;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { stateData, retry, typeSettings } = props;\n\n  const app = useAppResources();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const toast = useToast();\n\n  const selectedUser = useRef<SelectedUserProps | null>(null);\n\n  const { filteredData, handleSearchInputChange } =\n    useSearchField<UserMinimalInfoResult>(stateData, [\n      'screen_name',\n      'username',\n    ]);\n\n  /*\n   * Pagination\n   */\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const PageSize = 10;\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return filteredData.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, filteredData]);\n\n  const handleDeleteDialog = (id: number, username: string) => () => {\n    selectedUser.current = { id, username };\n    onOpen();\n  };\n\n  const handleEdit = (id: number) => () => {\n    app.navigate(pathParamsToUrl(typeSettings.editButtonNavigateTo, { id }));\n  };\n\n  const handleDeletion = async () => {\n    if (selectedUser.current != null) {\n      const { id, username } = selectedUser.current;\n\n      selectedUser.current = null;\n\n      // call the api\n      const result = await typeSettings.api.delete(id, { username }, app);\n\n      const finalResult = await promiseBasedToast({\n        toast,\n        result,\n        messages: {\n          success: { title: 'Usuario eliminado' },\n          error: { title: 'Error al eliminar usuario' },\n          loading: { title: 'Eliminando usuario' },\n        },\n      })\n        .then(() => {\n          stateData.splice(\n            stateData.findIndex((object) => {\n              return object.id === id;\n            }),\n            1\n          );\n\n          handleSearchInputChange();\n        })\n        .catch((e) => {});\n\n      onClose();\n    }\n  };\n\n  return (\n    <>\n      <DeleteDialog\n        isOpen={isOpen}\n        onClose={onClose}\n        handleDeletion={handleDeletion}\n        message={{\n          title: 'Eliminar usuario',\n          body: '\u00BFEst\u00E1 seguro que desea eliminar este usuario? Esta acci\u00F3n no se puede deshacer.',\n        }}\n      />\n      <CommonCard>\n        <Box sx={{ pb: 4 }}>\n          <SearchField handleSearchInputChange={handleSearchInputChange} />\n        </Box>\n        <Box>\n          <Table variant='grayOverCard' size={'md'}>\n            <Thead>\n              <Tr>\n                <Th\n                  sx={{\n                    p: { base: 2, md: 4 },\n                  }}\n                >\n                  <Grid\n                    templateColumns={{\n                      base: '3fr 1fr 2fr',\n                      md: '3fr 3fr 1fr 2fr',\n                    }}\n                    gap={{ base: 2, md: 4 }}\n                  >\n                    <GridItem>Nombre completo</GridItem>\n                    <GridItem sx={{ display: { base: 'none', md: 'block' } }}>\n                      Nombre de usuario\n                    </GridItem>\n                    <GridItem textAlign={'center'}>Estado</GridItem>\n                    <GridItem></GridItem>\n                  </Grid>\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {currentTableData.length > 0 &&\n                currentTableData.map((user) => (\n                  <Tr key={`row_${user.id}`}>\n                    <Td\n                      sx={{\n                        p: { base: 2, md: 4 },\n                      }}\n                    >\n                      <Grid\n                        templateColumns={{\n                          base: '3fr 1fr 2fr',\n                          md: '3fr 3fr 1fr 2fr',\n                        }}\n                        gap={{ base: 2, md: 4 }}\n                        alignItems={'center'}\n                      >\n                        <GridItem>\n                          <TextWordBreak breakType={'normal'}>\n                            {user.screen_name}\n                          </TextWordBreak>\n                        </GridItem>\n                        <GridItem\n                          sx={{ display: { base: 'none', md: 'block' } }}\n                        >\n                          <TextWordBreak breakType={'normal'}>\n                            {user.username}\n                          </TextWordBreak>\n                        </GridItem>\n                        <GridItem textAlign={'center'}>\n                          <Icon\n                            as={\n                              user.habilitado_en_dxt &&\n                              user.usuario_tango_existe &&\n                              user.habilitado_en_tango === true\n                                ? AccountCheckIcon\n                                : AccountCancelIcon\n                            }\n                            boxSize={6}\n                            color={resolveUserStatusColor(user)}\n                          />\n                        </GridItem>\n                        <GridItem>\n                          <HStack justifyContent={'center'}>\n                            <IconButton\n                              aria-label='Eliminar'\n                              size={'sm'}\n                              colorScheme='red'\n                              onClick={handleDeleteDialog(\n                                user.id,\n                                user.username\n                              )}\n                            >\n                              <Icon as={TrashIcon} boxSize={4} />\n                            </IconButton>\n                            <IconButton\n                              aria-label='Editar'\n                              size={'sm'}\n                              colorScheme='blue'\n                              onClick={handleEdit(user.id)}\n                            >\n                              <Icon as={PencilIcon} boxSize={4} />\n                            </IconButton>\n                          </HStack>\n                        </GridItem>\n                      </Grid>\n                    </Td>\n                  </Tr>\n                ))}\n            </Tbody>\n          </Table>\n        </Box>\n        <Flex sx={{ pt: 4, justifyContent: 'center' }}>\n          <Pagination\n            currentPage={currentPage}\n            totalCount={filteredData.length}\n            pageSize={PageSize}\n            onPageChange={(page: number) => setCurrentPage(page)}\n          />\n        </Flex>\n      </CommonCard>\n    </>\n  );\n};\n", "import _ from \"lodash\";\nimport { useMemo, useState } from \"react\";\n\ninterface TExtended {\n  [key:string]: {}[]\n}\n\nexport function useSearchField<T extends any[] | TExtended>( data: T, fieldsToFilter: string[]): {\n  filteredData: T;\n  handleSearchInputChange: (query?: string) => void;\n  isFiltering: boolean;\n} {\n  const [isFiltering, setIsFiltering] = useState<boolean>(false);\n  const [filteredData, setFilteredData] = useState<T>(data);\n  \n  const handleSearchInputChange = (query?:string) => {\n    setIsFiltering(query != null && query !== '');\n\n    // TODO: typings\n    if (_.isArray(data)) {\n      let filterApplied:Array<T> = [...data];\n\n      if (query != null && Array.isArray(data)) {\n        filterApplied = _.filter(data, obj => {\n          return _.some(fieldsToFilter, prop => {\n            return String(_.get(obj, prop)).toLowerCase().includes(query.toLowerCase());\n          });\n        });\n      }\n\n      setFilteredData(filterApplied as T);\n\n      return;\n    }else if (_.isObject(data)) {\n      const filterApplied:T = {...data};\n\n      if (query != null) {\n        // Iterar sobre cada propiedad del objeto principal\n        _.forEach(data, (array, key) => {\n          // Filtrar cada array de objetos seg\u00FAn las propiedades anidadas y el valor espec\u00EDfico\n          const filteredArray = _.filter(array as TExtended, obj => {\n            return _.some(fieldsToFilter, prop => {\n              return String(_.get(obj, prop)).toLowerCase().includes(query.toLowerCase());\n            });\n          });\n\n          (filterApplied as TExtended)[key] = filteredArray;\n        });\n      }\n\n      setFilteredData(filterApplied as T);\n\n      return;\n    }\n\n    // not an array, not an object\n    setFilteredData(data as T);\n  };\n\n  // const [isFiltering, setIsFiltering] = useState<boolean>(false);\n  // const [query, setQuery] = useState<string | undefined>(undefined);\n\n  // const filteredData = useMemo(() => {\n  //   setIsFiltering(query != null && query !== '');\n\n  //   // TODO: typings\n  //   if (_.isArray(data)) {\n  //     let filterApplied:Array<T> = [...data];\n\n  //     if (query != null && Array.isArray(data)) {\n  //       filterApplied = _.filter(data, obj => {\n  //         return _.some(fieldsToFilter, prop => {\n  //           return String(_.get(obj, prop)).toLowerCase().includes(query.toLowerCase());\n  //         });\n  //       });\n  //     }\n\n  //     return filterApplied as T;\n  //   }else if (_.isObject(data)) {\n  //     const filterApplied:T = {...data};\n\n  //     if (query != null) {\n  //       // Iterar sobre cada propiedad del objeto principal\n  //       _.forEach(data, (array, key) => {\n  //         // Filtrar cada array de objetos seg\u00FAn las propiedades anidadas y el valor espec\u00EDfico\n  //         const filteredArray = _.filter(array as TExtended, obj => {\n  //           return _.some(fieldsToFilter, prop => {\n  //             return String(_.get(obj, prop)).toLowerCase().includes(query.toLowerCase());\n  //           });\n  //         });\n\n  //         (filterApplied as TExtended)[key] = filteredArray;\n  //       });\n  //     }\n\n  //     return filterApplied as T;\n\n  //   }\n\n  //   // not an array, not an object\n  //   return data as T;\n  // }, [query]);\n\n  // const handleSearchInputChange = (query?:string) => {\n  //   setQuery(query);\n  // }\n\n  return { filteredData, handleSearchInputChange, isFiltering };\n}", "import { MutableRefObject, useRef } from 'react';\n\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogOverlay,\n  Button,\n} from '@chakra-ui/react';\n\nimport { CANCEL, DELETE } from 'src/texts/common';\n\ninterface MessageProps {\n  title: string;\n  body: string;\n}\n\ninterface DeleteDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  handleDeletion: () => void;\n  message: MessageProps;\n}\n\nexport const DeleteDialog = ({\n  isOpen,\n  onClose,\n  handleDeletion,\n  message,\n}: DeleteDialogProps) => {\n  const cancelRef: MutableRefObject<any> = useRef();\n\n  return (\n    <AlertDialog\n      isOpen={isOpen}\n      leastDestructiveRef={cancelRef}\n      onClose={onClose}\n      motionPreset='slideInBottom'\n      isCentered\n    >\n      <AlertDialogOverlay>\n        <AlertDialogContent>\n          <AlertDialogHeader fontSize='lg' fontWeight='bold'>\n            {message.title}\n          </AlertDialogHeader>\n\n          <AlertDialogBody>{message.body}</AlertDialogBody>\n\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              {CANCEL}\n            </Button>\n            <Button colorScheme='red' onClick={handleDeletion} ml={3}>\n              {DELETE}\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialogOverlay>\n    </AlertDialog>\n  );\n};\n", "import { useMemo } from 'react';\n\ninterface UsePaginationProps {\n  totalCount: number;\n  pageSize: number;\n  siblingCount?: number;\n  currentPage: number;\n}\n\nexport const DOTS_LEFT = '{left}';\nexport const DOTS_RIGHT = '{right}'\n\nconst range = (start:number, end:number) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({ totalCount, pageSize, siblingCount = 1, currentPage }: UsePaginationProps) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPageCount);\n\n    /*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS_LEFT, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount);\n      return [firstPageIndex, DOTS_RIGHT, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS_LEFT, ...middleRange, DOTS_RIGHT, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n", "import { DOTS_LEFT, DOTS_RIGHT, usePagination } from '#/hooks/usePagination';\n\nimport { Button, HStack, Icon, IconButton, VStack } from '@chakra-ui/react';\n\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon.js';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon.js';\nimport DotsHorizontalIcon from 'mdi-react/DotsHorizontalIcon.js';\n\ninterface PaginationProps {\n  totalCount: number;\n  siblingCount?: number;\n  currentPage: number;\n  pageSize: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination = (props: PaginationProps) => {\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 1,\n    currentPage,\n    pageSize,\n  } = props;\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (!paginationRange) return null;\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length - 1];\n\n  return (\n    <VStack>\n      <HStack spacing={1} wrap={'wrap'} justifyContent={'center'}>\n        {paginationRange.map((pageNumber) => {\n          if (pageNumber === DOTS_LEFT || pageNumber === DOTS_RIGHT) {\n            return (\n              <Icon\n                key={`page-${pageNumber}`}\n                as={DotsHorizontalIcon}\n                boxSize={3}\n              />\n            );\n          }\n\n          return (\n            <Button\n              key={`button-${pageNumber}`}\n              colorScheme={pageNumber === currentPage ? 'blue' : 'gray'}\n              size={{ base: 'sm', md: 'md' }}\n              onClick={() => onPageChange(pageNumber as number)}\n            >\n              {pageNumber}\n            </Button>\n          );\n        })}\n      </HStack>\n      <HStack>\n        <IconButton\n          aria-label='Anterior'\n          size={{ base: 'sm', md: 'md' }}\n          onClick={onPrevious}\n          isDisabled={currentPage === 1}\n        >\n          <Icon as={ChevronLeftIcon} />\n        </IconButton>\n        <IconButton\n          aria-label='Siguiente'\n          size={{ base: 'sm', md: 'md' }}\n          onClick={onNext}\n          isDisabled={currentPage === lastPage}\n        >\n          <Icon as={ChevronRightIcon} />\n        </IconButton>\n      </HStack>\n    </VStack>\n  );\n};\n", "import { useRef, useState } from 'react';\n\nimport {\n  Icon,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputProps,\n  InputRightElement,\n} from '@chakra-ui/react';\n\nimport CloseIcon from 'mdi-react/CloseIcon.js';\nimport MagnifyIcon from 'mdi-react/MagnifyIcon.js';\n\ninterface SearchFieldProps {\n  handleSearchInputChange: (query?: string) => void;\n  inputProps?: InputProps;\n}\n\nexport const SearchField = ({\n  handleSearchInputChange,\n  inputProps,\n}: SearchFieldProps) => {\n  const [searchValue, setSearchValue] = useState<string | null>(null);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const inputChangeRef = useRef<NodeJS.Timeout>();\n\n  const handleSearchReset = () => {\n    setSearchValue(null);\n    handleSearchInputChange();\n\n    if (inputChangeRef.current) clearTimeout(inputChangeRef.current);\n\n    if (inputRef.current) inputRef.current.focus();\n  };\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n\n    if (inputChangeRef.current) clearTimeout(inputChangeRef.current);\n\n    inputChangeRef.current = setTimeout(() => {\n      handleSearchInputChange(e.target.value);\n    }, 1000);\n  };\n\n  return (\n    <InputGroup>\n      <InputLeftElement pointerEvents='none'>\n        <Icon as={MagnifyIcon} boxSize={4} />\n      </InputLeftElement>\n      <Input\n        ref={inputRef}\n        type='text'\n        name='filter'\n        placeholder='Filtrar...'\n        value={searchValue ?? ''}\n        onChange={handleOnChange}\n        {...inputProps}\n      />\n      {searchValue !== '' && searchValue != null ? (\n        <InputRightElement cursor={'pointer'}>\n          <Icon as={CloseIcon} onClick={handleSearchReset} />\n        </InputRightElement>\n      ) : (\n        <InputRightElement></InputRightElement>\n      )}\n    </InputGroup>\n  );\n};\n", "import { Text, TextProps } from '@chakra-ui/react';\n\ninterface TextWordBreakProps {\n  children: React.ReactNode;\n  breakType?: 'break-word' | 'keep-all' | 'normal' | 'unset';\n  props?: TextProps;\n}\n\nexport const TextWordBreak = ({\n  children,\n  breakType,\n  props,\n}: TextWordBreakProps) => {\n  return (\n    <Text\n      {...props}\n      sx={{\n        whiteSpace: 'normal',\n        wordBreak: breakType ?? 'break-all',\n      }}\n    >\n      {children}\n    </Text>\n  );\n};\n", "import { FormListsSettings } from '#/crud_configs/users';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { ApiErrors } from '~/components/ApiErrors';\n\nimport { Loading } from './loading';\nimport { Success } from './success';\n\ninterface FormListsProps {\n  typeSettings: FormListsSettings;\n}\n\nexport const ListsUsers = (props: FormListsProps) => {\n  const { typeSettings } = props;\n\n  const { state, retry } = typeSettings.api.getAll();\n\n  return state.map({\n    loading: (_) => <Loading />,\n\n    error: ({ error }) => (\n      <ApiErrors\n        error={error}\n        retry={retry}\n        cancelAndNavigateTo={URL_SETTINGS_PATH}\n      />\n    ),\n\n    success: (state) => (\n      <Success\n        stateData={state.data}\n        retry={retry}\n        typeSettings={typeSettings}\n      />\n    ),\n  });\n};\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\nimport { dxtPedidoGetArticulosPrintIdsEndpoint } from '!/api/dxt/pedido/endpoints';\nimport { unimplementedApiResponse } from 'src/api-universal';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await dxtPedidoGetArticulosPrintIdsEndpoint.get(request, params);\n}\n\nexport const action = unimplementedApiResponse;\n\n", "import { useNavigate } from '@remix-run/react';\n\nimport { settings } from '#/crud_configs/users';\n\nimport { URL_SETTINGS_VENDORS_PATH } from 'src/config/url_paths';\nimport { SettingsFormHeading } from '~/components/SettingsFormHeading';\n\nimport { Form } from './components';\n\nexport default function Add() {\n  const typeSettings = settings.vendors;\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <SettingsFormHeading\n        title={typeSettings.titles.create}\n        actionButton={{\n          label: 'Cancelar',\n          buttonProps: {\n            colorScheme: 'gray',\n            onClick: () => {\n              navigate(URL_SETTINGS_VENDORS_PATH);\n            },\n          },\n        }}\n      />\n      <Form typeSettings={typeSettings} />\n    </>\n  );\n}\n", "import { useEffect } from 'react';\n\nimport { useAppResources } from '#/app_resources/app_resources';\nimport { FormListsSettings } from '#/crud_configs/users';\nimport { useTangoList } from '#/hooks/useTangoList';\nimport { promiseBasedToast } from '#/utils/promise_based_toast';\n\nimport {\n  Badge,\n  Box,\n  Divider,\n  Grid,\n  GridItem,\n  Heading,\n  HStack,\n  Stack,\n  useToast,\n} from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nimport {\n  FetchStateError,\n  FetchStateLoading,\n  FetchStateSuccess,\n} from '@core/react-hooks/useAxiosFetch';\nimport { useForm } from 'react-hook-form';\nimport { URL_SETTINGS_VENDORS_PATH } from 'src/config/url_paths';\nimport { InsertVendedorInput } from 'src/domain/dxt/inputs';\nimport { PerfilResult } from 'src/domain/tango/results';\nimport { API_TANGO_PERFIL } from 'src/api-client/tango/paths';\nimport { CommonCard } from '~/components/CommonCard';\nimport { ControlledInput } from '~/components/form_elements/ControlledInput';\nimport { ControlledRadio } from '~/components/form_elements/ControlledRadio';\nimport { ControlledSelect } from '~/components/form_elements/ControlledSelect';\nimport { ControlledSwitch } from '~/components/form_elements/ControlledSwitch';\nimport { FormErrors } from '~/components/form_elements/FormErrors';\nimport { InlineError } from '~/components/InlineError';\nimport { SettingsFormsButtons } from '~/components/SettingsFormButtons';\n\nimport { useCustomValidationSchema } from '../validation';\n\ninterface SuccessProps {\n  typeSettings: FormListsSettings;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { typeSettings } = props;\n\n  const app = useAppResources();\n\n  const toast = useToast();\n\n  const { yupValidationSchema, passwordStatus } = useCustomValidationSchema();\n\n  type _InputSchema = yup.InferType<typeof yupValidationSchema>;\n\n  const { state: statePerfiles, result: resultPerfiles } =\n    useTangoList<PerfilResult[]>({\n      url: API_TANGO_PERFIL,\n      fieldsMap: {\n        label: 'name',\n        value: 'id',\n      },\n    });\n\n  const { state: stateRelationship, result: resultRelationship } =\n    typeSettings.api.getRelation();\n\n  const {\n    handleSubmit,\n    control,\n    setError,\n    resetField,\n    watch,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = useForm<_InputSchema>({\n    defaultValues: {\n      habilitado_en_dxt: true,\n      puede_crear_pedido: true,\n      puede_editar_pedido: true,\n      ver_pedidos_cumplidos: true,\n      ver_sin_precio: false,\n      mostrar_mensaje_de_advertencia: false,\n      puede_anular_pedido: false,\n      borrar_pedido_al_anular: false,\n      aprobar_pedido_al_crear: false,\n    },\n    resolver: yupResolver(yupValidationSchema),\n  });\n\n  /*\n   * If the user can't cancel orders, the option to delete the order when canceling it is disabled\n   */\n  const watchPuedeAnularPedido = watch('puede_anular_pedido');\n\n  useEffect(() => {\n    if (watchPuedeAnularPedido === false)\n      resetField('borrar_pedido_al_anular', { defaultValue: false });\n  }, [watchPuedeAnularPedido]);\n\n  const disableForm = isSubmitSuccessful || isSubmitting;\n\n  const onSubmit = async (dataUnsafe: _InputSchema) => {\n    const { password_repeat, ...data } = dataUnsafe;\n\n    // remove unnecessary fields\n    if (data.email === '') delete data.email;\n\n    const input: InsertVendedorInput = data;\n\n    const result = await typeSettings.api.post(input, app);\n\n    await promiseBasedToast({\n      toast,\n      result,\n      messages: {\n        success: { title: 'Usuario creado' },\n        error: { title: 'Ha ocurrido un error' },\n        loading: { title: 'Creando usuario' },\n      },\n    })\n      .then(() => {\n        app.navigate(URL_SETTINGS_VENDORS_PATH);\n      })\n      .catch((e) => {\n        setError('root', { message: e });\n      });\n  };\n\n  return (\n    <form noValidate onSubmit={handleSubmit(onSubmit)}>\n      <Box>\n        <FormErrors errors={errors} />\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Informaci\u00F3n del Vendedor\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledSelect\n                fieldProps={{\n                  name: 'tango_id',\n                  placeholder: typeSettings.tangoRelatedFields?.placeholder,\n                  options: resultRelationship,\n                  noOptionsMessage(obj) {\n                    return typeSettings.tangoRelatedFields?.empty;\n                  },\n                  isSearchable: true,\n                  selectedOptionStyle: 'check',\n                  isLoading: stateRelationship instanceof FetchStateLoading,\n                }}\n                formControlProps={{\n                  isDisabled:\n                    disableForm ||\n                    !(stateRelationship instanceof FetchStateSuccess),\n                }}\n                formControlInnerProps={{\n                  label: typeSettings.tangoRelatedFields?.label,\n                }}\n                control={control}\n              />\n              {stateRelationship instanceof FetchStateError && (\n                <InlineError error={stateRelationship.errorOrNull().error} />\n              )}\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'username',\n                  id: 'username',\n                  type: 'text',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Nombre de Usuario',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'email',\n                  id: 'email',\n                  type: 'text',\n                  inputMode: 'email',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Correo electr\u00F3nico',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'password',\n                  id: 'password',\n                  type: 'password',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Contrase\u00F1a',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'password_repeat',\n                  id: 'password_repeat',\n                  type: 'password',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Confirmaci\u00F3n de Contrase\u00F1a',\n                }}\n                control={control}\n              />\n            </GridItem>\n            {passwordStatus != null && (\n              <GridItem colSpan={{ md: 2 }}>\n                {passwordStatus.tooShort && (\n                  <Badge colorScheme='red'>Contrase\u00F1a muy corta</Badge>\n                )}\n                {passwordStatus.tooLong && (\n                  <Badge colorScheme='red'>Contrase\u00F1a muy larga</Badge>\n                )}\n                {passwordStatus.invalidCharsPresent && (\n                  <Badge colorScheme='red'>Evite caracteres no v\u00E1lidos</Badge>\n                )}\n              </GridItem>\n            )}\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledSelect\n                fieldProps={{\n                  name: 'perfil_facturacion_id',\n                  placeholder: 'Seleccione un perfil',\n                  options: resultPerfiles,\n                  noOptionsMessage(obj) {\n                    return 'No hay perfiles disponibles';\n                  },\n                  isLoading: statePerfiles instanceof FetchStateLoading,\n                  selectedOptionStyle: 'check',\n                }}\n                formControlProps={{\n                  isDisabled:\n                    disableForm ||\n                    !(statePerfiles instanceof FetchStateSuccess),\n                }}\n                formControlInnerProps={{\n                  label: 'Perfil de facturaci\u00F3n',\n                }}\n                control={control}\n              />\n              {statePerfiles instanceof FetchStateError && (\n                <InlineError error={statePerfiles.errorOrNull().error} />\n              )}\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Estado\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledRadio\n                fieldProps={{\n                  name: 'habilitado_en_dxt',\n                  options: [\n                    {\n                      value: true,\n                      label: 'Establecido en Tango',\n                    },\n                    {\n                      value: false,\n                      label: 'Deshabilitado',\n                    },\n                  ],\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                radioProps={{\n                  size: { base: 'sm', sm: 'md' },\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Comunicaci\u00F3n\n              </Heading>\n            </GridItem>\n            <GridItem>\n              <ControlledSwitch\n                fieldProps={{\n                  name: 'mostrar_mensaje_de_advertencia',\n                  id: 'mostrar_mensaje_de_advertencia',\n                }}\n                formControlProps={{\n                  width: 'auto',\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Mostrar mensaje de advertencia',\n                }}\n                control={control}\n              />\n            </GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Pedidos\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Stack spacing={4} direction={{ base: 'column' }}>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_crear_pedido',\n                      id: 'puede_crear_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede crear pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_editar_pedido',\n                      id: 'puede_editar_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede editar pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'puede_anular_pedido',\n                      id: 'puede_anular_pedido',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede anular pedidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'borrar_pedido_al_anular',\n                      id: 'borrar_pedido_al_anular',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Borrar pedido al anular',\n                    }}\n                    control={control}\n                    watch={{\n                      isDisabled: watchPuedeAnularPedido === false,\n                      ...(watchPuedeAnularPedido === false && {\n                        isChecked: false,\n                      }),\n                    }}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'aprobar_pedido_al_crear',\n                      id: 'aprobar_pedido_al_crear',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Los pedidos se aprueban al crearlos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'ver_pedidos_cumplidos',\n                      id: 'ver_pedidos_cumplidos',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede ver los pedidos cumplidos',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n                <HStack spacing={4}>\n                  <ControlledSwitch\n                    fieldProps={{\n                      name: 'ver_sin_precio',\n                      id: 'ver_sin_precio',\n                    }}\n                    formControlProps={{\n                      width: 'auto',\n                      isDisabled: disableForm,\n                    }}\n                    formControlInnerProps={{\n                      label: 'Puede ver art\u00EDculos sin precios',\n                    }}\n                    control={control}\n                  />\n                </HStack>\n              </Stack>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'dia_de_entrega',\n                  id: 'dia_de_entrega',\n                  type: 'number',\n                  inputMode: 'tel',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Tiempo de entrega de pedidos',\n                  helperText: 'Expresado en d\u00EDas',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem></GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <SettingsFormsButtons\n            buttonActionText='Guardar'\n            isLoading={disableForm}\n            buttonCancelUrl={typeSettings.cancelButtonNavigateTo}\n          />\n        </CommonCard>\n      </Box>\n    </form>\n  );\n};\n", "import { useState } from 'react';\n\nimport { yupVOValidation } from 'src/yup/utils';\nimport * as yup from 'yup';\n\nimport { commonValidationSchema } from '#/crud_configs/users/validation';\nimport _ from 'lodash';\nimport { DXTPasswordStatus, dxtPasswordStatus } from 'src/domain/shared/validation';\nimport { VODXTPassword } from 'src/domain/shared/value_objects';\n\nexport const useCustomValidationSchema = () => {\n  const [passwordStatus, setPasswordStatus] = useState<DXTPasswordStatus | null>(null);\n\n  const customValidationSchema = yup\n    .object({\n      password: yup\n        .string()\n        .required('Ingrese una contrase\u00F1a')\n        .test('password', 'Formato de contrase\u00F1a no v\u00E1lido', (v) => {\n          if (v != '' && v != null) {\n            let newPasswordStatus = dxtPasswordStatus(v);\n\n            if (!_.isEqual(passwordStatus, newPasswordStatus))\n              setPasswordStatus(newPasswordStatus);\n\n            return yupVOValidation(VODXTPassword, v);\n          }\n\n          return true;\n        }),\n      password_repeat: yup\n        .string()\n        .required('Repita la contrase\u00F1a')\n        .test(\n          'passwords-match',\n          'Las contrase\u00F1as no coinciden',\n          function (value) {\n            return this.parent.password === value;\n          }\n        ),\n    })\n    .required();\n\n  const yupValidationSchema = commonValidationSchema.concat(customValidationSchema);\n\n  return { yupValidationSchema, passwordStatus };\n};\n", "import { FormListsSettings } from '#/crud_configs/users';\n\nimport { Success } from './success';\n\ninterface FormListsProps {\n  typeSettings: FormListsSettings;\n}\n\nexport const Form = (props: FormListsProps) => {\n  const { typeSettings } = props;\n\n  return <Success typeSettings={typeSettings} />;\n};\n", "import { useDXTApiFetch } from '#/hooks/useDXTApiFetch';\n\nimport { URL_PEDIDOS_PATH } from 'src/config/url_paths';\nimport { AuxiliaresResult } from 'src/domain/tango/results';\nimport { API_TANGO_AUXILIARES } from 'src/api-client/tango/paths';\nimport { ApiErrors } from '~/components/ApiErrors';\n\nimport { Loading } from './components/loading';\nimport { Success } from './components/success';\n\nexport default function OrdersAdd() {\n  const { state, retry } = useDXTApiFetch<AuxiliaresResult>({\n    url: API_TANGO_AUXILIARES,\n    silent: true,\n  });\n\n  return state.map({\n    loading: (_) => <Loading />,\n\n    error: ({ error }) => (\n      <ApiErrors\n        error={error}\n        retry={retry}\n        cancelAndNavigateTo={URL_PEDIDOS_PATH}\n      />\n    ),\n\n    success: (state) => <Success auxData={state.data} />,\n  });\n}\n", "export const Loading = () => {\n  return <>Loading Skeletons here</>;\n};\n", "import { useRef, useState } from 'react';\n\nimport { useSearchField } from '#/hooks/useSearchField';\n\nimport { Box } from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nimport _ from 'lodash';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { ArticulosAgrupadosResult } from 'src/domain/articulo/results';\nimport { AuxiliaresResult } from 'src/domain/tango/results';\nimport { fakeData } from 'src/fake_data/edit_order.data';\nimport { FormErrors } from '~/components/form_elements/FormErrors';\nimport { OrdersAddNav } from '~/components/orders/OrdersAddNav';\n\nimport { yupValidationSchema } from '../validation';\nimport { OrderInfo } from './OrderInfo';\nimport { ProductsTable } from './ProductsTable';\n\ninterface SuccessProps {\n  auxData: AuxiliaresResult;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { auxData } = props;\n  const [filteredData, setFilteredData] = useState<ArticulosAgrupadosResult>(\n    fakeData.articulos\n  );\n\n  type _InputSchema = yup.InferType<typeof yupValidationSchema>;\n\n  const quantities: Record<string, string | number> = {};\n  const prices: Record<string, number> = {};\n\n  // load default values for quantities and prices\n  _.forOwn(fakeData.articulos, (articulos) => {\n    articulos.forEach((product) => {\n      prices[product.id] = product.precio;\n      quantities[product.id] = '';\n    });\n  });\n\n  const formMethods = useForm<_InputSchema>({\n    defaultValues: {\n      alta: '',\n      entrega: '',\n      bonificacion: '',\n      transporte: 0,\n      condicion_venta: 0,\n      deposito: 0,\n      talonario: 0,\n      tipo_de_asiento: 0,\n      quantities,\n    },\n    resolver: yupResolver(yupValidationSchema),\n  });\n\n  const {\n    handleSubmit,\n    control,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = formMethods;\n\n  const disableForm = isSubmitSuccessful || isSubmitting;\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  };\n\n  const {\n    filteredData: filteredProducts,\n    handleSearchInputChange,\n    isFiltering,\n  } = useSearchField(fakeData.articulos, ['codigo', 'nombre']);\n\n  return (\n    <>\n      <FormProvider {...formMethods}>\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <OrdersAddNav\n            isDisabled={disableForm}\n            handleSearchInputChange={handleSearchInputChange}\n          />\n          <Box sx={{ my: 4 }}>\n            <FormErrors errors={errors} />\n            <OrderInfo\n              cabecera={fakeData.cabecera}\n              auxData={auxData}\n              disableForm={disableForm}\n              prices={prices}\n            />\n            <ProductsTable\n              disableForm={disableForm}\n              unfilteredProducts={fakeData.articulos}\n              filteredProducts={filteredProducts}\n              isFiltering={isFiltering}\n            />\n          </Box>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n", "import { PedidoEditResult } from \"src/domain/pedido/results\";\n\n\nlet idArticulo = 1;\nexport const fakeData: PedidoEditResult = {\n  cabecera: {\n    id: 1,\n    cliente: 'Nombre de cliente',\n    bonificacion: 30,\n  },\n\n  auxiliares: {\n    asientos: [\n      { id: 1, tipo: \"11\", name: 'Contado' },\n      { id: 2, tipo: \"1\", name: 'Cuenta Corriente' },\n    ],\n    // perfiles: [\n    //   { id: 1, name: 'Contado' },\n    //   { id: 2, name: 'Cuenta Corriente' },\n    // ],\n    transportes: [\n      { id: 1, name: 'Contado' },\n      { id: 2, name: 'Cuenta Corriente' },\n    ],\n    depositos: [\n      { code: \"1\", name: 'Contado' },\n      { code: \"2\", name: 'Cuenta Corriente' },\n    ],\n    condiciones: [\n      { id: 1, name: 'Contado' },\n      { id: 2, name: 'Cuenta Corriente' },\n    ],\n    talonarios: [\n      { code: 1, name: 'Contado' },\n      { code: 2, name: 'Cuenta Corriente' },\n    ],\n  },\n\n  articulos: {\n    latex: [\n      { id: idArticulo++, codigo: '01 08 14', nombre: 'LATEX ECON. CISNE INT. 4 L.', precio: 5414.7, },\n      { id: idArticulo++, codigo: '01 08 16', nombre: 'LATEX ECON. CISNE INT. 10 L.', precio: 11264.77, },\n      { id: idArticulo++, codigo: '01 08 17', nombre: 'LATEX ECON. CISNE INT. 20 L.', precio: 21948.73, },\n      { id: idArticulo++, codigo: '01 10 14', nombre: 'LATEX YAPEYU INT./EXT. 4 L.', precio: 7383.17, },\n      { id: idArticulo++, codigo: '01 10 16', nombre: 'LATEX YAPEYU INT./EXT. 10 L.', precio: 15646.97, },\n      { id: idArticulo++, codigo: '01 10 17', nombre: 'LATEX YAPEYU INT./EXT. 20 L.', precio: 30590.02, },\n      { id: idArticulo++, codigo: '01 10 34', nombre: 'LATEX YAPEYU INTERIOR 4 L.', precio: 6197.29, },\n      { id: idArticulo++, codigo: '01 10 36', nombre: 'LATEX YAPEYU INTERIOR 10 L.', precio: 13492.89, },\n      { id: idArticulo++, codigo: '01 10 37', nombre: 'LATEX YAPEYU INTERIOR 20 L.', precio: 26327.13, },\n      { id: idArticulo++, codigo: '01 11 24', nombre: 'LAT INTERIOR LAVABLE X 4', precio: 13361.34, },\n      { id: idArticulo++, codigo: '01 11 26', nombre: 'LAT INTERIOR LAVABLE X 10', precio: 31249.09, },\n      { id: idArticulo++, codigo: '01 11 27', nombre: 'LAT INTERIOR LAVABLE X 20', precio: 59568.56, },\n      { id: idArticulo++, codigo: '01 12 13', nombre: 'LATEX FRENTE SORBALOK 1 L.', precio: 4702.86, },\n      { id: idArticulo++, codigo: '01 12 14', nombre: 'LATEX FRENTE SORBALOK 4 L.', precio: 15822.8, },\n      { id: idArticulo++, codigo: '01 12 16', nombre: 'LATEX FRENTE SORBALOK 10 L.', precio: 37533.92, },\n      { id: idArticulo++, codigo: '01 12 17', nombre: 'LATEX FRENTE SORBALOK 20 L.', precio: 73925.88, },\n      { id: idArticulo++, codigo: '01 12 313', nombre: 'LAT FTE PREMIUM TORINO 1 L.', precio: 6461.21, },\n      { id: idArticulo++, codigo: '01 12 314', nombre: 'LAT FTE PREMIUM TORINO 4 L.', precio: 19601.95, },\n      { id: idArticulo++, codigo: '01 12 316', nombre: 'LAT FTE PREMIUM TORINO 10 L.', precio: 46544.19, },\n      { id: idArticulo++, codigo: '01 12 353', nombre: 'LAT FTE TORINO BASE D 0.94 L.', precio: 5669.52, },\n      { id: idArticulo++, codigo: '01 12 354', nombre: 'LAT FTE TORINO BASE D 3.76 L.', precio: 17228.61, },\n      { id: idArticulo++, codigo: '01 12 356', nombre: 'LAT FTE TORINO BASE D 9.4 L.', precio: 40962.49, },\n      { id: idArticulo++, codigo: '01 12 357', nombre: 'LAT FTE TORINO BASE D 18.80 L.', precio: 80694.2, },\n      { id: idArticulo++, codigo: '01 13 3', nombre: 'LATEX BASE P PROF I/E 1.25 KG', precio: 63.78, },\n      { id: idArticulo++, codigo: '01 13 4', nombre: 'LATEX BASE P PROF I/E 5 KG', precio: 181.72, },\n      { id: idArticulo++, codigo: '01 13 6', nombre: 'LATEX BASE P PROF I/E 12.5 KG', precio: 415.88, },\n      { id: idArticulo++, codigo: '01 13 7', nombre: 'LATEX BASE P PROF I/E 25 KG', precio: 818.05, },\n      { id: idArticulo++, codigo: '01 13 03', nombre: 'LATEX BASE T PROF I/E 1.25 KG', precio: 63.78, },\n      { id: idArticulo++, codigo: '01 13 04', nombre: 'LATEX BASE T PROF I/E 5 KG', precio: 181.72, },\n      { id: idArticulo++, codigo: '01 13 06', nombre: 'LATEX BASE T PROF I/E 12.5 KG', precio: 415.88, },\n      { id: idArticulo++, codigo: '01 13 07', nombre: 'LATEX BASE T PROF I/E 25 KG', precio: 818.05, },\n      { id: idArticulo++, codigo: '01 13 13', nombre: 'LATEX PROFESIONAL I/E 1 L.', precio: 3246.62, },\n      { id: idArticulo++, codigo: '01 13 14', nombre: 'LATEX PROFESIONAL I/E 4 L.', precio: 9227.36, },\n      { id: idArticulo++, codigo: '01 13 16', nombre: 'LATEX PROFESIONAL I/E 10 L.', precio: 21102.99, },\n      { id: idArticulo++, codigo: '01 13 17', nombre: 'LATEX PROFESIONAL I/E 20 L.', precio: 41522.5, },\n      { id: idArticulo++, codigo: '01 13 114', nombre: 'LATEX EXTERIOR 4 L.', precio: 10416.14, },\n      { id: idArticulo++, codigo: '01 13 116', nombre: 'LATEX EXTERIOR 10 L.', precio: 23865.64, },\n      { id: idArticulo++, codigo: '01 14 13', nombre: 'LATEX LACRIL INTERIOR 1 L.', precio: 2680.93, },\n      { id: idArticulo++, codigo: '01 14 14', nombre: 'LATEX LACRIL INTERIOR 4 L.', precio: 7120.28, },\n      { id: idArticulo++, codigo: '01 14 16', nombre: 'LATEX LACRIL INTERIOR 10 L.', precio: 15866.49, },\n      { id: idArticulo++, codigo: '01 14 17', nombre: 'LATEX LACRIL INTERIOR 20 L.', precio: 31073.21, },\n      { id: idArticulo++, codigo: '01 16 13', nombre: 'LATEX CIELORRASO 1 L.', precio: 3780.01, },\n      { id: idArticulo++, codigo: '01 16 14', nombre: 'LATEX CIELORRASO 4 L.', precio: 11207.8, },\n      { id: idArticulo++, codigo: '01 16 16', nombre: 'LATEX CIELORRASO 10 L.', precio: 25403.46, },\n      { id: idArticulo++, codigo: '01 16 17', nombre: 'LATEX CIELORRASO 20 L.', precio: 48258.3, },\n      { id: idArticulo++, codigo: '01 17 03', nombre: 'LATEX ANTITERMICA 1 L.', precio: 5801.9, },\n      { id: idArticulo++, codigo: '01 17 04', nombre: 'LATEX ANTITERMICA 4 L.', precio: 17404.71, },\n      { id: idArticulo++, codigo: '01 17 06', nombre: 'LATEX ANTITERMICA 10 L.', precio: 41314.17, },\n      { id: idArticulo++, codigo: '01 17 07', nombre: 'LATEX ANTITERMICA 20 L.', precio: 81308.85, },\n      { id: idArticulo++, codigo: '01 15* 3 31', nombre: 'LATEX FRENTE CEREZA 1 L. (CEREZA 1)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 3 32', nombre: 'LATEX FRENTE MANZANA 1 L. (VDE MANZANA)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 3 33', nombre: 'LATEX FRENTE AMBAR 1 L. (AM AMBAR)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 3 34', nombre: 'LATEX FRENTE ZAFIRO 1 L. (AZ ZAFIRO)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 3 35', nombre: 'LATEX FRENTE MOSTAZA 1 L. (MOSTAZA)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 3 36', nombre: 'LATEX FRENTE JADE 1 L. (VDE JADE)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 3 37', nombre: 'LATEX FRENTE SALMON 1 L. (SALMON)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 3 38', nombre: 'LATEX FRENTE OXIDO 1 L. (RJ OXIDO)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 3 39', nombre: 'LATEX FRENTE CARDO 1 L. (CARDO)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 3 40', nombre: 'LATEX FRENTE EBANO 1 L. (EBANO)', precio: 5849.89, },\n      { id: idArticulo++, codigo: '01 15* 4 31', nombre: 'LATEX FRENTE CEREZA 4 L. (CEREZA)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 4 32', nombre: 'LATEX FRENTE MANZANA 4 L. (VDE MANZANA)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 4 33', nombre: 'LATEX FRENTE AMBAR 4 L. (AM AMBAR)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 4 34', nombre: 'LATEX FRENTE ZAFIRO 4 L. (AZ ZAFIRO)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 4 35', nombre: 'LATEX FRENTE MOSTAZA 4 L. (MOSTAZA)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 4 36', nombre: 'LATEX FRENTE JADE 4 L. (VDE JADE)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 4 37', nombre: 'LATEX FRENTE SALMON 4 L. (SALMON)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 4 38', nombre: 'LATEX FRENTE OXIDO 4 L. (RJ OXIDO)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 4 39', nombre: 'LATEX FRENTE CARDO 4 L. (CARDO)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 4 40', nombre: 'LATEX FRENTE EBANO 4 L. (NEGRO)', precio: 19531.55, },\n      { id: idArticulo++, codigo: '01 15* 6 25', nombre: 'LATEX FRENTE MAPIN 10 L. (AZUL MAPIN)', precio: 50956.78, },\n      { id: idArticulo++, codigo: '01 15* 6 27', nombre: 'LATEX FRENTE TORCAZA 10 L. (GRIS TORCAZA)', precio: 50956.78, },\n      { id: idArticulo++, codigo: '01 15* 6 31', nombre: 'LATEX FRENTE CEREZA 10 L. (CEREZA)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 15* 6 32', nombre: 'LATEX FRENTE MANZANA 10 L. (VDE MANZANA)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 15* 6 33', nombre: 'LATEX FRENTE AMBAR 10 L. (AM AMBAR)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 15* 6 34', nombre: 'LATEX FRENTE ZAFIRO 10 L. (AZ ZAFIRO)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 15* 6 35', nombre: 'LATEX FRENTE MOSTAZA 10 L (MOSTAZA)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 15* 6 36', nombre: 'LATEX FRENTE JADE 10 L. (VDE JADE)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 15* 6 37', nombre: 'LATEX FRENTE SALMON 10 L. (SALMON)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 15* 6 38', nombre: 'LATEX FRENTE OXIDO 10 L. (RJ OXIDO)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 15* 6 39', nombre: 'LATEX FRENTE CARDO 10 L. (CARDO)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 15* 6 40', nombre: 'LATEX FRENTE EBANO 10 L. (NEGRO)', precio: 46315.74, },\n      { id: idArticulo++, codigo: '01 17* 3 01', nombre: 'LAT. PROF PRADO 1 L. (s\u00F3lo para INTERIOR)', precio: 5511.37, },\n      { id: idArticulo++, codigo: '01 17* 3 02', nombre: 'LAT. PROF OCEANO 1 L. (s\u00F3lo para INTERIOR)', precio: 5511.37, },\n      { id: idArticulo++, codigo: '01 17* 3 03', nombre: 'LAT. PROF CANTARO 1 L. (s\u00F3lo para INTERIOR)', precio: 5511.37, },\n      { id: idArticulo++, codigo: '01 17* 3 04', nombre: 'LAT. PROF CIRUELA 1 L. (s\u00F3lo para INTERIOR)', precio: 5511.37, },\n      { id: idArticulo++, codigo: '01 17* 3 05', nombre: 'LAT. PROF TRIGAL 1 L. (s\u00F3lo para INTERIOR)', precio: 5511.37, },\n      { id: idArticulo++, codigo: '01 17* 3 06', nombre: 'LAT. PROF CEIBO 1 L. (s\u00F3lo para INTERIOR)', precio: 5511.37, },\n      { id: idArticulo++, codigo: '01 17* 4 01', nombre: 'LAT. PROF PRADO 4 L. (s\u00F3lo para INTERIOR)', precio: 15663.65, },\n      { id: idArticulo++, codigo: '01 17* 4 02', nombre: 'LAT. PROF OCEANO 4 L. (s\u00F3lo para INTERIOR)', precio: 15663.65, },\n      { id: idArticulo++, codigo: '01 17* 4 03', nombre: 'LAT. PROF CANTARO 4 L. (s\u00F3lo para INTERIOR)', precio: 15663.65, },\n      { id: idArticulo++, codigo: '01 17* 4 04', nombre: 'LAT. PROF CIRUELA 4 L. (s\u00F3lo para INTERIOR)', precio: 15663.65, },\n      { id: idArticulo++, codigo: '01 17* 4 05', nombre: 'LAT. PROF TRIGAL 4 L. (s\u00F3lo para INTERIOR)', precio: 15663.65, },\n      { id: idArticulo++, codigo: '01 17* 4 06', nombre: 'LAT. PROF CEIBO 4 L. (s\u00F3lo para INTERIOR)', precio: 15663.65, },\n      { id: idArticulo++, codigo: '01 18 13', nombre: 'IMP TRANSITAB/TORINO TECHO1 Kg (BLANCO)', precio: 5186.02, },\n      { id: idArticulo++, codigo: '01 18 14', nombre: 'IMP TRANSITAB/TORINO TECHO4 Kg (BLANCO)', precio: 15514.35, },\n      { id: idArticulo++, codigo: '01 18 16', nombre: 'IMP TRANSITAB/TORINO TECH10 Kg (BLANCO)', precio: 36874.78, },\n      { id: idArticulo++, codigo: '01 18 17', nombre: 'IMP TRANSITAB/TORINO TECH20 Kg (BLANCO)', precio: 72826.69, },\n      { id: idArticulo++, codigo: '01 18 414', nombre: 'IMP TRBLE FIBRADO/TORINO 4 Kg (BLANCO)', precio: 17009.2, },\n      { id: idArticulo++, codigo: '01 18 416', nombre: 'IMP TRBLE FIBRADO/TORINO 10 Kg (BLANCO)', precio: 40654.8, },\n      { id: idArticulo++, codigo: '01 18 417', nombre: 'IMP TRBLE FIBRADO/TORINO 20 Kg (BLANCO)', precio: 80781.48, },\n      { id: idArticulo++, codigo: '01 18 1013', nombre: 'IMP. MEMBRANA GOL 1 Kg (BLANCO)', precio: 4052.54, },\n      { id: idArticulo++, codigo: '01 18 1014', nombre: 'IMP. MEMBRANA GOL 4 Kg (BLANCO)', precio: 10727.22, },\n      { id: idArticulo++, codigo: '01 18 1016', nombre: 'IMP. MEMBRANA GOL 10 Kg (BLANCO)', precio: 24966.19, },\n      { id: idArticulo++, codigo: '01 18 1017', nombre: 'IMP. MEMBRANA GOL 20 Kg (BLANCO)', precio: 48994.45, },\n      { id: idArticulo++, codigo: '01 18 1083', nombre: 'IMP. MEMBR GOL TEJA 1 Kg (TEJA)', precio: 4052.54, },\n      { id: idArticulo++, codigo: '01 18 1084', nombre: 'IMP. MEMBR GOL TEJA 4 Kg (TEJA)', precio: 10727.22, },\n      { id: idArticulo++, codigo: '01 18 1086', nombre: 'IMP. MEMBR GOL TEJA 10 Kg (TEJA)', precio: 24966.19, },\n      { id: idArticulo++, codigo: '01 18 1087', nombre: 'IMP. MEMBR GOL TEJA 20 Kg (TEJA)', precio: 48994.45, },\n      { id: idArticulo++, codigo: '01 19 3', nombre: 'IMP. TAPAGOTERAS TRANSP. 1 L.', precio: 4931.11, },\n      { id: idArticulo++, codigo: '01 19 4', nombre: 'IMP. TAPAGOTERAS TRANSP. 4 L.', precio: 14311.16, },\n      { id: idArticulo++, codigo: '01 19 16', nombre: 'IMP. TAPAGOTERAS TRANSP. 10 L.', precio: 33551.82, },\n      { id: idArticulo++, codigo: '01 19 17', nombre: 'IMP. TAPAGOTERAS TRANSP. 20 L.', precio: 63865.0, },\n      { id: idArticulo++, codigo: '01 19 104', nombre: 'IMP. TORINO TONO CERAMICO 4 L', precio: 15742.3, },\n      { id: idArticulo++, codigo: '01 19 106', nombre: 'IMP. TORINO LADRILLOS 10 L.', precio: 36907.19, },\n      { id: idArticulo++, codigo: '01 50 1', nombre: 'FIJ. LATIZADOR 1/4 L.', precio: 966.77, },\n      { id: idArticulo++, codigo: '01 51 3', nombre: 'FIJ. SELLADOR 1 L.', precio: 3142.25, },\n      { id: idArticulo++, codigo: '01 51 4', nombre: 'FIJ. SELLADOR 4 L.', precio: 10008.46, },\n      { id: idArticulo++, codigo: '01 51 6', nombre: 'FIJ. SELLADOR 10 L.', precio: 20450.79, },\n      { id: idArticulo++, codigo: '01 51 7', nombre: 'FIJ. SELLADOR 20 L.', precio: 37758.68, },\n      { id: idArticulo++, codigo: '01 53 3', nombre: 'ENDUIDO PLAST. INTERIOR 1200 G', precio: 2223.82, },\n      { id: idArticulo++, codigo: '01 53 4', nombre: 'ENDUIDO PLAST. INTERIOR 4 L.', precio: 8074.07, },\n      { id: idArticulo++, codigo: '01 53 6', nombre: 'ENDUIDO PLAST. INTERIOR 10 L.', precio: 18033.8, },\n    ],\n    esmaltes: [\n      { id: idArticulo++, codigo: '01 22 211', nombre: 'ESM. ADRIATICO 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 212', nombre: 'ESM. ADRIATICO 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 213', nombre: 'ESM. ADRIATICO 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 214', nombre: 'ESM. ADRIATICO 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 217', nombre: 'ESM. ADRIATICO 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 21 501', nombre: 'ESM. ALUMINIO 1/4 L.', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 21 502', nombre: 'ESM. ALUMINIO 1/2 L.', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 21 503', nombre: 'ESM. ALUMINIO 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 21 504', nombre: 'ESM. ALUMINIO 4 L.', precio: 26027.31 },\n      { id: idArticulo++, codigo: '01 21 507', nombre: 'ESM. ALUMINIO 20 L.', precio: 124277.72 },\n      { id: idArticulo++, codigo: '01 21 41', nombre: 'ESM. AMARILLO CLARO 1/4 L.', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 21 42', nombre: 'ESM. AMARILLO CLARO 1/2 L.', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 21 43', nombre: 'ESM. AMARILLO CLARO 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 21 44', nombre: 'ESM. AMARILLO CLARO 4 L.', precio: 26027.31 },\n      { id: idArticulo++, codigo: '01 21 47', nombre: 'ESM. AMARILLO CLARO 20 L.', precio: 124277.72 },\n      { id: idArticulo++, codigo: '01 21 51', nombre: 'ESM. AMARILLO MEDIAN0 1/4L', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 21 52', nombre: 'ESM. AMARILLO MEDIANO 1/2L', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 21 53', nombre: 'ESM. AMARILLO MEDIANO 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 21 54', nombre: 'ESM. AMARILLO MEDIANO 4 L.', precio: 26027.31 },\n      { id: idArticulo++, codigo: '01 21 57', nombre: 'ESM. AMARILLO MEDIANO 20 L.', precio: 124277.72 },\n      { id: idArticulo++, codigo: '01 22 311', nombre: 'ESM. AZULEJO 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 312', nombre: 'ESM. AZULEJO 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 313', nombre: 'ESM. AZULEJO 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 314', nombre: 'ESM. AZULEJO 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 317', nombre: 'ESM. AZULEJO 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 111', nombre: 'ESM. BEIGE 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 112', nombre: 'ESM. BEIGE 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 113', nombre: 'ESM. BEIGE 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 114', nombre: 'ESM. BEIGE 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 117', nombre: 'ESM. BEIGE 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 21 161', nombre: 'ESM. BERMELLON 1/4 L.', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 21 162', nombre: 'ESM. BERMELLON 1/2 L.', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 21 163', nombre: 'ESM. BERMELLON 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 21 164', nombre: 'ESM. BERMELLON 4 L.', precio: 26027.31 },\n      { id: idArticulo++, codigo: '01 21 167', nombre: 'ESM. BERMELLON 20 L.', precio: 124277.72 },\n      { id: idArticulo++, codigo: '01 23 011', nombre: 'ESM. BLANCO 1/4 L.', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 23 012', nombre: 'ESM. BLANCO 1/2 L.', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 23 013', nombre: 'ESM. BLANCO 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 23 014', nombre: 'ESM. BLANCO 4 L.', precio: 26027.31 },\n      { id: idArticulo++, codigo: '01 23 017', nombre: 'ESM. BLANCO 20 L.', precio: 124277.72 },\n      { id: idArticulo++, codigo: '01 23 211', nombre: 'ESM. BLANCO MATE 1/4 L.', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 23 212', nombre: 'ESM. BLANCO MATE 1/2 L.', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 23 213', nombre: 'ESM. BLANCO MATE 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 23 214', nombre: 'ESM. BLANCO MATE 4 L.', precio: 26027.31 },\n      { id: idArticulo++, codigo: '01 23 217', nombre: 'ESM. BLANCO MATE 20 L.', precio: 124277.72 },\n      { id: idArticulo++, codigo: '01 23 511', nombre: 'ESM. BLANCO SATINADO 1/4 L', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 23 512', nombre: 'ESM. BLANCO SATINADO 1/2 L', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 23 513', nombre: 'ESM. BLANCO SATINADO 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 23 514', nombre: 'ESM. BLANCO SATINADO 4 L.', precio: 26027.31 },\n      { id: idArticulo++, codigo: '01 23 517', nombre: 'ESM. BLANCO SATINADO 20 L.', precio: 124277.72 },\n      { id: idArticulo++, codigo: '01 22 121', nombre: 'ESM. CAFE 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 122', nombre: 'ESM. CAFE 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 123', nombre: 'ESM. CAFE 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 124', nombre: 'ESM. CAFE 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 127', nombre: 'ESM. CAFE 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 264', nombre: 'ESM. CATERPILLAR 4 L.', precio: 27319.9 },\n      { id: idArticulo++, codigo: '01 22 151', nombre: 'ESM. CEDRO 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 152', nombre: 'ESM. CEDRO 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 153', nombre: 'ESM. CEDRO 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 154', nombre: 'ESM. CEDRO 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 157', nombre: 'ESM. CEDRO 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 341', nombre: 'ESM. CELESTE 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 342', nombre: 'ESM. CELESTE 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 343', nombre: 'ESM. CELESTE 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 344', nombre: 'ESM. CELESTE 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 347', nombre: 'ESM. CELESTE 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 21 900', nombre: 'ESM. COLOR N/STAND. (X CANT.)', precio: 5999.43 },\n      { id: idArticulo++, codigo: '01 21 901', nombre: 'ESM. COLOR N/STAND. 1/4 L.', precio: 2792.01 },\n      { id: idArticulo++, codigo: '01 21 902', nombre: 'ESM. COLOR N/STAND. 1/2 L.', precio: 4701.15 },\n      { id: idArticulo++, codigo: '01 21 903', nombre: 'ESM. COLOR N/STAND. 1 L.', precio: 7462.44 },\n      { id: idArticulo++, codigo: '01 21 904', nombre: 'ESM. COLOR N/STAND. 4 L.', precio: 28630.53 },\n      { id: idArticulo++, codigo: '01 21 907', nombre: 'ESM. COLOR N/STAND. 20 L.', precio: 136705.88 },\n      { id: idArticulo++, codigo: '01 22 21', nombre: 'ESM. CREMA 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 22', nombre: 'ESM. CREMA 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 23', nombre: 'ESM. CREMA 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 24', nombre: 'ESM. CREMA 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 27', nombre: 'ESM. CREMA 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 21 804', nombre: 'ESM. FIAT IVECO 4 L.', precio: 27319.9 },\n      { id: idArticulo++, codigo: '01 22 804', nombre: 'ESM. GRIS ESCANIA 4 L.', precio: 27319.9 },\n      { id: idArticulo++, codigo: '01 22 251', nombre: 'ESM. GRIS ESPACIAL 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 252', nombre: 'ESM. GRIS ESPACIAL 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 253', nombre: 'ESM. GRIS ESPACIAL 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 254', nombre: 'ESM. GRIS ESPACIAL 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 257', nombre: 'ESM. GRIS ESPACIAL 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 21 271', nombre: 'ESM. GRIS HIELO 1/4 L.', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 21 272', nombre: 'ESM. GRIS HIELO 1/2 L.', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 21 273', nombre: 'ESM. GRIS HIELO 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 21 274', nombre: 'ESM. GRIS HIELO 4 L.', precio: 26027.31 },\n      { id: idArticulo++, codigo: '01 21 277', nombre: 'ESM. GRIS HIELO 20 L.', precio: 124277.72 },\n      { id: idArticulo++, codigo: '01 22 101', nombre: 'ESM. GRIS LONDRES 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 102', nombre: 'ESM. GRIS LONDRES 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 103', nombre: 'ESM. GRIS LONDRES 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 104', nombre: 'ESM. GRIS LONDRES 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 107', nombre: 'ESM. GRIS LONDRES 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 71', nombre: 'ESM. GRIS PERLA 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 72', nombre: 'ESM. GRIS PERLA 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 73', nombre: 'ESM. GRIS PERLA 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 74', nombre: 'ESM. GRIS PERLA 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 77', nombre: 'ESM. GRIS PERLA 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 21 354', nombre: 'ESM. HELVETICA 4 L.', precio: 27319.9 },\n      { id: idArticulo++, codigo: '01 22 321', nombre: 'ESM. MARFIL 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 322', nombre: 'ESM. MARFIL 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 323', nombre: 'ESM. MARFIL 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 324', nombre: 'ESM. MARFIL 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 327', nombre: 'ESM. MARFIL 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 181', nombre: 'ESM. MARRON 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 182', nombre: 'ESM. MARRON 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 183', nombre: 'ESM. MARRON 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 184', nombre: 'ESM. MARRON 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 187', nombre: 'ESM. MARRON 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 21 141', nombre: 'ESM. NARANJA 1/4 L.', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 21 142', nombre: 'ESM. NARANJA 1/2 L.', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 21 143', nombre: 'ESM. NARANJA 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 21 144', nombre: 'ESM. NARANJA 4 L.', precio: 26027.31 },\n      { id: idArticulo++, codigo: '01 21 147', nombre: 'ESM. NARANJA 20 L.', precio: 124277.72 },\n      { id: idArticulo++, codigo: '01 22 134', nombre: 'ESM. NARANJA FIAT 4 L.', precio: 27319.9 },\n      { id: idArticulo++, codigo: '01 22 201', nombre: 'ESM. NEGRO 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 202', nombre: 'ESM. NEGRO 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 203', nombre: 'ESM. NEGRO 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 204', nombre: 'ESM. NEGRO 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 207', nombre: 'ESM. NEGRO 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 701', nombre: 'ESM. NEGRO MATE 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 702', nombre: 'ESM. NEGRO MATE 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 703', nombre: 'ESM. NEGRO MATE 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 704', nombre: 'ESM. NEGRO MATE 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 707', nombre: 'ESM. NEGRO MATE 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 711', nombre: 'ESM. NEGRO SATINADO 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 712', nombre: 'ESM. NEGRO SATINADO 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 713', nombre: 'ESM. NEGRO SATINADO 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 714', nombre: 'ESM. NEGRO SATINADO 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 717', nombre: 'ESM. NEGRO SATINADO 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 221', nombre: 'ESM. TRAFUL 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 222', nombre: 'ESM. TRAFUL 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 223', nombre: 'ESM. TRAFUL 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 224', nombre: 'ESM. TRAFUL 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 227', nombre: 'ESM. TRAFUL 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 371', nombre: 'ESM. VERDE CLARO 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 372', nombre: 'ESM. VERDE CLARO 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 373', nombre: 'ESM. VERDE CLARO 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 374', nombre: 'ESM. VERDE CLARO 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 377', nombre: 'ESM. VERDE CLARO 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 241', nombre: 'ESM. VERDE INGLES 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 242', nombre: 'ESM. VERDE INGLES 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 243', nombre: 'ESM. VERDE INGLES 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 244', nombre: 'ESM. VERDE INGLES 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 247', nombre: 'ESM. VERDE INGLES 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 22 304', nombre: 'ESM. VERDE JOHN DEERE 4 L.', precio: 27319.9 },\n      { id: idArticulo++, codigo: '01 22 81', nombre: 'ESM. VERDE NOCHE 1/4 L.', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 22 82', nombre: 'ESM. VERDE NOCHE 1/2 L.', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 22 83', nombre: 'ESM. VERDE NOCHE 1 L.', precio: 5537.7 },\n      { id: idArticulo++, codigo: '01 22 84', nombre: 'ESM. VERDE NOCHE 4 L.', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 22 87', nombre: 'ESM. VERDE NOCHE 20 L.', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 21 171', nombre: 'ESM. VIOLETA 1/4 L.', precio: 2538.32 },\n      { id: idArticulo++, codigo: '01 21 172', nombre: 'ESM. VIOLETA 1/2 L.', precio: 4153.55 },\n      { id: idArticulo++, codigo: '01 21 173', nombre: 'ESM. VIOLETA 1 L.', precio: 6784.25 },\n      { id: idArticulo++, codigo: '01 21 174', nombre: 'ESM. VIOLETA 4 L.', precio: 26027.31 },\n    ],\n    \"esmaltes sinteticos especiales\": [\n      { id: idArticulo++, codigo: '01 28* 201 01', nombre: 'ESM. PIZARRON 1/4 L. (NEGRO)', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 28* 201 02', nombre: 'ESM. PIZARRON 1/4 L. (VERDE)', precio: 2030.18 },\n      { id: idArticulo++, codigo: '01 28* 202 01', nombre: 'ESM. PIZARRON 1/2 L. (NEGRO)', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 28* 202 02', nombre: 'ESM. PIZARRON 1/2 L. (VERDE)', precio: 3230.26 },\n      { id: idArticulo++, codigo: '01 28* 203 01', nombre: 'ESM. PIZARRON 1 L. (NEGRO)', precio: 5537.70 },\n      { id: idArticulo++, codigo: '01 28* 203 02', nombre: 'ESM. PIZARRON 1 L. (VERDE)', precio: 5537.70 },\n      { id: idArticulo++, codigo: '01 28* 204 01', nombre: 'ESM. PIZARRON 4 L. (NEGRO)', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 28* 204 02', nombre: 'ESM. PIZARRON 4 L. (VERDE)', precio: 18967.15 },\n      { id: idArticulo++, codigo: '01 28* 207 01', nombre: 'ESM. PIZARRON 20 L. (NEGRO)', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 28* 207 02', nombre: 'ESM. PIZARRON 20 L. (VERDE)', precio: 94235.42 },\n      { id: idArticulo++, codigo: '01 24 4', nombre: 'ESM. ELECT. GRUPO 1/3 4 L.', precio: 28612.41 },\n      { id: idArticulo++, codigo: '01 24 7', nombre: 'ESM. ELECT. GRUPO 1/3 20 L.', precio: 138861.01 },\n      { id: idArticulo++, codigo: '01 24 14', nombre: 'ESM. ELECT. GRUPO 2 4 L.', precio: 20859.09 },\n      { id: idArticulo++, codigo: '01 24 17', nombre: 'ESM. ELECT. GRUPO 2 20 L.', precio: 105818.56 },\n      { id: idArticulo++, codigo: '01 25 4', nombre: 'ESM. SEC. RAP. BLANCO 4 L', precio: 31842.67 },\n      { id: idArticulo++, codigo: '01 25 7', nombre: 'ESM. SEC. RAP. BLANCO 20 L', precio: 152890.38 },\n      { id: idArticulo++, codigo: '01 25 14', nombre: 'ESM. SEC. RAP. GRUPO 2 4 L.', precio: 31842.67 },\n      { id: idArticulo++, codigo: '01 25 17', nombre: 'ESM. SEC. RAP. GRUPO 2 20 L.', precio: 152890.38 },\n    ],\n    pinturas_especiales: [\n      { id: idArticulo++, codigo: '01 29* 3 01', nombre: 'EPOXI (A+B) = 1.500 KG. (BLANCO)', precio: 26074.27 }, \n      { id: idArticulo++, codigo: '01 29* 4 01', nombre: 'EPOXI (A+B)-1x4 /1x1= 2.700 KG (BLANCO)', precio: 46610.05 }, \n      { id: idArticulo++, codigo: '01 29* 7 01', nombre: 'EPOXI (A+B)-1x20/1x4=13.000 KG (BLANCO)', precio: 211683.23 }, \n      { id: idArticulo++, codigo: '01 49 21', nombre: 'TRIPLE - BLANCO 1/4 L.', precio: 2768.93 }, \n      { id: idArticulo++, codigo: '01 49 22', nombre: 'TRIPLE - BLANCO 1/2 L.', precio: 4568.79 }, \n      { id: idArticulo++, codigo: '01 49 23', nombre: 'TRIPLE - BLANCO 1 L.', precio: 7752.36 }, \n      { id: idArticulo++, codigo: '01 49 24', nombre: 'TRIPLE - BLANCO 4 L.', precio: 27919.71 }, \n      { id: idArticulo++, codigo: '01 49 27', nombre: 'TRIPLE - BLANCO 20 L.', precio: 134200.32 }, \n      { id: idArticulo++, codigo: '01 49 41', nombre: 'TRIPLE - BERMELLON 1/4 L.', precio: 2768.93 }, \n      { id: idArticulo++, codigo: '01 49 42', nombre: 'TRIPLE - BERMELLON 1/2 L.', precio: 4568.79 }, \n      { id: idArticulo++, codigo: '01 49 43', nombre: 'TRIPLE - BERMELLON 1 L.', precio: 7752.36 }, \n      { id: idArticulo++, codigo: '01 49 44', nombre: 'TRIPLE - BERMELLON 4 L.', precio: 27919.71 }, \n      { id: idArticulo++, codigo: '01 49 47', nombre: 'TRIPLE - BERMELLON 20 L.', precio: 134200.32 }, \n      { id: idArticulo++, codigo: '01 49 71', nombre: 'TRIPLE - VERDE 1/4 L.', precio: 2768.93 }, \n      { id: idArticulo++, codigo: '01 49 72', nombre: 'TRIPLE - VERDE 1/2 L.', precio: 4568.79 }, \n      { id: idArticulo++, codigo: '01 49 73', nombre: 'TRIPLE - VERDE 1 L.', precio: 7752.36 }, \n      { id: idArticulo++, codigo: '01 49 74', nombre: 'TRIPLE - VERDE 4 L.', precio: 27919.71 }, \n      { id: idArticulo++, codigo: '01 49 77', nombre: 'TRIPLE - VERDE 20 L.', precio: 134200.32 }, \n      { id: idArticulo++, codigo: '01 49 101', nombre: 'TRIPLE - NEGRO 1/4 L.', precio: 2768.93 }, \n      { id: idArticulo++, codigo: '01 49 102', nombre: 'TRIPLE - NEGRO 1/2 L.', precio: 4568.79 }, \n      { id: idArticulo++, codigo: '01 49 103', nombre: 'TRIPLE - NEGRO 1 L.', precio: 7752.36 }, \n      { id: idArticulo++, codigo: '01 49 104', nombre: 'TRIPLE - NEGRO 4 L.', precio: 27919.71 }, \n      { id: idArticulo++, codigo: '01 49 107', nombre: 'TRIPLE - NEGRO 20 L.', precio: 134200.32 }, \n      { id: idArticulo++, codigo: '01 49 171', nombre: 'TRIPLE - GRIS CLARO 1/4 L.', precio: 2768.93 }, \n      { id: idArticulo++, codigo: '01 49 172', nombre: 'TRIPLE - GRIS CLARO 1/2 L.', precio: 4568.79 }, \n      { id: idArticulo++, codigo: '01 49 173', nombre: 'TRIPLE - GRIS CLARO 1 L.', precio: 7752.36 }, \n      { id: idArticulo++, codigo: '01 49 174', nombre: 'TRIPLE - GRIS CLARO 4 L.', precio: 27919.71 }, \n      { id: idArticulo++, codigo: '01 49 177', nombre: 'TRIPLE - GRIS CLARO 20 L.', precio: 134200.32 }, \n      { id: idArticulo++, codigo: '01 49 201', nombre: 'TRIPLE - AZUL 1/4 L.', precio: 2768.93 }, \n      { id: idArticulo++, codigo: '01 49 202', nombre: 'TRIPLE - AZUL 1/2 L.', precio: 4568.79 }, \n      { id: idArticulo++, codigo: '01 49 203', nombre: 'TRIPLE - AZUL 1 L.', precio: 7752.36 }, \n      { id: idArticulo++, codigo: '01 49 204', nombre: 'TRIPLE - AZUL 4 L.', precio: 27919.71 }, \n      { id: idArticulo++, codigo: '01 49 207', nombre: 'TRIPLE - AZUL 20 L.', precio: 134200.32 }, \n      { id: idArticulo++, codigo: '01 49 304', nombre: 'TRIPLE - N/STANDARD 4 L.', precio: 27919.71 }, \n      { id: idArticulo++, codigo: '01 49 307', nombre: 'TRIPLE - N/STANDARD 20 L.', precio: 134200.32 }, \n      { id: idArticulo++, codigo: '01 49 1101', nombre: 'TRIPLE - NEGRO SAT 1/4 L.', precio: 2131.67 }, \n      { id: idArticulo++, codigo: '01 49 1102', nombre: 'TRIPLE - NEGRO SAT 1/2 L.', precio: 3392.07 }, \n      { id: idArticulo++, codigo: '01 49 1103', nombre: 'TRIPLE - NEGRO SAT 1 L.', precio: 5814.46 }, \n      { id: idArticulo++, codigo: '01 49 1104', nombre: 'TRIPLE - NEGRO SAT 4 L.', precio: 19915.43 }, \n      { id: idArticulo++, codigo: '01 58 13', nombre: 'ESM. P/PISO GRUPO 2 - 1 L. (CEDRO)', precio: 5537.70 }, \n      { id: idArticulo++, codigo: '01 58 14', nombre: 'ESM. P/PISO GRUPO 2 - 4 L. (CEDRO)', precio: 18967.15 }, \n      { id: idArticulo++, codigo: '01 58 17', nombre: 'ESM. P/PISO GRUPO 2 - 20 L. (CEDRO)', precio: 94235.42 }, \n      { id: idArticulo++, codigo: '01 60* 14 01', nombre: 'CCL. PAVIMENTO BL 4 L. (BLANCA)', precio: 28104.77 }, \n      { id: idArticulo++, codigo: '01 60* 14 02', nombre: 'CCL. PAVIMENTO AM 4 L. (AMARILLA)', precio: 37103.16 }, \n      { id: idArticulo++, codigo: '01 60* 17 01', nombre: 'CCL. PAVIMENTO BL 20 L. (BLANCA)', precio: 135584.22 }, \n      { id: idArticulo++, codigo: '01 60* 17 02', nombre: 'CCL. PAVIMENTO AM 20 L. (AMARILLA)', precio: 178926.63 }, \n      { id: idArticulo++, codigo: '01 61* 14 01', nombre: 'LAT PAVIMENTO AL AGUA BL 4 L. (BLANCA)', precio: 22016.72 }, \n      { id: idArticulo++, codigo: '01 61* 14 02', nombre: 'LAT PAVIMENTO AL AGUA AM 4 L. (AMARILLA)', precio: 22016.72 }, \n      { id: idArticulo++, codigo: '01 61* 16 01', nombre: 'LAT PAVIMENTO AL AGUA BL 10 L. (BLANCA)', precio: 52383.08 }, \n      { id: idArticulo++, codigo: '01 61* 16 02', nombre: 'LAT PAVIMENTO AL AGUA AM 10 L. (AMARILLA)', precio: 52383.08 }, \n      { id: idArticulo++, codigo: '01 61* 17 01', nombre: 'LAT PAVIMENTO AL AGUA BL 20 L. (BLANCA)', precio: 100404.67 }, \n      { id: idArticulo++, codigo: '01 61* 17 02', nombre: 'LAT PAVIMENTO AL AGUA AM 20 L. (AMARILLA)', precio: 100404.67 }, \n      { id: idArticulo++, codigo: '01 62* 14 01', nombre: 'CCL. PILETA CELESTE 4 L. (CELESTE)', precio: 24458.75 }, \n      { id: idArticulo++, codigo: '01 62* 14 02', nombre: 'CCL. PILETA BLANCA 4 L. (BLANCA)', precio: 24458.75 }, \n      { id: idArticulo++, codigo: '01 62* 17 01', nombre: 'CCL. PILETA CELESTE 20 L. (CELESTE)', precio: 115971.39 }, \n      { id: idArticulo++, codigo: '01 62* 17 02', nombre: 'CCL. PILETA BLANCA 20 L. (BLANCA)', precio: 115971.39 }, \n      { id: idArticulo++, codigo: '01 63* 03 01', nombre: 'LATEX CANCHA OXIDO 1 L. (OXIDO)', precio: 5994.90 }, \n      { id: idArticulo++, codigo: '01 63* 03 02', nombre: 'LATEX CANCHA JADE 1 L. (JADE)', precio: 5994.90 }, \n      { id: idArticulo++, codigo: '01 63* 03 03', nombre: 'LATEX CANCHA ZAFIRO 1 L. (ZAFIRO)', precio: 5994.90 }, \n      { id: idArticulo++, codigo: '01 63* 04 01', nombre: 'LATEX CANCHA OXIDO 4 L. (OXIDO)', precio: 20015.21 }, \n      { id: idArticulo++, codigo: '01 63* 04 02', nombre: 'LATEX CANCHA JADE 4 L. (JADE)', precio: 20015.21 }, \n      { id: idArticulo++, codigo: '01 63* 04 03', nombre: 'LATEX CANCHA ZAFIRO 4 L. (ZAFIRO)', precio: 20015.21 }, \n      { id: idArticulo++, codigo: '01 63* 06 01', nombre: 'LATEX CANCHA OXIDO 10 L. (OXIDO)', precio: 47621.18 }, \n      { id: idArticulo++, codigo: '01 63* 06 02', nombre: 'LATEX CANCHA JADE 10 L. (JADE)', precio: 47621.18 }, \n      { id: idArticulo++, codigo: '01 63* 06 03', nombre: 'LATEX CANCHA ZAFIRO 10 L. (ZAFIRO)', precio: 47621.18 }, \n      { id: idArticulo++, codigo: '01 64 4 01', nombre: 'PILETA AL AGUA 4 L. (CELESTE)', precio: 21360.40 }, \n      { id: idArticulo++, codigo: '01 64 4 02', nombre: 'PILETA AL AGUA 4 L. (BLANCO)', precio: 21360.40 }, \n      { id: idArticulo++, codigo: '01 64 6 01', nombre: 'PILETA AL AGUA 10 L. (CELESTE)', precio: 50675.67 }, \n      { id: idArticulo++, codigo: '01 64 6 02', nombre: 'PILETA AL AGUA 10 L. (BLANCO)', precio: 50675.67 }, \n      { id: idArticulo++, codigo: '01 64 7 01', nombre: 'PILETA AL AGUA 20 L. (CELESTE)', precio: 99831.08 }, \n      { id: idArticulo++, codigo: '01 64 7 02', nombre: 'PILETA AL AGUA 20 L. (BLANCO)', precio: 99831.08 }, \n    ],\n    linea_madera: [\n      { id: idArticulo++, codigo: '01 30 1', nombre: 'BARNIZ INT./EXT 1/4 L.', precio: 1973.22 },\n      { id: idArticulo++, codigo: '01 30 2', nombre: 'BARNIZ INT./EXT 1/2 L.', precio: 2911.00 },\n      { id: idArticulo++, codigo: '01 30 3', nombre: 'BARNIZ INT./EXT 1 L.', precio: 4983.72 },\n      { id: idArticulo++, codigo: '01 30 4', nombre: 'BARNIZ INT./EXT 4 L.', precio: 16134.77 },\n      { id: idArticulo++, codigo: '01 30 7', nombre: 'BARNIZ INT./EXT 20 L.', precio: 73813.14 },\n      { id: idArticulo++, codigo: '01 30 8', nombre: 'BARNIZ INT./EXT 200 L.', precio: 721448.67 },\n      { id: idArticulo++, codigo: '01 31 1', nombre: 'BARNIZ MARINO 1/4 L.', precio: 2132.03 },\n      { id: idArticulo++, codigo: '01 31 2', nombre: 'BARNIZ MARINO 1/2 L.', precio: 3249.27 },\n      { id: idArticulo++, codigo: '01 31 3', nombre: 'BARNIZ MARINO 1 L.', precio: 5635.04 },\n      { id: idArticulo++, codigo: '01 31 4', nombre: 'BARNIZ MARINO 4 L.', precio: 18579.45 },\n      { id: idArticulo++, codigo: '01 31 7', nombre: 'BARNIZ MARINO 20 L.', precio: 86094.49 },\n      { id: idArticulo++, codigo: '01 34* 2 01', nombre: 'IMP. LASUR 1/2 L. CEDRO (CEDRO)', precio: 3834.37 },\n      { id: idArticulo++, codigo: '01 34* 2 02', nombre: 'IMP LASUR NATURAL 1/2 L (NATURAL)', precio: 3834.37 },\n      { id: idArticulo++, codigo: '01 34* 2 03', nombre: 'IMP. LASUR 1/2 L. CRISTAL (CRISTAL)', precio: 3834.37 },\n      { id: idArticulo++, codigo: '01 34* 2 04', nombre: 'IMP. LASUR CAOBA 1/2 L. (CAOBA)', precio: 3834.37 },\n      { id: idArticulo++, codigo: '01 34* 2 05', nombre: 'IMP. LASUR 1/2 L. NOGAL (NOGAL)', precio: 3834.37 },\n      { id: idArticulo++, codigo: '01 34* 2 06', nombre: 'IMP LASUR ALGARROBO 1/2 L (ALGARROBO)', precio: 3834.37 },\n      { id: idArticulo++, codigo: '01 34* 3 01', nombre: 'IMP. LASUR CEDRO 1 L. (CEDRO)', precio: 6562.63 },\n      { id: idArticulo++, codigo: '01 34* 3 02', nombre: 'IMP. LASUR NATUR 1 L. (NATURAL)', precio: 6562.63 },\n      { id: idArticulo++, codigo: '01 34* 3 03', nombre: 'IMP. LASUR CRIST 1 L. (CRISTAL)', precio: 6562.63 },\n      { id: idArticulo++, codigo: '01 34* 3 04', nombre: 'IMP. LASUR CAOBA 1 L. (CAOBA)', precio: 6562.63 },\n      { id: idArticulo++, codigo: '01 34* 3 05', nombre: 'IMP. LASUR NOGAL 1 L. (NOGAL)', precio: 6562.63 },\n      { id: idArticulo++, codigo: '01 34* 3 06', nombre: 'IMP. LASUR ALGAR 1 L. (ALGARROBO)', precio: 6562.63 },\n      { id: idArticulo++, codigo: '01 34* 4 01', nombre: 'IMP. LASUR CEDRO 4 L. (CEDRO)', precio: 22893.53 },\n      { id: idArticulo++, codigo: '01 34* 4 02', nombre: 'IMP. LASUR NATUR 4 L. (NATURAL)', precio: 22893.53 },\n      { id: idArticulo++, codigo: '01 34* 4 03', nombre: 'IMP. LASUR CRIST 4 L. (CRISTAL)', precio: 22893.53 },\n      { id: idArticulo++, codigo: '01 34* 4 04', nombre: 'IMP. LASUR CAOBA 4 L. (CAOBA)', precio: 22893.53 },\n      { id: idArticulo++, codigo: '01 34* 4 05', nombre: 'IMP. LASUR NOGAL 4 L. (NOGAL)', precio: 22893.53 },\n      { id: idArticulo++, codigo: '01 34* 4 06', nombre: 'IMP. LASUR ALGAR 4 L. (ALGARROBO)', precio: 22893.53 },\n      { id: idArticulo++, codigo: '01 34* 7 01', nombre: 'IMP. LASUR CEDRO 20 L. (CEDRO)', precio: 108646.92 },\n      { id: idArticulo++, codigo: '01 34* 7 02', nombre: 'IMP. LASUR NATUR 20 L. (NATURAL)', precio: 108646.92 },\n      { id: idArticulo++, codigo: '01 34* 7 03', nombre: 'IMP. LASUR CRIST 20 L. (CRISTAL)', precio: 108646.92 },\n      { id: idArticulo++, codigo: '01 34* 7 04', nombre: 'IMP. LASUR CAOBA 20 L. (CAOBA)', precio: 108646.92 },\n      { id: idArticulo++, codigo: '01 34* 7 05', nombre: 'IMP. LASUR NOGAL 20 L. (NOGAL)', precio: 108646.92 },\n      { id: idArticulo++, codigo: '01 34* 7 06', nombre: 'IMP. LASUR ALGAR 20 L. (ALGARROBO)', precio: 108646.92 },\n      { id: idArticulo++, codigo: '01 35 3', nombre: 'SELLADOR PARA MADERA 1 L.', precio: 11016.02 },\n      { id: idArticulo++, codigo: '01 35 4', nombre: 'SELLADOR PARA MADERA 4 L.', precio: 36600.43 },\n      { id: idArticulo++, codigo: '01 35 7', nombre: 'SELLADOR PARA MADERA 20 L.', precio: 173712.19 },\n      { id: idArticulo++, codigo: '01 35 8', nombre: 'SELLADOR PARA MADERA 200 L.', precio: 1594679.75 },\n      { id: idArticulo++, codigo: '01 36 12', nombre: 'LASUR BRILLANTE CEDRO X 1/2', precio: 4931.39 },\n      { id: idArticulo++, codigo: '01 36 13', nombre: 'LASUR BRILLANTE CEDRO 1 L', precio: 8439.85 },\n      { id: idArticulo++, codigo: '01 36 14', nombre: 'LASUR BRILLANTE CEDRO 4 L', precio: 29442.82 },\n      { id: idArticulo++, codigo: '01 36 42', nombre: 'LASUR BRILLANTE CAOBA X 1/2', precio: 4931.39 },\n      { id: idArticulo++, codigo: '01 36 43', nombre: 'LASUR BRILLANTE CAOBA X 1', precio: 8439.85 },\n      { id: idArticulo++, codigo: '01 36 44', nombre: 'LASUR BRILLANTE CAOBA X 4', precio: 29442.82 },\n      { id: idArticulo++, codigo: '01 36 62', nombre: 'LASUR BRILLANTE ALGARROBO 1/2', precio: 4931.39 },\n      { id: idArticulo++, codigo: '01 36 63', nombre: 'LASUR BRILLANTE ALGARROBO 1', precio: 8439.85 },\n      { id: idArticulo++, codigo: '01 36 64', nombre: 'LASUR BRILLANTE ALGARROBO 4', precio: 29442.82 },\n      { id: idArticulo++, codigo: '01 37 3', nombre: 'LACA POLIURET .1 COMP. 1 L.', precio: 10558.91 },\n      { id: idArticulo++, codigo: '01 37 4', nombre: 'LACA POLIURET .1 COMP. 4 L.', precio: 38986.13 },\n      { id: idArticulo++, codigo: '01 39 4', nombre: 'PINTURA RURAL 4 L. (BLANCA)', precio: 23397.02 },\n      { id: idArticulo++, codigo: '01 39 20', nombre: 'PINTURA RURAL 20 L. (BLANCA)', precio: 111863.89 },\n      { id: idArticulo++, codigo: '01 40 511', nombre: 'FDO. BLANCO P/MADERA 1/4 L.', precio: 2122.96 },\n      { id: idArticulo++, codigo: '01 40 512', nombre: 'FDO. BLANCO P/MADERA 1/2 L.', precio: 3369.09 },\n      { id: idArticulo++, codigo: '01 40 513', nombre: 'FDO. BLANCO P/MADERA 1 L.', precio: 5860.67 },\n      { id: idArticulo++, codigo: '01 40 514', nombre: 'FDO. BLANCO P/MADERA 4 L.', precio: 19936.38 },\n      { id: idArticulo++, codigo: '01 40 517', nombre: 'FDO. BLANCO P/MADERA 20 L.', precio: 93312.67 },\n    ],\n    antioxidos_convertidores: [\n      { id: idArticulo++, codigo: '01 41 151', nombre: 'FDO. ANTIOXIDO 1/4 L.', precio: 1938.27 }, \n      { id: idArticulo++, codigo: '01 41 152', nombre: 'FDO. ANTIOXIDO 1/2 L.', precio: 2953.09 }, \n      { id: idArticulo++, codigo: '01 41 153', nombre: 'FDO. ANTIOXIDO 1 L.', precio: 4891.87 }, \n      { id: idArticulo++, codigo: '01 41 154', nombre: 'FDO. ANTIOXIDO 4 L.', precio: 15875.06 }, \n      { id: idArticulo++, codigo: '01 41 157', nombre: 'FDO. ANTIOXIDO 20 L.', precio: 72499.27 }, \n      { id: idArticulo++, codigo: '01 42* 131 01', nombre: 'FONDO ANTIOXIDO VERDE 1/4 L. (VERDE)', precio: 1984.96 }, \n      { id: idArticulo++, codigo: '01 42* 131 03', nombre: 'FONDO ANTIOXIDO NEGRO 1/4 L. (NEGRO)', precio: 1984.96 }, \n      { id: idArticulo++, codigo: '01 42* 131 05', nombre: 'FONDO ANTIOXIDO GRIS 1/4 L. (GRIS)', precio: 1984.96 }, \n      { id: idArticulo++, codigo: '01 42* 132 01', nombre: 'FONDO ANTIOXIDO VERDE 1/2 L. (VERDE)', precio: 3230.26 }, \n      { id: idArticulo++, codigo: '01 42* 132 03', nombre: 'FONDO ANTIOXIDO NEGRO 1/2 L. (NEGRO)', precio: 3230.26 }, \n      { id: idArticulo++, codigo: '01 42* 132 05', nombre: 'FONDO ANTIOXIDO GRIS 1/2 L. (GRIS)', precio: 3230.26 }, \n      { id: idArticulo++, codigo: '01 42* 133 01', nombre: 'FONDO ANTIOXIDO VERDE 1 L. (VERDE)', precio: 5076.12 }, \n      { id: idArticulo++, codigo: '01 42* 133 03', nombre: 'FONDO ANTIOXIDO NEGRO 1 L. (NEGRO)', precio: 5076.12 }, \n      { id: idArticulo++, codigo: '01 42* 133 05', nombre: 'FONDO ANTIOXIDO GRIS 1 L. (GRIS)', precio: 5076.12 }, \n      { id: idArticulo++, codigo: '01 42* 154 01', nombre: 'FONDO ANTIOXIDO VERDE 4 L. (VERDE)', precio: 16474.98 }, \n      { id: idArticulo++, codigo: '01 42* 154 03', nombre: 'FONDO ANTIOXIDO NEGRO 4 L. (NEGRO)', precio: 16474.98 }, \n      { id: idArticulo++, codigo: '01 42* 154 05', nombre: 'FONDO ANTIOXIDO GRIS 4 L. (GRIS)', precio: 16474.98 }, \n      { id: idArticulo++, codigo: '01 42* 157 01', nombre: 'FONDO ANTIOXIDO VERDE 20 L. (VERDE)', precio: 77345.30 }, \n      { id: idArticulo++, codigo: '01 42* 157 03', nombre: 'FONDO ANTIOXIDO NEGRO 20 L. (NEGRO)', precio: 77345.30 }, \n      { id: idArticulo++, codigo: '01 42* 157 05', nombre: 'FONDO ANTIOXIDO GRIS 20 L. (GRIS)', precio: 77345.30 }, \n      { id: idArticulo++, codigo: '01 42* 157 06', nombre: 'FONDO ANTIOXIDO COLOR 20 L. (NO STD)', precio: 77345.30 }, \n      { id: idArticulo++, codigo: '01 42* 131 11', nombre: 'FONDO ANTIOXIDO BLANCO 1/4 L. (BLANCO)', precio: 1984.96 }, \n      { id: idArticulo++, codigo: '01 42* 132 11', nombre: 'FONDO ANTIOXIDO BLANCO 1/2 L. (BLANCO)', precio: 3230.26 }, \n      { id: idArticulo++, codigo: '01 42* 133 11', nombre: 'FONDO ANTIOXIDO BLANCO 1 L. (BLANCO)', precio: 5076.12 }, \n      { id: idArticulo++, codigo: '01 42* 154 11', nombre: 'FONDO ANTIOXIDO BLANCO 4 L. (BLANCO)', precio: 16474.98 }, \n      { id: idArticulo++, codigo: '01 42* 157 11', nombre: 'FONDO ANTIOXIDO BLANCO 20 L. (BLANCO)', precio: 77345.30 }, \n      { id: idArticulo++, codigo: '01 43 21', nombre: 'FDO. ANTIOXIDO ALUMINIO 1/4 L.', precio: 2492.17 }, \n      { id: idArticulo++, codigo: '01 43 22', nombre: 'FDO. ANTIOXIDO ALUMINIO 1/2 L.', precio: 4014.66 }, \n      { id: idArticulo++, codigo: '01 43 23', nombre: 'FDO. ANTIOXIDO ALUMINIO 1 L.', precio: 7244.79 }, \n      { id: idArticulo++, codigo: '01 43 24', nombre: 'FDO. ANTIOXIDO ALUMINIO 4 L.', precio: 25058.93 }, \n      { id: idArticulo++, codigo: '01 43 27', nombre: 'FDO. ANTIOXIDO ALUMINIO 20 L.', precio: 117263.64 }, \n      { id: idArticulo++, codigo: '01 47* 151 01', nombre: 'FDO. CONV. ESTAB. 1/4 L. (COLORADO)', precio: 2584.79 }, \n      { id: idArticulo++, codigo: '01 47* 151 02', nombre: 'FDO. CONV. ESTAB. 1/4 L. (BLANCO)', precio: 3184.80 }, \n      { id: idArticulo++, codigo: '01 47* 151 03', nombre: 'FDO. CONV. ESTAB. 1/4 L. (NEGRO)', precio: 3184.80 }, \n      { id: idArticulo++, codigo: '01 47* 152 01', nombre: 'FDO. CONV. ESTAB. 1/2 L. (COLORADO)', precio: 4246.24 }, \n      { id: idArticulo++, codigo: '01 47* 152 02', nombre: 'FDO. CONV. ESTAB. 1/2 L. (BLANCO)', precio: 5122.21 }, \n      { id: idArticulo++, codigo: '01 47* 152 03', nombre: 'FDO. CONV. ESTAB. 1/2 L. (NEGRO)', precio: 5122.21 }, \n      { id: idArticulo++, codigo: '01 47* 153 01', nombre: 'FDO. CONV. ESTAB. 1 L. (COLORADO)', precio: 6830.17 }, \n      { id: idArticulo++, codigo: '01 47* 153 02', nombre: 'FDO. CONV. ESTAB. 1 L. (BLANCO)', precio: 8399.19 }, \n      { id: idArticulo++, codigo: '01 47* 153 03', nombre: 'FDO. CONV. ESTAB. 1 L. (NEGRO)', precio: 8399.19 }, \n      { id: idArticulo++, codigo: '01 47* 154 01', nombre: 'FDO. CONV. ESTAB. 4 L. (COLORADO)', precio: 22658.70 }, \n      { id: idArticulo++, codigo: '01 47* 154 02', nombre: 'FDO. CONV. ESTAB. 4 L. (BLANCO)', precio: 32303.97 }, \n      { id: idArticulo++, codigo: '01 47* 154 03', nombre: 'FDO. CONV. ESTAB. 4 L. (NEGRO)', precio: 32303.97 }, \n      { id: idArticulo++, codigo: '01 47* 157 01', nombre: 'FDO. CONV. ESTAB. 20 L. (COLORADO)', precio: 96173.64 }, \n      { id: idArticulo++, codigo: '01 47* 157 02', nombre: 'FDO. CONV. ESTAB. 20 L. (BLANCO)', precio: 146383.34 }, \n      { id: idArticulo++, codigo: '01 47* 157 03', nombre: 'FDO. CONV. ESTAB. 20 L. (NEGRO)', precio: 146383.34 }, \n      { id: idArticulo++, codigo: '01 48 4', nombre: 'FDO. CONV. EST. ELECT. 4 L', precio: 21597.26 }, \n      { id: idArticulo++, codigo: '01 48 7', nombre: 'FDO. CONV. EST. ELECT. 20 L.', precio: 93588.87 }, \n    ],\n    _: [\n      {\n        id: idArticulo++,\n        codigo: '01 21 178',\n        nombre: 'VARIOS 1',\n        precio: 15,\n      },\n      {\n        id: idArticulo++,\n        codigo: '01 21 179',\n        nombre: 'VARIOS 2',\n        precio: 20,\n      },\n    ],\n  },\n};\n", "import { useNavigate } from '@remix-run/react';\n\nimport { Box, Flex, HStack, useColorModeValue } from '@chakra-ui/react';\n\nimport CloseIcon from 'mdi-react/CloseIcon.js';\nimport FormatListCheckboxIcon from 'mdi-react/FormatListCheckboxIcon.js';\nimport PlusIcon from 'mdi-react/PlusIcon.js';\nimport { URL_PEDIDOS_PATH } from 'src/config/url_paths';\n\nimport { ResponsiveIconButton } from '../ResponsiveIconButton';\nimport { SearchField } from '../SearchField';\n\ninterface OrdersAddNavProps {\n  isDisabled: boolean;\n  handleSearchInputChange: (query?: string) => void;\n}\n\nexport const OrdersAddNav = (props: OrdersAddNavProps) => {\n  const navigate = useNavigate();\n\n  const { isDisabled, ...searchFieldProps } = props;\n\n  return (\n    <>\n      <Box\n        bg={useColorModeValue('white', 'blue.900')}\n        sx={{\n          px: 4,\n          position: 'sticky',\n          zIndex: 1000,\n          top: 0,\n        }}\n      >\n        <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n          <HStack spacing={{ base: 2, sm: 3 }} alignItems={'center'}>\n            <ResponsiveIconButton\n              icon={PlusIcon}\n              text={'Crear'}\n              sharedProps={{\n                size: 'sm',\n                fontWeight: '400',\n                colorScheme: 'green',\n                type: 'submit',\n                isDisabled,\n              }}\n              iconProps={{\n                boxSize: {\n                  base: 5,\n                  md: 4,\n                },\n              }}\n            />\n            <ResponsiveIconButton\n              icon={CloseIcon}\n              text={'Cancelar'}\n              sharedProps={{\n                size: 'sm',\n                fontWeight: '400',\n                colorScheme: 'red',\n                isDisabled,\n                onClick: () => {\n                  navigate(URL_PEDIDOS_PATH);\n                },\n              }}\n              iconProps={{\n                boxSize: {\n                  base: 5,\n                  md: 4,\n                },\n              }}\n            />\n            <ResponsiveIconButton\n              icon={FormatListCheckboxIcon}\n              text={'Ver resumen'}\n              sharedProps={{\n                size: 'sm',\n                fontWeight: '400',\n                colorScheme: 'blue',\n                isDisabled,\n              }}\n              iconProps={{\n                boxSize: {\n                  base: 5,\n                  md: 4,\n                },\n              }}\n            />\n          </HStack>\n          <Flex\n            alignItems={'center'}\n            sx={{\n              ms: { base: 2, sm: 3 },\n            }}\n          >\n            <SearchField {...searchFieldProps} />\n          </Flex>\n        </Flex>\n      </Box>\n    </>\n  );\n};\n", "import {\n  Button,\n  type ButtonProps,\n  Icon,\n  IconButton,\n  type IconButtonProps,\n  IconProps,\n  useBreakpointValue,\n} from '@chakra-ui/react';\n\nimport { MdiReactIconComponentType } from 'mdi-react';\n\ninterface ResponsiveIconButtonProps {\n  text: string;\n  icon?: MdiReactIconComponentType;\n  iconProps?: IconProps;\n  iconButtonProps?: Omit<IconButtonProps, 'aria-label'>;\n  buttonProps?: ButtonProps;\n  sharedProps?: ButtonProps | IconButtonProps;\n}\n\nexport const ResponsiveIconButton = (props: ResponsiveIconButtonProps) => {\n  const { text, icon, iconProps, sharedProps, buttonProps, iconButtonProps } =\n    props;\n\n  const buttonInjection = useBreakpointValue({\n    base: (\n      <IconButton\n        aria-label={text}\n        {...sharedProps}\n        {...iconButtonProps}\n        icon={<Icon as={icon} {...iconProps} />}\n      />\n    ),\n    md: (\n      <Button\n        {...sharedProps}\n        {...buttonProps}\n        {...(icon && { leftIcon: <Icon as={icon} {...iconProps} /> })}\n      >\n        {text}\n      </Button>\n    ),\n  });\n\n  return <>{buttonInjection}</>;\n};\n", "import * as yup from 'yup';\n\nexport const yupValidationSchema = yup\n  .object({\n    alta: yup.string().required('Ingrese fecha de Alta'),\n    entrega: yup.string().required(''),\n    condicion_venta: yup\n      .number()\n      .required('Ingrese un puerto')\n      .typeError('Ingrese un n\u00FAmero de puerto v\u00E1lido'),\n    tipo_de_asiento: yup\n      .number()\n      .required('Ingrese un puerto')\n      .typeError('Ingrese un n\u00FAmero de puerto v\u00E1lido'),\n    transporte: yup\n      .number()\n      .required('Ingrese un puerto')\n      .typeError('Ingrese un n\u00FAmero de puerto v\u00E1lido'),\n    talonario: yup\n      .number()\n      .required('Ingrese un puerto')\n      .typeError('Ingrese un n\u00FAmero de puerto v\u00E1lido'),\n    deposito: yup\n      .number()\n      .required('Ingrese un puerto')\n      .typeError('Ingrese un n\u00FAmero de puerto v\u00E1lido'),\n    bonificacion: yup.string(),\n    comentarios: yup.string(),\n    quantities: yup.object().required(),\n  })\n  .required();\n", "import { buildSelectOptions } from '#/hooks/useTangoList';\n\nimport {\n  Box,\n  Collapse,\n  Container,\n  Grid,\n  GridItem,\n  Heading,\n  useDisclosure,\n} from '@chakra-ui/react';\n\nimport _ from 'lodash';\nimport { Control, useFormContext, useWatch } from 'react-hook-form';\nimport { AuxiliaresResult } from 'src/domain/tango/results';\nimport { CommonCard } from '~/components/CommonCard';\nimport { ControlledInput } from '~/components/form_elements/ControlledInput';\nimport { ControlledSelect } from '~/components/form_elements/ControlledSelect';\nimport { ControlledTextarea } from '~/components/form_elements/ControlledTextarea';\nimport { TextPrice } from '~/components/TextPrice';\n\ninterface CabeceraProps {\n  id: number;\n  cliente: string;\n  bonificacion: number;\n}\n\ninterface OrderInfoProps {\n  cabecera: CabeceraProps;\n  auxData: AuxiliaresResult;\n  disableForm: boolean;\n  prices: Record<string, number>;\n}\n\nconst calculateTotals = (\n  quantities: Record<string, number>,\n  prices: Record<string, number>,\n  discount: number\n) => {\n  let total = 0;\n\n  _.forOwn(quantities, (quantity, id) => {\n    total += quantity * prices[id];\n  });\n\n  return total - (total * discount) / 100;\n};\n\nexport const OrderInfo = (props: OrderInfoProps) => {\n  const { cabecera, auxData, disableForm, prices } = props;\n\n  const {\n    control,\n    formState: { isSubmitted, isSubmitting },\n  } = useFormContext();\n\n  const quantitiesWatch = useWatch({ control, name: `quantities` });\n\n  const total = calculateTotals(quantitiesWatch, prices, cabecera.bonificacion);\n\n  // build select options\n  const transporteOptions = buildSelectOptions({\n    data: auxData.transportes,\n    fieldsMap: {\n      label: 'nombre',\n      value: 'id',\n    },\n  });\n\n  // prettier-ignore\n  const condicionVentaOptions = buildSelectOptions({\n    data: auxData.condiciones,\n  });\n\n  // prettier-ignore\n  const tipoAsientoOptions = buildSelectOptions({\n    data: auxData.asientos,\n    fieldsMap: { value: 'tipo', },\n  });\n\n  // prettier-ignore\n  const talonarioOptions = buildSelectOptions({\n    data: auxData.talonarios,\n  });\n\n  // prettier-ignore\n  const depositoOptions = buildSelectOptions({\n    data: auxData.depositos,\n  });\n\n  const { isOpen, onToggle } = useDisclosure({\n    defaultIsOpen: true,\n  });\n\n  return (\n    <>\n      <Box>\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n            onClick={onToggle}\n            cursor={'pointer'}\n          >\n            <GridItem>\n              <Heading size={'xs'}>Cliente:</Heading>\n              <Heading size={'md'} textTransform={'uppercase'} sx={{ mt: 1 }}>\n                {cabecera.cliente}\n              </Heading>\n            </GridItem>\n            <GridItem textAlign={{ md: 'end' }}>\n              <Heading textTransform={'uppercase'} size={'xs'}>\n                Total (Sin IVA) - Bonif. {cabecera.bonificacion}%\n              </Heading>\n              <TextPrice\n                precio={total ?? 0}\n                moneda={'$'}\n                textProps={{\n                  fontSize: '2xl',\n                  color: 'green.400',\n                  fontWeight: 'bolder',\n                  sx: { mt: 1 },\n                }}\n              />\n            </GridItem>\n          </Grid>\n          <Collapse in={isOpen} animateOpacity style={{ overflow: 'inherit' }}>\n            <Grid\n              templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n              alignItems={'center'}\n              gap={4}\n              sx={{ mt: 4 }}\n            >\n              <GridItem>\n                <ControlledInput\n                  fieldProps={{\n                    name: 'alta',\n                    id: 'alta',\n                    type: 'text',\n                  }}\n                  formControlProps={{\n                    isDisabled: disableForm,\n                  }}\n                  formControlInnerProps={{\n                    label: 'Alta',\n                  }}\n                  control={control}\n                />\n              </GridItem>\n              <GridItem>\n                <ControlledSelect\n                  fieldProps={{\n                    name: 'condicion_venta',\n                    id: 'condicion_venta',\n                    placeholder: 'Seleccione una condici\u00F3n',\n                    options: condicionVentaOptions,\n                    noOptionsMessage(obj) {\n                      return 'No hay condiciones disponibles';\n                    },\n                    selectedOptionStyle: 'check',\n                  }}\n                  formControlProps={{\n                    isDisabled: disableForm,\n                  }}\n                  formControlInnerProps={{\n                    label: 'Condici\u00F3n de venta',\n                  }}\n                  control={control}\n                />\n              </GridItem>\n              <GridItem>\n                <ControlledInput\n                  fieldProps={{\n                    name: 'entrega',\n                    id: 'entrega',\n                    type: 'text',\n                  }}\n                  formControlProps={{\n                    isDisabled: disableForm,\n                  }}\n                  formControlInnerProps={{\n                    label: 'Entrega',\n                  }}\n                  control={control}\n                />\n              </GridItem>\n              <GridItem>\n                <ControlledSelect\n                  fieldProps={{\n                    name: 'tipo_de_asiento',\n                    id: 'tipo_de_asiento',\n                    placeholder: 'Seleccione un tipo de asiento',\n                    options: tipoAsientoOptions,\n                    noOptionsMessage(obj) {\n                      return 'No hay tipos disponibles';\n                    },\n                    selectedOptionStyle: 'check',\n                  }}\n                  formControlProps={{\n                    isDisabled: disableForm,\n                  }}\n                  formControlInnerProps={{\n                    label: 'Tipo de asiento',\n                  }}\n                  control={control}\n                />\n              </GridItem>\n              <GridItem>\n                <ControlledSelect\n                  fieldProps={{\n                    name: 'transporte',\n                    id: 'transporte',\n                    placeholder: 'Seleccione un transporte',\n                    options: transporteOptions,\n                    noOptionsMessage(obj) {\n                      return 'No hay transportes disponibles';\n                    },\n                    selectedOptionStyle: 'check',\n                  }}\n                  formControlProps={{\n                    isDisabled: disableForm,\n                  }}\n                  formControlInnerProps={{\n                    label: 'Transporte',\n                  }}\n                  control={control}\n                />\n              </GridItem>\n              <GridItem>\n                <ControlledSelect\n                  fieldProps={{\n                    name: 'talonario',\n                    id: 'talonario',\n                    placeholder: 'Seleccione un talonario',\n                    options: talonarioOptions,\n                    noOptionsMessage(obj) {\n                      return 'No hay talonarios disponibles';\n                    },\n                    selectedOptionStyle: 'check',\n                  }}\n                  formControlProps={{\n                    isDisabled: disableForm,\n                  }}\n                  formControlInnerProps={{\n                    label: 'Talonario',\n                  }}\n                  control={control}\n                />\n              </GridItem>\n              <GridItem>\n                <ControlledSelect\n                  fieldProps={{\n                    name: 'deposito',\n                    id: 'deposito',\n                    placeholder: 'Seleccione un dep\u00F3sito',\n                    options: depositoOptions,\n                    noOptionsMessage(obj) {\n                      return 'No hay dep\u00F3sitos disponibles';\n                    },\n                    selectedOptionStyle: 'check',\n                  }}\n                  formControlProps={{\n                    isDisabled: disableForm,\n                  }}\n                  formControlInnerProps={{\n                    label: 'Dep\u00F3sito',\n                  }}\n                  control={control}\n                />\n              </GridItem>\n              <GridItem>\n                <ControlledInput\n                  fieldProps={{\n                    name: 'bonificacion',\n                    id: 'bonificacion',\n                    type: 'text',\n                    htmlSize: 5,\n                    width: 'auto',\n                    isReadOnly: true,\n                  }}\n                  formControlProps={{\n                    isDisabled: disableForm,\n                  }}\n                  formControlInnerProps={{\n                    label: 'Bonificaci\u00F3n',\n                  }}\n                  control={control}\n                />\n              </GridItem>\n              <GridItem colSpan={{ md: 2 }}>\n                <ControlledTextarea\n                  fieldProps={{\n                    name: 'comentarios',\n                    id: 'comentarios',\n                  }}\n                  formControlProps={{\n                    isDisabled: disableForm,\n                  }}\n                  formControlInnerProps={{\n                    label: 'Comentario',\n                  }}\n                  control={control}\n                />\n              </GridItem>\n            </Grid>\n          </Collapse>\n        </CommonCard>\n      </Box>\n    </>\n  );\n};\n", "import {\n  FormControl,\n  FormControlProps,\n  FormHelperText,\n  FormLabel,\n  Textarea,\n  TextareaProps,\n} from '@chakra-ui/react';\n\nimport { type Control, useController } from 'react-hook-form';\n\ninterface FieldProps extends TextareaProps {\n  name: string;\n}\n\ninterface FormControlInnerProps {\n  icon?: React.ReactNode;\n  label?: string;\n  helperText?: string;\n}\n\ninterface ControlledTextareaProps {\n  fieldProps: FieldProps;\n  formControlProps?: FormControlProps;\n  formControlInnerProps?: FormControlInnerProps;\n  control: Control<any>;\n}\n\nexport const ControlledTextarea = (props: ControlledTextareaProps) => {\n  const { fieldProps, formControlProps, formControlInnerProps, control } =\n    props;\n\n  const { label, helperText, icon } = formControlInnerProps || {};\n\n  const {\n    field: { ref, onChange, value },\n    fieldState: { invalid },\n    formState: { errors },\n  } = useController({\n    name: fieldProps.name,\n    control,\n  });\n\n  return (\n    <FormControl {...formControlProps} isInvalid={invalid}>\n      {label != null && (\n        <FormLabel\n          htmlFor={fieldProps.name}\n          sx={fieldProps.variant === 'flushed' ? { fontSize: 'sm', mb: 0 } : {}}\n        >\n          {label}\n        </FormLabel>\n      )}\n      <Textarea {...fieldProps} onChange={onChange} value={value} ref={ref} />\n      {helperText != null && <FormHelperText>{helperText}</FormHelperText>}\n      {/* {errors != null && (\n        <FormErrorMessage>\n          <ErrorMessage name={'singleErrorInput'} errors={errors} />\n        </FormErrorMessage>\n      )} */}\n    </FormControl>\n  );\n};\n", "import { Text, TextProps } from '@chakra-ui/react';\n\ninterface TextPriceProps {\n  precio: number;\n  moneda?: string;\n  textProps?: TextProps;\n}\n\nfunction formatNumber(num: number) {\n  return num.toLocaleString('en-US', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n}\n\nexport const TextPrice = ({ precio, moneda, textProps }: TextPriceProps) => {\n  return (\n    <Text textAlign={'right'} {...textProps}>\n      {moneda != null && moneda + ' '}\n      {formatNumber(precio)}\n    </Text>\n  );\n};\n\nexport const TextPriceNative = ({\n  precio,\n  moneda,\n  textProps,\n}: TextPriceProps) => {\n  return (\n    <>\n      {moneda != null && moneda + ' '}\n      {formatNumber(precio)}\n    </>\n  );\n};\n", "import {\n  forwardRef,\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport React from 'react';\n\nimport {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Alert,\n  AlertIcon,\n  Badge,\n  Box,\n  Heading,\n  useBreakpointValue,\n  useColorModeValue,\n} from '@chakra-ui/react';\n\nimport { useScroll } from '@use-gesture/react';\nimport _ from 'lodash';\nimport { useFormContext, useWatch } from 'react-hook-form';\nimport { FixedSizeList, ListChildComponentProps } from 'react-window';\nimport { ArticuloConPrecioResult, ArticulosAgrupadosResult } from 'src/domain/articulo/results';\nimport { CommonCard } from '~/components/CommonCard';\nimport { TextPriceNative } from '~/components/TextPrice';\n\ninterface ProductsTableProps {\n  disableForm: boolean;\n  unfilteredProducts: ArticulosAgrupadosResult;\n  filteredProducts: ArticulosAgrupadosResult;\n  isFiltering: boolean;\n}\n\nconst CategoryAccordionButton = (props: {\n  categoryName: string;\n  articulos: ArticuloConPrecioResult[];\n}) => {\n  const { control } = useFormContext();\n  const { categoryName, articulos } = props;\n\n  const categoryTotal = articulos?.map(({ id, precio }) => {\n    const productQuantity = useWatch({ control, name: `quantities.${id}` });\n    const productSum = productQuantity * precio;\n\n    return productSum;\n  });\n\n  const categorySum = _.sum(categoryTotal);\n\n  return (\n    <AccordionButton sx={{ p: 0 }}>\n      <AccordionIcon sx={{ me: 2 }} />\n      <Box as='span' flex='1' textAlign='left'>\n        <Heading\n          size={['sm', 'md']}\n          sx={{\n            textTransform: 'uppercase',\n          }}\n        >\n          {categoryName}\n        </Heading>\n      </Box>\n      {categorySum != 0 && (\n        <Box>\n          <Badge variant='subtle' colorScheme='yellow' fontSize='0.9em'>\n            <TextPriceNative precio={categorySum} moneda='$' />\n          </Badge>\n        </Box>\n      )}\n    </AccordionButton>\n  );\n};\n\nconst ProductsRow = (props: {\n  product: ArticuloConPrecioResult;\n  index: number;\n  style: any;\n}) => {\n  const { id, codigo, nombre, precio } = props.product;\n  const index = props.index;\n  const style = props.style;\n\n  const rowColor = useColorModeValue(\n    'var(--chakra-colors-yellow-100)',\n    'var(--chakra-colors-green-900)'\n  );\n  const inputBorderColor = useColorModeValue(\n    'var(--chakra-colors-blackAlpha-800)',\n    'var(--chakra-colors-whiteAlpha-300)'\n  );\n\n  const {\n    control,\n    register,\n    formState: { isSubmitted, isSubmitting },\n  } = useFormContext();\n\n  const productQuantity = useWatch({ control, name: `quantities.${id}` });\n  const productSum = productQuantity * precio;\n\n  const inputFieldProps: InputHTMLAttributes<HTMLInputElement> = {\n    type: 'number',\n    min: 0,\n    inputMode: 'tel',\n    size: 5,\n    onKeyDown: (e) => {\n      if (/^(\\.|,|-|\\+)$/.test(e.key)) e.preventDefault();\n    },\n    onChange: (e) => {\n      return parseInt(e.target.value);\n    },\n    onFocus: (e) => {\n      e.target.select();\n    },\n    className: 'quantity',\n    style: {\n      borderColor: inputBorderColor,\n    },\n    disabled: isSubmitted || isSubmitting,\n  };\n\n  return (\n    <div\n      className='grid'\n      style={{ ...style, ...(productSum && { backgroundColor: rowColor }) }}\n    >\n      <div className='word-break-all'>\n        {codigo} - {nombre}\n      </div>\n      <div className='text-right hidden-on-base'>\n        {precio != null && <TextPriceNative precio={precio} moneda='$' />}\n      </div>\n      <div className='text-center'>\n        <input {...inputFieldProps} {...register(`quantities.${id}`)} />\n      </div>\n      <div className='text-right'>\n        {productSum != null && (\n          <TextPriceNative precio={productSum} moneda='$' />\n        )}\n      </div>\n    </div>\n  );\n};\nconst emptyFunction = (): void => {\n  return;\n};\n\nexport const OuterElement = forwardRef(\n  (\n    { onScroll, children }: { onScroll: Function; children: React.ReactNode },\n    forwardedRef\n  ) => {\n    const containerRef = useRef<HTMLTableRowElement>(null);\n    useScroll(\n      () => {\n        if (!(onScroll instanceof Function)) {\n          return;\n        }\n\n        const {\n          clientWidth,\n          clientHeight,\n          scrollLeft,\n          scrollTop,\n          scrollHeight,\n          scrollWidth,\n        } = document.documentElement;\n\n        if (onScroll != null) {\n          onScroll({\n            currentTarget: {\n              clientHeight,\n              clientWidth,\n              scrollLeft,\n              addEventListener: emptyFunction,\n              removeEventListener: emptyFunction,\n              dispatchEvent: () => false,\n              scrollTop:\n                scrollTop -\n                (containerRef.current\n                  ? containerRef.current.getBoundingClientRect().top + scrollTop\n                  : 0),\n              scrollHeight,\n              scrollWidth,\n            },\n          } as unknown as React.UIEvent<HTMLElement>);\n        }\n      },\n      { target: window }\n    );\n\n    if (forwardedRef != null && !(forwardedRef instanceof Function)) {\n      forwardedRef.current = document.documentElement;\n    }\n\n    return <div ref={containerRef}>{children}</div>;\n  }\n);\n\nexport const InnerElement = ({\n  children,\n  ...rest\n}: {\n  children: React.ReactNode;\n}) => {\n  const rowColor = useColorModeValue(\n    'var(--chakra-colors-gray-200)',\n    'var(--chakra-colors-black)'\n  );\n\n  return (\n    <>\n      <div {...rest}>\n        <div\n          className='grid heading'\n          style={{ backgroundColor: `${rowColor}` }}\n        >\n          <div>\n            <strong>Art\u00EDculo</strong>\n          </div>\n          <div className='text-center hidden-on-base'>\n            <strong>Precio</strong>\n          </div>\n          <div className='text-center'>\n            <strong>Cantidad</strong>\n          </div>\n          <div className='text-center'>\n            <strong>Subtotal</strong>\n          </div>\n        </div>\n        <div style={{ position: 'relative' }}>{children}</div>\n      </div>\n    </>\n  );\n};\n\nconst Row = ({\n  style,\n  index,\n  data,\n}: ListChildComponentProps<ArticuloConPrecioResult[]>) => {\n  const product = data != null ? data[index] : undefined;\n\n  return (\n    product && (\n      <ProductsRow\n        key={`product-row-${product.id}`}\n        index={index}\n        product={product}\n        style={style}\n      />\n    )\n  );\n};\n\nexport const ProductsTable = (props: ProductsTableProps) => {\n  const { disableForm, unfilteredProducts, filteredProducts, isFiltering } =\n    props;\n\n  const [index, setIndex] = useState<number | number[] | null>(null);\n\n  const ITEM_HEIGHT = useBreakpointValue(\n    {\n      base: 70,\n      md: 46,\n    },\n    {\n      fallback: 'md',\n    }\n  );\n\n  const totalCategories = _.keys(filteredProducts).length;\n\n  // check for categories with full array on it\n  const filledUpCategories = _.keys(\n    _.pickBy(\n      filteredProducts,\n      (value) => Array.isArray(value) && value.length > 0\n    )\n  );\n\n  useEffect(() => {\n    setIndex(isFiltering ? _.range(totalCategories) : null);\n  }, [isFiltering]);\n\n  if (!filledUpCategories.length) {\n    return (\n      <Alert status='info'>\n        <AlertIcon />\n        La b\u00FAsqueda no produjo resultados.\n      </Alert>\n    );\n  }\n\n  return (\n    <Accordion\n      allowMultiple\n      reduceMotion\n      {...(totalCategories === 1 ? { defaultIndex: [0] } : {})}\n      {...(index != null && { index })}\n      onChange={setIndex}\n    >\n      {_.map(filteredProducts, (articulos, categoria) => {\n        const categoryName =\n          categoria === '_' ? 'Varios' : categoria.replace(/_/g, ' ');\n\n        return articulos.length ? (\n          <AccordionItem sx={{ border: 'none' }} key={`accordion-${categoria}`}>\n            <CommonCard\n              cardProps={{\n                borderWidth: '1px',\n              }}\n            >\n              <CategoryAccordionButton\n                categoryName={categoryName}\n                articulos={unfilteredProducts[categoria]}\n              />\n              <AccordionPanel sx={{ p: 0, mt: 4 }}>\n                <FixedSizeList\n                  height={window.innerHeight}\n                  outerElementType={OuterElement}\n                  innerElementType={InnerElement}\n                  overscanCount={10}\n                  itemCount={articulos?.length + 1}\n                  itemSize={ITEM_HEIGHT as number}\n                  itemData={articulos}\n                  width={window.innerWidth}\n                >\n                  {Row}\n                </FixedSizeList>\n              </AccordionPanel>\n            </CommonCard>\n          </AccordionItem>\n        ) : (\n          <React.Fragment key={`accordion-${categoria}`}></React.Fragment>\n        );\n      })}\n    </Accordion>\n  );\n};\n", "import { setActiveCompanyEndpoint } from '!/api/dictionary/endpoints/setActiveCompany';\nimport { type ActionFunctionArgs } from '@remix-run/node';\nimport { unimplementedApiResponse } from 'src/api-universal';\n\nexport const loader = unimplementedApiResponse;\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n  return await setActiveCompanyEndpoint.post(request, params);\n}\n", "import { adminRootController } from '!/api/admin_root.controller';\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { dictionaryRepository } from '!/infrastucture/dictionary';\n\nimport { settingsService } from '!/infrastucture/settings/settings.repository';\nimport { emitBusEvent } from 'src/event_bus';\nimport { DBSettingsChangedEvent } from 'src/domain/settings/events';\n\nimport { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\nimport { StoredDBSettingsDTO } from '!/infrastucture/settings/dtos';\n\nimport { stringValidator } from '@core/validate_schema';\nimport { DBSettingsResult } from 'src/domain/settings/results';\n\n\nexport const setActiveCompanyEndpoint = createApiEndpoint(\n\n  adminRootController,\n\n  /* *************************************************************************************************************** */\n\n  {\n    validation: {\n      query: {\n        company: stringValidator\n      }\n    }\n  },\n\n  /* *************************************************************************************************************** */\n  \n  async (req): Promise<DBSettingsResult> => {\n    const { company } = req.validated.query;\n\n    const companies = await dictionaryRepository.getCompanies();\n\n    for (const [key, companyUnsafe] of companies.entries()) {\n      if ( company === companyUnsafe.db_name || company.toLowerCase() === companyUnsafe.name.toLowerCase() ) {\n        \n        const settings = await settingsService.getDBSettings();\n\n        const newDBSettingsDTO = new StoredDBSettingsDTO({\n          ...settings,\n          tango_active_company: companyUnsafe.db_name\n        });\n\n        await settingsService.setDBSettings(newDBSettingsDTO);\n\n        emitBusEvent(\n          new DBSettingsChangedEvent({\n            passiveDBChanges: false,\n            newDictionary: false,\n            newCompany: true,\n            resetCache: true,\n          })\n        );\n\n        const {\n          tango_active_company,\n          ...remaining\n        } = newDBSettingsDTO.data;\n\n        return remaining;\n      }\n\n    }\n\n    throw new DXTException(DXTErrorCode.TANGO_COMPANY_NOT_LISTED_IN_DICTIONARY);\n  },\n\n  /* *************************************************************************************************************** */\n);\n\n", "import { useNavigate, useParams } from '@remix-run/react';\n\nimport { settings, SettingsProps } from '#/crud_configs/lists';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { CommonErrors } from '~/components/CommonErrors';\nimport { SettingsFormHeading } from '~/components/SettingsFormHeading';\n\nimport { FormLists } from './components';\n\nexport default function Lists() {\n  const navigate = useNavigate();\n  const { type } = useParams();\n\n  const typeSettings = settings[type as keyof SettingsProps];\n\n  if (type != null && typeSettings != null) {\n    return (\n      <>\n        <SettingsFormHeading\n          title={typeSettings.title}\n          actionButton={{\n            label: 'Cancelar',\n            buttonProps: {\n              colorScheme: 'gray',\n              onClick: () => {\n                navigate(URL_SETTINGS_PATH);\n              },\n            },\n          }}\n        />\n        <FormLists typeSettings={typeSettings} />\n      </>\n    );\n  }\n\n  return (\n    <CommonErrors\n      error={'Tipo de lista no v\u00E1lida'}\n      buttonProps={{\n        label: 'Volver a Configuraci\u00F3n',\n        colorScheme: 'green',\n        onClick: () => {\n          navigate(URL_SETTINGS_PATH);\n        },\n      }}\n    />\n  );\n}\n", "import { apiPath } from \"../../shared\";\n\n\nexport const API_DXT_PEDIDO_PRODUCT_PRINT = apiPath('/dxt/pedido/articulos/print_list')\nexport const API_DXT_PEDIDO_PRODUCT_SCREEN = apiPath('/dxt/pedido/articulos/screen_list')\n\nexport const API_DXT_PEDIDO_PRODUCT_PRINT_IDS = apiPath('/dxt/pedido/articulos/print_ids')\n", "import { AppResources } from '#/app_resources/app_resources';\nimport { PedidoArticulosInput } from 'src/domain/dxt/pedido/input';\n\nimport { dxtApiRequest } from '../../shared';\nimport { API_DXT_PEDIDO_PRODUCT_PRINT, API_DXT_PEDIDO_PRODUCT_SCREEN } from './paths';\n\n\nexport const dxtPedidoArticulosPrintUpdateRequest = async (\n  input: PedidoArticulosInput,\n  app: AppResources\n) => {\n  return await dxtApiRequest<{ok:boolean}, PedidoArticulosInput>(\n    {\n      url: API_DXT_PEDIDO_PRODUCT_PRINT,\n      data: input,\n      method: 'POST',\n      silent: true\n    },\n    app\n  );\n};\n\nexport const dxtPedidoArticulosScreenUpdateRequest = async (\n  input: PedidoArticulosInput,\n  app: AppResources\n) => {\n  return await dxtApiRequest<{ok:boolean}, PedidoArticulosInput>(\n    {\n      url: API_DXT_PEDIDO_PRODUCT_SCREEN,\n      data: input,\n      method: 'POST',\n      silent: true\n    },\n    app\n  );\n};", "import { AppResources } from '#/app_resources/app_resources';\nimport { useDXTApiFetch, UseDXTApiFetchResult } from '#/hooks/useDXTApiFetch';\n\nimport { PedidoArticulosInput } from 'src/domain/dxt/pedido/input';\nimport { DXTPedidoArticulosResult } from 'src/domain/dxt/pedido/results';\nimport {\n  API_DXT_PEDIDO_PRODUCT_PRINT,\n  API_DXT_PEDIDO_PRODUCT_SCREEN,\n} from 'src/api-client/dxt/pedido/paths';\nimport {\n  dxtPedidoArticulosPrintUpdateRequest,\n  dxtPedidoArticulosScreenUpdateRequest,\n} from 'src/api-client/dxt/pedido/requests';\nimport { DXTApiRequestState } from 'src/api-client/shared';\n\ninterface FormListsApiSettings {\n  getAll: () => UseDXTApiFetchResult<DXTPedidoArticulosResult, any>;\n  post: (\n    input: PedidoArticulosInput,\n    app: AppResources\n  ) => Promise<DXTApiRequestState<{ ok: boolean }, PedidoArticulosInput>>;\n}\n\nexport interface FormListsSettings {\n  api: FormListsApiSettings;\n  title: string;\n  description?: JSX.Element;\n  actionButtonNavigateTo?: string;\n}\n\nexport interface SettingsProps {\n  screen: FormListsSettings;\n  print: FormListsSettings;\n}\n\n// TODO: Typings.......\nexport const settings: SettingsProps = {\n  screen: {\n    api: {\n      getAll: () => {\n        return useDXTApiFetch<DXTPedidoArticulosResult>({\n          url: API_DXT_PEDIDO_PRODUCT_SCREEN,\n          silent: true,\n        });\n      },\n      post: async (input, app) => {\n        return dxtPedidoArticulosScreenUpdateRequest(input, app);\n      },\n    },\n\n    title: 'Lista de Art\u00EDculos para Visualizaci\u00F3n',\n    description: (\n      <>\n        Ingrese en la lista los c\u00F3digos de art\u00EDculo en el \u00F3rden en quedesea que\n        aparezcan durante la creaci\u00F3n o edici\u00F3n de un pedido.\n        <br />\n        <br />\n        Cualquier l\u00EDnea que ingrese, que no contenga ning\u00FAn c\u00F3digo de art\u00EDculo,\n        ser\u00E1 considerada como t\u00EDtulo de grupo.\n      </>\n    ),\n  },\n  print: {\n    api: {\n      getAll: () => {\n        return useDXTApiFetch<DXTPedidoArticulosResult>({\n          url: API_DXT_PEDIDO_PRODUCT_PRINT,\n          silent: true,\n        });\n      },\n      post: async (input, app) => {\n        return dxtPedidoArticulosPrintUpdateRequest(input, app);\n      },\n    },\n\n    title: 'Lista de Art\u00EDculos para Impresi\u00F3n',\n    description: (\n      <>\n        Ingrese en la lista los c\u00F3digos de art\u00EDculo en el \u00F3rden en que desea que\n        aparezcan durante la impresi\u00F3n de un pedido.\n        <br />\n        <br />\n        Cualquier l\u00EDnea que ingrese, que no contenga ning\u00FAn c\u00F3digo de art\u00EDculo,\n        ser\u00E1 considerada como t\u00EDtulo de grupo.\n      </>\n    ),\n  },\n};\n", "import { FormListsSettings } from '#/crud_configs/lists';\n\nimport { Box, Grid, GridItem, Text } from '@chakra-ui/react';\n\nimport {\n  FormInputSkeleton,\n  FormTextareaSkeleton,\n} from '~/components/form_elements/FormSkeletons';\n\nexport const Loading = (props: { typeSettings: FormListsSettings }) => {\n  const { typeSettings } = props;\n\n  return (\n    <Box\n      width={'full'}\n      sx={{\n        mt: 8,\n        mb: 4,\n      }}\n    >\n      <Grid\n        templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n        alignItems={'start'}\n        gap={4}\n      >\n        <GridItem>\n          <FormTextareaSkeleton height='380px' />\n        </GridItem>\n        <GridItem>\n          <Text fontSize={'sm'}>{typeSettings.description}</Text>\n        </GridItem>\n        <GridItem>\n          <FormInputSkeleton />\n        </GridItem>\n        <GridItem>\n          <FormInputSkeleton />\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n};\n", "import { useAppResources } from '#/app_resources/app_resources';\nimport { FormListsSettings } from '#/crud_configs/lists';\nimport { promiseBasedToast } from '#/utils/promise_based_toast';\n\nimport { Box, Grid, GridItem, Text, useToast } from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nimport { useForm } from 'react-hook-form';\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { PedidoArticulosInput } from 'src/domain/dxt/pedido/input';\nimport { DXTPedidoArticulosResult } from 'src/domain/dxt/pedido/results';\nimport { CommonCard } from '~/components/CommonCard';\nimport { ControlledTextarea } from '~/components/form_elements/ControlledTextarea';\nimport { FormErrors } from '~/components/form_elements/FormErrors';\nimport { SettingsFormsButtons } from '~/components/SettingsFormButtons';\n\nimport { yupValidationSchema } from '../validation';\n\ninterface SuccessProps {\n  stateData: DXTPedidoArticulosResult;\n  typeSettings: FormListsSettings;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { stateData, typeSettings } = props;\n\n  const app = useAppResources();\n\n  const toast = useToast();\n\n  type _InputSchema = yup.InferType<typeof yupValidationSchema>;\n\n  const {\n    handleSubmit,\n    control,\n    reset,\n    setError,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = useForm<_InputSchema>({\n    defaultValues: {\n      list: stateData?.join('\\r\\n') || '',\n    },\n    resolver: yupResolver(yupValidationSchema),\n  });\n\n  const disableForm = isSubmitSuccessful || isSubmitting;\n\n  const onSubmit = async (dataUnsafe: _InputSchema) => {\n    const input: PedidoArticulosInput = { data: dataUnsafe.list.split('\\n') };\n\n    const result = await typeSettings.api.post(input, app);\n\n    await promiseBasedToast({\n      toast,\n      result,\n      messages: {\n        success: { title: 'Lista actualizada' },\n        error: { title: 'Ha ocurrido un error' },\n        loading: { title: 'Actualizando lista' },\n      },\n    })\n      .then(() => {\n        app.navigate(URL_SETTINGS_PATH);\n      })\n      .catch((e) => {\n        setError('root', { message: e });\n      });\n  };\n\n  return (\n    <form noValidate onSubmit={handleSubmit(onSubmit)}>\n      <Box>\n        <FormErrors errors={errors} />\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'start'}\n            gap={4}\n          >\n            <GridItem>\n              <ControlledTextarea\n                fieldProps={{\n                  name: 'list',\n                  id: 'list',\n                  rows: 20,\n                  fontSize: 'sm',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <Text fontSize={'sm'}>{typeSettings.description}</Text>\n            </GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <SettingsFormsButtons isLoading={disableForm} />\n        </CommonCard>\n      </Box>\n    </form>\n  );\n};\n", "import * as yup from 'yup';\n\nexport const yupValidationSchema =\n  yup\n    .object({\n      list: yup\n        .string()\n        .required('Debe ingresar al menos un c\u00F3digo de art\u00EDculo'),\n    })\n    .required();\n", "import { FormListsSettings } from '#/crud_configs/lists';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { ApiErrors } from '~/components/ApiErrors';\n\nimport { Loading } from './loading';\nimport { Success } from './success';\n\ninterface FormListsProps {\n  typeSettings: FormListsSettings;\n}\n\nexport const FormLists = (props: FormListsProps) => {\n  const { typeSettings } = props;\n\n  const { state, retry } = typeSettings.api.getAll();\n\n  return state.map({\n    loading: (_) => <Loading typeSettings={typeSettings} />,\n\n    error: ({ error }) => (\n      <ApiErrors\n        error={error}\n        retry={retry}\n        cancelAndNavigateTo={URL_SETTINGS_PATH}\n      />\n    ),\n\n    success: (state) => (\n      <Success stateData={state.data} typeSettings={typeSettings} />\n    ),\n  });\n};\n", "export default function ChangePassword() {\n  return <>Change password</>;\n}\n", "import { useDXTApiFetch } from '#/hooks/useDXTApiFetch';\n\nimport { API_PEDIDO_GET_ALL } from 'src/api-client/pedido/paths';\nimport { URL_PEDIDOS_PATH } from 'src/config/url_paths';\nimport { PedidoAndRelationsResult } from 'src/domain/pedido/results';\nimport { ApiErrors } from '~/components/ApiErrors';\n\nimport { Loading } from './components/loading';\nimport { Success } from './components/success';\n\nexport default function OrdersList() {\n  const { state, retry } = useDXTApiFetch<PedidoAndRelationsResult[]>({\n    url: API_PEDIDO_GET_ALL,\n    silent: true,\n  });\n\n  return state.map({\n    loading: (_) => <Loading />,\n\n    error: ({ error }) => (\n      <ApiErrors\n        error={error}\n        retry={retry}\n        cancelAndNavigateTo={URL_PEDIDOS_PATH}\n      />\n    ),\n\n    success: (state) => <Success pedidos={state.data} />,\n  });\n}\n", "import { apiPath } from \"../shared\";\n\n\nexport const API_PEDIDO_GET_ALL = apiPath( '/pedido' );\nexport const API_PEDIDO_GET_ONE = apiPath( '/pedido/:id' );\nexport const API_PEDIDO_GET_ALL_ROWS = apiPath( '/pedido/renglones' );\n", "import { Box, Grid, GridItem } from '@chakra-ui/react';\n\nimport {\n  FormInputSkeleton,\n  FormTextareaSkeleton,\n} from '~/components/form_elements/FormSkeletons';\n\nexport const Loading = () => (\n  <Box\n    width={'full'}\n    sx={{\n      mt: 8,\n      mb: 4,\n    }}\n  >\n    <Grid templateColumns={'1fr'} alignItems={'center'} gap={4}>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormTextareaSkeleton height={'120px'} />\n      </GridItem>\n      <GridItem>\n        <FormTextareaSkeleton height={'120px'} />\n      </GridItem>\n      <GridItem>\n        <FormTextareaSkeleton height={'120px'} />\n      </GridItem>\n      <GridItem>\n        <FormTextareaSkeleton height={'120px'} />\n      </GridItem>\n      <GridItem>\n        <FormTextareaSkeleton height={'120px'} />\n      </GridItem>\n      <GridItem>\n        <FormTextareaSkeleton height={'120px'} />\n      </GridItem>\n    </Grid>\n  </Box>\n);\n", "import { useState } from 'react';\n\nimport { Container } from '@chakra-ui/react';\n\nimport { PedidoAndRelationsResult } from 'src/domain/pedido/results';\nimport { OrdersNav } from '~/components/orders/OrdersNav';\n\nimport { PedidoList } from './PedidoList';\n\ninterface SuccessProps {\n  pedidos: PedidoAndRelationsResult[];\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { pedidos } = props;\n  const [selected, setSelected] = useState(0);\n\n  const handleSelect = (operation: number) => {\n    setSelected(selected + operation);\n  };\n\n  return (\n    <>\n      <OrdersNav selected={selected} />\n      <PedidoList pedidos={pedidos} handleSelect={handleSelect} />\n    </>\n  );\n};\n", "import { lazy, Suspense, useEffect, useRef, useState } from 'react';\n\nimport { useNavigate } from '@remix-run/react';\n\nimport { useTangoList } from '#/hooks/useTangoList';\n\nimport {\n  Box,\n  Flex,\n  HStack,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  useColorModeValue,\n  useDisclosure,\n} from '@chakra-ui/react';\n\nimport AccountCancelIcon from 'mdi-react/AccountCancelIcon.js';\nimport CheckboxOutlineIcon from 'mdi-react/CheckboxOutlineIcon.js';\nimport FilePdfBoxIcon from 'mdi-react/FilePdfBoxIcon.js';\nimport MagnifyIcon from 'mdi-react/MagnifyIcon.js';\nimport PlusIcon from 'mdi-react/PlusIcon.js';\nimport PrinterIcon from 'mdi-react/PrinterIcon.js';\nimport TrashIcon from 'mdi-react/TrashIcon.js';\nimport { API_TANGO_CLIENTE } from 'src/api-client/tango/paths';\nimport { URL_PEDIDOS_ADD_PATH } from 'src/config/url_paths';\nimport { TangoClienteResult } from 'src/domain/tango/results';\n\n// import { ModalList } from './ModalList';\nimport { ResponsiveIconButton } from '../ResponsiveIconButton';\nimport { ClientsListModal } from './ClientsListModal';\n\ninterface Props {\n  selected?: number;\n}\n\nexport const OrdersNav = ({ selected }: Props) => {\n  const navigate = useNavigate();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [create, setCreate] = useState(false);\n\n  const handleCreate = () => {\n    setCreate(true);\n    onOpen();\n  };\n\n  const handleOnClose = () => {\n    onClose();\n    setCreate(false);\n  };\n\n  const selectedInfo =\n    selected == null || selected <= 0\n      ? undefined\n      : selected == 1\n        ? '1 seleccionado'\n        : `${selected} seleccionados`;\n\n  return (\n    <>\n      <Box\n        bg={useColorModeValue('white', 'blue.900')}\n        sx={{\n          px: 4,\n          position: 'sticky',\n          zIndex: 1000,\n          top: 0,\n        }}\n      >\n        <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n          <HStack spacing={{ base: 2, sm: 3 }} alignItems={'center'}>\n            <ResponsiveIconButton\n              icon={TrashIcon}\n              text={'Eliminar'}\n              sharedProps={{\n                size: 'sm',\n                fontWeight: '400',\n                colorScheme: 'red',\n              }}\n              iconProps={{\n                boxSize: {\n                  base: 5,\n                  md: 4,\n                },\n              }}\n            />\n            <ResponsiveIconButton\n              icon={PrinterIcon}\n              text={'Imprimir'}\n              sharedProps={{\n                size: 'sm',\n                fontWeight: '400',\n                colorScheme: 'blue',\n              }}\n              iconProps={{\n                boxSize: {\n                  base: 5,\n                  md: 4,\n                },\n              }}\n            />\n            <ResponsiveIconButton\n              icon={PlusIcon}\n              text={'Crear'}\n              sharedProps={{\n                size: 'sm',\n                fontWeight: '400',\n                colorScheme: 'green',\n                onClick: () => {\n                  handleCreate();\n                },\n              }}\n              iconProps={{\n                boxSize: {\n                  base: 5,\n                  md: 4,\n                },\n              }}\n            />\n            {selectedInfo != null && (\n              <>\n                <Tag\n                  display={{ base: 'none', sm: 'inherited' }}\n                  height={8}\n                  borderRadius={40}\n                  size={'md'}\n                  variant='solid'\n                  colorScheme='blue'\n                >\n                  <TagLabel marginX={1}>{selectedInfo}</TagLabel>\n                </Tag>\n                <Tag\n                  display={{ base: 'inherited', sm: 'none' }}\n                  height={8}\n                  borderRadius={40}\n                  size={'md'}\n                  variant='solid'\n                  colorScheme='blue'\n                >\n                  <TagLabel marginX={1}>{selected}</TagLabel>\n                </Tag>\n              </>\n            )}\n          </HStack>\n          <Flex alignItems={'center'} marginLeft={4}>\n            <HStack spacing={{ base: 2, md: 4 }}>\n              <Box>\n                <InputGroup>\n                  <InputLeftElement pointerEvents='none'>\n                    <Icon as={MagnifyIcon} />\n                  </InputLeftElement>\n                  <Input type='text' placeholder='Filtrar...' />\n                </InputGroup>\n              </Box>\n            </HStack>\n          </Flex>\n        </Flex>\n      </Box>\n      {create && <ClientsListModal isOpen={isOpen} onClose={handleOnClose} />}\n    </>\n  );\n};\n", "import { useEffect, useRef } from 'react';\n\nimport { useDXTApiFetch } from '#/hooks/useDXTApiFetch';\nimport { useSearchField } from '#/hooks/useSearchField';\nimport { pathParamsToUrl } from '#/utils';\n\nimport {\n  Box,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  Link,\n  List,\n  ListIcon,\n  ListItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Skeleton,\n  VStack,\n} from '@chakra-ui/react';\n\nimport { FetchStateSuccess } from '@core/react-hooks/useAxiosFetch';\nimport AccountCancelIcon from 'mdi-react/AccountCancelIcon.js';\nimport AccountCheckIcon from 'mdi-react/AccountCheckIcon.js';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList, ListChildComponentProps } from 'react-window';\nimport { URL_PEDIDOS_ADD_PATH, URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { TangoClienteResult } from 'src/domain/tango/results';\n\nimport { ApiErrors } from '../ApiErrors';\nimport {\n  FormInputSkeleton,\n  FormTextareaSkeleton,\n} from '../form_elements/FormSkeletons';\nimport { SearchField } from '../SearchField';\nimport { API_DXT_VENDOR_CUSTOMERS } from 'src/api-client/dxt/user/paths';\n\ninterface ClientsListModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const ClientsListModal = (props: ClientsListModalProps) => {\n  const { isOpen, onClose } = props;\n  const stateData = useRef<TangoClienteResult[]>();\n\n  // load clients\n  const { state, retry } = useDXTApiFetch<TangoClienteResult[]>({\n    url: API_DXT_VENDOR_CUSTOMERS,\n    silent: true,\n  });\n\n  const SearchableList = () => {\n    const { filteredData, handleSearchInputChange } =\n      useSearchField<TangoClienteResult[]>(stateData.current ?? [], ['screen_name']);\n\n    const itemHeight = 30;\n\n    const Row = ({ style, index, data }: ListChildComponentProps<TangoClienteResult[]>) => {\n      const client = data?.[index];\n\n      return client != null ? (\n        <>\n          <ListItem key={client.id} style={style}>\n            {client.habilitado ? (\n              <Link\n                href={pathParamsToUrl(URL_PEDIDOS_ADD_PATH, {\n                  client: client.id,\n                })}\n              >\n                <Box>\n                  <ListIcon as={AccountCheckIcon} color={'green.400'} />\n                  {client.screen_name}\n                </Box>\n              </Link>\n            ) : (\n              <Box color={'gray.400'}>\n                <ListIcon as={AccountCancelIcon} color={'red.400'} />\n                {client.screen_name}\n              </Box>\n            )}\n          </ListItem>\n        </>\n      ) : (\n        <></>\n      );\n    };\n\n    return (\n      <>\n        <Box sx={{ pb: 4 }}>\n          <SearchField handleSearchInputChange={handleSearchInputChange} />\n        </Box>\n        <AutoSizer>\n          {({ height, width }) => (\n            <FixedSizeList\n              height={height - 60}\n              itemCount={filteredData.length ?? 0}\n              itemSize={itemHeight}\n              innerElementType={List}\n              width={width}\n              itemData={filteredData}\n            >\n              {Row}\n            </FixedSizeList>\n          )}\n        </AutoSizer>\n      </>\n    );\n  };\n\n  return (\n    <Modal\n      isCentered\n      isOpen={isOpen}\n      onClose={onClose}\n      scrollBehavior={'inside'}\n      size={{ base: 'full', sm: 'md', md: 'lg' }}\n    >\n      <ModalOverlay />\n      <ModalContent\n        sx={{\n          maxHeight: 'auto',\n        }}\n      >\n        <ModalHeader>Seleccione el cliente</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody minHeight={{ base: 'auto', sm: '420px !important' }}>\n          {state.map({\n            loading: (_) => (\n              <VStack spacing={4}>\n                <Skeleton width={'full'} height={'36px'} borderRadius={'md'} />\n                <Skeleton width={'full'} height={'250px'} borderRadius={'md'} />\n              </VStack>\n            ),\n\n            error: ({ error }) => (\n              <ApiErrors\n                error={error}\n                retry={retry}\n                cancelAndNavigateTo={URL_SETTINGS_PATH}\n              />\n            ),\n\n            success: (state) => {\n              stateData.current = state.data;\n\n              return <SearchableList />;\n            },\n          })}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n", "import { useCallback, useState } from 'react';\nimport React from 'react';\n\nimport { useDXTApiFetch } from '#/hooks/useDXTApiFetch';\nimport { dateToLocale } from '#/utils';\n\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Box,\n  Checkbox,\n  Collapse,\n  Grid,\n  GridItem,\n  Heading,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from '@chakra-ui/react';\n\nimport { API_PEDIDO_GET_ALL_ROWS } from 'src/api-client/pedido/paths';\nimport {\n  PedidoAndRelationsResult,\n  RenglonesPedidosResult,\n} from 'src/domain/pedido/results';\nimport { EstadoPedido } from 'src/domain/pedido/types';\nimport { BadgePedidosEstado } from '~/components/BadgePedidosEstado';\nimport { TextPriceNative } from '~/components/TextPrice';\nimport { TextWordBreak } from '~/components/TextWordBreak';\nimport { getEstadoPedidoColor } from '~/theme/pedidos/utils';\n\nimport { RenglonesEmpty } from './RenglonesEmpty';\nimport { RenglonesError } from './RenglonesError';\nimport { RenglonesLoading } from './RenglonesLoading';\nimport { RenglonesPedido } from './RenglonesPedido';\nimport { NONE_M } from 'src/texts/common';\nimport { parseJSON } from '@core/json';\n\nexport interface PedidoListProps {\n  pedidos: PedidoAndRelationsResult[];\n  // renglones?: { [pedidoId: number]: RenglonPedidoResult[] };\n  handleSelect: (operation: number) => void;\n}\n\nexport function PedidoList({ pedidos, handleSelect }: PedidoListProps) {\n  const { state: stateRenglones } = useDXTApiFetch<RenglonesPedidosResult>({\n    url: API_PEDIDO_GET_ALL_ROWS,\n    silent: true,\n\n    transformResponse: (data: RenglonesPedidosResult) => {\n      Object.values(data).forEach(\n        rows => {\n          if (!Array.isArray(rows)) return ;\n\n          rows.sort( (a, b) => a.renglon - b.renglon )\n        }\n      );\n      \n      return data;\n    }\n\n  });\n\n  const [isOpen, setIsOpen] = useState<Record<number, boolean>>({});\n\n  const handleToggleDetails = useCallback(\n    (id: number) => {\n      setIsOpen((prev_state) => ({ [id]: !prev_state[id] }));\n    },\n    [isOpen]\n  );\n\n  return (\n    <TableContainer sx={{ p: 0, m: 0 }}>\n      <Table\n        variant='stripedOverCard'\n        colorScheme='gray'\n        size={'md'}\n        sx={{\n          borderCollapse: 'separate',\n          borderSpacing: '0 1rem',\n        }}\n      >\n        <Tbody>\n          {pedidos.map(\n            ({\n              id,\n              numero_pedido,\n              estado,\n              fecha_emision,\n              fecha_entrega,\n              codigo_cliente,\n              codigo_vendedor,\n              codigo_transporte,\n              nombre_cliente,\n              nombre_vendedor,\n              nombre_transporte,\n              total,\n              descuento,\n              comentarios,\n            }) => {\n              return (\n                <Tr key={`pedido-${numero_pedido}`}>\n                  <Td\n                    sx={{\n                      py: 6,\n                      position: 'relative',\n                      borderTopWidth: { base: '3px', md: '8px' },\n                      borderTopStyle: 'solid',\n                      borderTopColor: `${getEstadoPedidoColor(estado, '.500 !important')}`,\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        position: 'absolute',\n                        right: 5,\n                        top: 5,\n                      }}\n                    >\n                      <Checkbox\n                        size={'lg'}\n                        colorScheme={'green'}\n                        sx={{\n                          borderColor: useColorModeValue('gray.800', 'white'),\n                        }}\n                        onChange={(e) => {\n                          handleSelect(e.target.checked ? +1 : -1);\n                        }}\n                      ></Checkbox>\n                    </Box>\n                    <Grid\n                      templateColumns={{\n                        base: 'repeat(2, 1fr)',\n                        md: 'repeat(4, 1fr)',\n                      }}\n                      gap={6}\n                      sx={{\n                        cursor: 'pointer',\n                      }}\n                      onClick={() => {\n                        handleToggleDetails(id);\n                      }}\n                    >\n                      <GridItem>\n                        <Heading size={'sm'}>Pedido</Heading>\n                        <Text>{numero_pedido}</Text>\n                      </GridItem>\n                      <GridItem>\n                        <Heading size={'sm'}>Estado</Heading>\n                        <BadgePedidosEstado estado={estado} />\n                      </GridItem>\n                      <GridItem>\n                        <Heading size={'sm'}>Emisi\u00F3n</Heading>\n                        <Text>{dateToLocale(fecha_emision)}</Text>\n                      </GridItem>\n                      <GridItem>\n                        <Heading size={'sm'}>Entrega</Heading>\n                        <Text>{dateToLocale(fecha_entrega)}</Text>\n                      </GridItem>\n                      <GridItem>\n                        <Heading size={'sm'}>Cliente</Heading>\n                        <TextWordBreak>{`${codigo_cliente} - ${nombre_cliente}`}</TextWordBreak>\n                      </GridItem>\n                      <GridItem>\n                        <Heading size={'sm'}>Vendedor</Heading>\n                        <TextWordBreak>\n                          { codigo_vendedor!=null && nombre_vendedor!=null ? `${codigo_vendedor} - ${nombre_vendedor}` : NONE_M }\n                        </TextWordBreak>\n                      </GridItem>\n                      <GridItem>\n                        <Heading size={'sm'}>Transporte</Heading>\n                        <TextWordBreak>\n                          { codigo_transporte!=null && nombre_transporte!=null ? `${codigo_transporte} - ${nombre_transporte}` : NONE_M }\n                        </TextWordBreak>\n                      </GridItem>\n                      <GridItem>\n                        <Heading\n                          size={'md'}\n                          sx={{\n                            textTransform: 'uppercase',\n                            color:\n                              estado === EstadoPedido.APROBADO && 'green.400',\n                          }}\n                        >\n                          Total\n                          {descuento != null && <> {`-${descuento}%`}</>}\n                        </Heading>\n                        <Heading\n                          size={'md'}\n                          sx={{\n                            fontWeight: 'bolder',\n                            color:\n                              estado === EstadoPedido.APROBADO && 'green.400',\n                          }}\n                        >\n                          <TextPriceNative precio={total} moneda='$' />\n                        </Heading>\n                      </GridItem>\n                      {comentarios!=null && comentarios.length>0 && (\n                        <GridItem\n                          colSpan={{\n                            base: 2,\n                            md: 4,\n                          }}\n                        >\n                          <Alert status='info'>\n                            <AlertIcon />\n                            <AlertDescription>{comentarios}</AlertDescription>\n                          </Alert>\n                        </GridItem>\n                      )}\n                    </Grid>\n                    <Box key={`pedido-details-${numero_pedido}`}>\n                      <Collapse in={isOpen[id]} animateOpacity>\n                        <Box sx={{ mt: 6 }}>\n                          {stateRenglones.isLoading() && <RenglonesLoading />}\n                          {stateRenglones.isError() && <RenglonesError />}\n\n                          {stateRenglones.isSuccess() &&\n                            Array.isArray(stateRenglones.data?.[id]) ? (\n                            <RenglonesPedido\n                              nro_pedido={numero_pedido}\n                              renglones={stateRenglones.data[id]}\n                            />\n                          ) : (\n                            <RenglonesEmpty />\n                          )}\n                        </Box>\n                      </Collapse>\n                    </Box>\n                  </Td>\n                </Tr>\n              );\n            }\n          )}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n}\n", "import { Badge } from '@chakra-ui/react';\nimport { EstadoPedido } from 'src/domain/pedido/types';\nimport { getEstadoPedidoText } from 'src/domain/pedido/utils';\nimport { getEstadoPedidoColor } from '~/theme/pedidos/utils';\n\n\ninterface PedidosEstadoProps {\n  estado: EstadoPedido;\n}\n\n\nexport const BadgePedidosEstado = ({ estado }: PedidosEstadoProps) => {\n  \n  const name = getEstadoPedidoText(estado);\n  const colorScheme = getEstadoPedidoColor(estado);\n\n  return (\n    <Badge fontSize='1em' variant='solid' colorScheme={colorScheme} lineHeight='1.5em' >\n      {name}\n    </Badge>\n  );\n};\n", "export const PEDIDO_INVALIDO = 'Inv\u00E1lido';\nexport const PEDIDO_INGRESADO = 'Ingresado';\nexport const PEDIDO_APROBADO = 'Visto';\nexport const PEDIDO_CUMPLIDO = 'Cumplido';\nexport const PEDIDO_CERRADO = 'Cerrado';\nexport const PEDIDO_ANULADO = 'Anulado';\nexport const PEDIDO_ENPROGRESO = 'En progreso';\n", "import { PEDIDO_ANULADO, PEDIDO_APROBADO, PEDIDO_CERRADO, PEDIDO_CUMPLIDO, PEDIDO_INGRESADO, PEDIDO_INVALIDO } from \"src/texts/pedidos\";\nimport { EstadoPedido } from \"../types\";\n\n\nexport function getEstadoPedidoText(estado: EstadoPedido): string {\n  switch (estado){\n    case EstadoPedido.INGRESADO: return PEDIDO_INGRESADO;\n    case EstadoPedido.APROBADO: return PEDIDO_APROBADO;\n    case EstadoPedido.CUMPLIDO: return PEDIDO_CUMPLIDO;\n    case EstadoPedido.CERRADO: return PEDIDO_CERRADO;\n    case EstadoPedido.ANULADO: return PEDIDO_ANULADO;\n    default: return PEDIDO_INVALIDO;\n  }\n}\n\n\nexport function numberToEstadoPedido(value: unknown): EstadoPedido {\n  if (!Number.isFinite(value)) return EstadoPedido.INVALIDO;\n\n  switch (value as number){\n    case EstadoPedido.INGRESADO: return EstadoPedido.INGRESADO;\n    case EstadoPedido.APROBADO: return EstadoPedido.APROBADO;\n    case EstadoPedido.CUMPLIDO: return EstadoPedido.CUMPLIDO;\n    case EstadoPedido.CERRADO: return EstadoPedido.CERRADO;\n    case EstadoPedido.ANULADO: return EstadoPedido.ANULADO;\n  }\n\n  return EstadoPedido.INVALIDO;\n}\n", "import { EstadoPedido } from \"src/domain/pedido/types\";\n\n\nexport function getEstadoPedidoColor(\n  estado: EstadoPedido,\n  suffix?: string\n): string {\n  let color: string;\n\n  switch (estado){\n    case EstadoPedido.INGRESADO: color='blue'; break;\n    case EstadoPedido.APROBADO: color='purple'; break;\n    case EstadoPedido.CUMPLIDO: color='green'; break;\n    case EstadoPedido.CERRADO: color='black'; break;\n    case EstadoPedido.ANULADO: color='red'; break;\n    default: color='gray';\n  }\n\n  if (suffix==null) return color;\n  \n  return `${color}${suffix}`;\n}\n", "import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n} from '@chakra-ui/react';\n\nexport const RenglonesEmpty = () => (\n  <Alert status='warning'>\n    <AlertIcon />\n    <AlertDescription>El pedido no cuenta con productos.</AlertDescription>\n  </Alert>\n);\n", "import { Alert, AlertDescription, AlertIcon } from '@chakra-ui/react';\n\nexport const RenglonesError = () => (\n  <Alert status='error'>\n    <AlertIcon />\n    <AlertDescription>\n      Ocurri\u00F3 un error al cargar los detalles del pedido.\n    </AlertDescription>\n  </Alert>\n);\n", "import { Box, Grid, GridItem } from '@chakra-ui/react';\n\nimport { FormInputSkeleton } from '~/components/form_elements/FormSkeletons';\n\nexport const RenglonesLoading = () => (\n  <Box\n    width={'full'}\n    sx={{\n      mt: 8,\n      mb: 4,\n    }}\n  >\n    <Grid templateColumns={'1fr'} alignItems={'center'} gap={2}>\n      <GridItem>\n        <FormInputSkeleton height={'20px'} />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton height={'20px'} />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton height={'20px'} />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton height={'20px'} />\n      </GridItem>\n    </Grid>\n  </Box>\n);\n", "import {\n  Grid,\n  GridItem,\n  Heading,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\nimport { formatNombreArticulo } from 'src/domain/articulo/utils';\n\nimport { RenglonPedidoAndRelationsResult } from 'src/domain/pedido/results';\nimport { TextPrice } from '~/components/TextPrice';\nimport { TextWordBreak } from '~/components/TextWordBreak';\n\ninterface RenglonesPedidoProps {\n  nro_pedido: string;\n  renglones: RenglonPedidoAndRelationsResult[];\n}\n\nexport const RenglonesPedido = ({\n  nro_pedido,\n  renglones,\n}: RenglonesPedidoProps) => {\n  return (\n    <TableContainer sx={{ p: 0, m: 0 }}>\n      <Table\n        variant='stripedHoverOverCard'\n        colorScheme='gray'\n        size={'sm'}\n        borderWidth={'1px'}\n      >\n        <Thead>\n          <Tr>\n            <Th sx={{ py: 2 }}>\n              <Grid\n                templateColumns={{ base: '1fr 1fr 1fr', md: '4fr 1fr 1fr 1fr' }}\n                gap={6}\n              >\n                <GridItem>\n                  <Heading fontSize={{ base: 'xs', md: 'sm' }}>\n                    Art\u00EDculo\n                  </Heading>\n                </GridItem>\n                <GridItem\n                  sx={{\n                    display: { base: 'none', md: 'block' },\n                  }}\n                >\n                  <Heading\n                    fontSize={{ base: 'xs', md: 'sm' }}\n                    textAlign={'center'}\n                  >\n                    Precio\n                  </Heading>\n                </GridItem>\n                <GridItem>\n                  <Heading\n                    fontSize={{ base: 'xs', md: 'sm' }}\n                    textAlign={'center'}\n                  >\n                    Cantidad\n                  </Heading>\n                </GridItem>\n                <GridItem>\n                  <Heading\n                    fontSize={{ base: 'xs', md: 'sm' }}\n                    textAlign={'center'}\n                  >\n                    Subtotal\n                  </Heading>\n                </GridItem>\n              </Grid>\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {renglones.map(\n            ({ id_articulo, nombre_articulo, descripcion_adicional, precio, cantidad, subtotal }) => (\n              <Tr key={`details-${nro_pedido}-${id_articulo}`}>\n                <Td>\n                  <Grid\n                    templateColumns={{\n                      base: '1fr 1fr 1fr',\n                      md: '4fr 1fr 1fr 1fr',\n                    }}\n                    gap={6}\n                  >\n                    <GridItem>\n                      <TextWordBreak>{ formatNombreArticulo(nombre_articulo, descripcion_adicional)}</TextWordBreak>\n                    </GridItem>\n                    <GridItem\n                      sx={{\n                        display: { base: 'none', md: 'block' },\n                      }}\n                    >\n                      <TextPrice precio={precio} />\n                    </GridItem>\n                    <GridItem>\n                      <Text textAlign={'center'}>{cantidad}</Text>\n                    </GridItem>\n                    <GridItem>\n                      <TextPrice precio={subtotal} moneda='$' />\n                    </GridItem>\n                  </Grid>\n                </Td>\n              </Tr>\n            )\n          )}\n        </Tbody>\n      </Table>\n    </TableContainer>\n  );\n};\n", "export function formatNombreArticulo(nombre: string, descriptionAdicional?: string): string {\n\n  const adicional = (descriptionAdicional ?? \"\").trim();\n\n  let result = nombre.trim();\n  if (adicional.length>0) result = `${result} (${adicional})`.trim();\n\n  return result;\n}\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { unimplementedApiResponse } from 'src/api-universal';\nimport { dxtVendedorGetCustomersEndpoint } from '!/api/dxt/endpoints';\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await dxtVendedorGetCustomersEndpoint.get(request, params);\n}\n\nexport const action = unimplementedApiResponse;\n", "import { VOIntegerRange, VOUInt32 } from \"@/value_objects\";\nimport { ValidationFunction } from \"@core/validate_schema\";\n\n\nexport const paginationOffsetValidator: ValidationFunction<number|undefined>\n= (v) => v != null ? new VOIntegerRange(v, 0, 1000000000).valueOf() : undefined;\n\nexport const paginationLimitValidator: ValidationFunction<number|undefined>\n= (v) => v != null ? new VOIntegerRange(v, 1, 1000).valueOf() : undefined;\n\nexport const tangoIdValidator: ValidationFunction<number>\n= (v) => new VOUInt32(v).valueOf();\n", "import { AlicuotaResult, AsientoResult, CondicionResult, DepositoResult, PerfilResult, TalonarioResult, TangoClienteResult, TangoParametrosResult, TangoVendedorResult, TransporteResult } from \"src/domain/tango/results\";\n\nimport { resolveScreenName } from \"../utils\";\nimport { ClienteModel, CLIENTE_ID_FIELD, VendedorModel, VENDEDOR_ID_FIELD, PerfilModel, TransporteModel, TRANSPORTE_ID_FIELD, DepositoModel, CondicionModel, AsientoModel, TalonarioModel, CONDICION_ID_FIELD, ASIENTO_ID_FIELD, TALONARIO_CODE_FIELD, TRANSPORTE_CODE_FIELD, PERFIL_CODE_FIELD, DEPOSITO_CODE_FIELD, VENDEDOR_NAME_COLUMNS, CLIENTE_NAME_COLUMNS, AlicuotaModel, ALICUOTA_CODE_FIELD, TangoParametrosModel, PERFIL_ID_FIELD } from \"../models\";\nimport { toBoolean } from \"@core/transformation\";\nimport { DXTErrorCode, DXTException } from \"src/domain/shared/errors\";\n\n\nexport const tangoClienteModelMapper = (m: ClienteModel): TangoClienteResult => {\n  const { [CLIENTE_ID_FIELD]: id, COD_CLIENT, HABILITADO } = m;\n\n  let screen_name = resolveScreenName(\n    CLIENTE_NAME_COLUMNS, m, COD_CLIENT\n  );\n\n  return { id, screen_name, habilitado: HABILITADO };\n}\n\n\nexport const tangoVendedorModelMapper = (m: VendedorModel): TangoVendedorResult => {\n  const { [VENDEDOR_ID_FIELD]: id, COD_VENDED, INHABILITA } = m;\n\n  let screen_name = resolveScreenName(\n    VENDEDOR_NAME_COLUMNS, m, COD_VENDED\n  );\n\n  const habilitado = !(INHABILITA??false);\n\n  return { id, screen_name, habilitado };\n}\n\n\nexport const tangoPerfilModelMapper = (m: PerfilModel): PerfilResult => {\n  const { [PERFIL_CODE_FIELD]: code, [PERFIL_ID_FIELD]: id, DESCRIPCIO } = m;\n  return { code, id, name: DESCRIPCIO };\n}\n\nexport const tangoTransporteModelMapper = (m: TransporteModel): TransporteResult => {\n  const { [TRANSPORTE_ID_FIELD]: id, [TRANSPORTE_CODE_FIELD]: codigoTransporte, NOMBRE_TRA } = m;\n  return { id, name: NOMBRE_TRA ?? codigoTransporte };\n}\n\nexport const tangoDepositoModelMapper = (m: DepositoModel): DepositoResult => {\n  const { [DEPOSITO_CODE_FIELD]: code, NOMBRE_SUC } = m;\n  return { code, name: NOMBRE_SUC ?? code };\n}\n\nexport const tangoCondicionModelMapper = (m: CondicionModel): CondicionResult => {\n  const { [CONDICION_ID_FIELD]: id, DESC_COND } = m;\n  return { id, name: DESC_COND ?? id.toString() };\n}\n\n\nexport const tangoAsientoModelMapper = (m: AsientoModel): AsientoResult => {\n  const { [ASIENTO_ID_FIELD]: id, TIPO_ASIEN: tipo, CONC_ASI, CONC_MOV } = m;\n\n  let name = CONC_ASI ?? \"\";\n  if (CONC_MOV!=null) name += \" \" + CONC_MOV;\n  if (name == \"\") name = tipo ?? \"\";\n  \n  return { id, tipo: tipo ?? \"\", name };\n}\n\n\nexport const tangoTalonarioModelMapper = (m: TalonarioModel): TalonarioResult => {\n  const { [TALONARIO_CODE_FIELD]: code, DESCRIP } = m;\n  return { code, name: DESCRIP ?? code.toString() };\n}\n\n\nexport const tangoAlicuotaModelMapper = (m: AlicuotaModel): AlicuotaResult => {\n  const { [ALICUOTA_CODE_FIELD]: code, DESCRIPCIO } = m;\n  return { code, name: DESCRIPCIO ?? code.toString() };\n}\n\n\nexport const tangoParametrosModelMapper = (m: TangoParametrosModel): TangoParametrosResult => {\n  const { PED_AUT_CO, PROX_NDOC } = m;\n\n  const idsPedidosAutomaticos = toBoolean(PED_AUT_CO, false);\n\n  const proximoId = PROX_NDOC;\n  if (proximoId == null || Number.isFinite(proximoId)) throw new DXTException(DXTErrorCode.TANGO_DB_INVALID_DATA, 'tangoParametrosModelMapper');\n\n  return {\n    idsPedidosAutomaticos,\n    proximoId,\n  }\n  \n}\n", "import { createTangoRepository } from './utils';\nimport { ALICUOTA_TABLE, ASIENTO_TABLE, CONDICION_TABLE, DEPOSITO_TABLE, TANGO_PARAMETROS_TABLE, PERFIL_TABLE, perfilModelColumns, TALONARIO_TABLE, TRANSPORTE_TABLE, VENDEDOR_TABLE, alicuotaModelColumns, asientoModelColumns, condicionModelColumns, depositoModelColumns, tangoParametrosModelColumns, talonarioModelColumns, transporteModelColumns, vendedorModelColumns, ALICUOTA_ID_FIELD, ASIENTO_ID_FIELD, CONDICION_ID_FIELD, DEPOSITO_ID_FIELD, TANGO_PARAMETROS_ID_FIELD, PERFIL_ID_FIELD, TALONARIO_ID_FIELD, TRANSPORTE_ID_FIELD, VENDEDOR_ID_FIELD } from './models';\nimport { tangoAlicuotaModelMapper, tangoAsientoModelMapper, tangoCondicionModelMapper, tangoDepositoModelMapper, tangoParametrosModelMapper, tangoPerfilModelMapper, tangoTalonarioModelMapper, tangoTransporteModelMapper, tangoVendedorModelMapper } from './model_mappers';\n\n\nexport const tangoParametrosRepository = createTangoRepository(TANGO_PARAMETROS_TABLE, TANGO_PARAMETROS_ID_FIELD, tangoParametrosModelMapper, tangoParametrosModelColumns);\n\nexport const alicuotaRepository = createTangoRepository(ALICUOTA_TABLE, ALICUOTA_ID_FIELD, tangoAlicuotaModelMapper, alicuotaModelColumns);\nexport const asientoRepository = createTangoRepository(ASIENTO_TABLE, ASIENTO_ID_FIELD, tangoAsientoModelMapper, asientoModelColumns);\nexport const condicionRepository = createTangoRepository(CONDICION_TABLE, CONDICION_ID_FIELD, tangoCondicionModelMapper, condicionModelColumns);\nexport const depositoRepository = createTangoRepository(DEPOSITO_TABLE, DEPOSITO_ID_FIELD, tangoDepositoModelMapper, depositoModelColumns);\nexport const perfilRepository = createTangoRepository(PERFIL_TABLE, PERFIL_ID_FIELD, tangoPerfilModelMapper, perfilModelColumns);\nexport const talonarioRepository = createTangoRepository(TALONARIO_TABLE, TALONARIO_ID_FIELD, tangoTalonarioModelMapper, talonarioModelColumns);\nexport const transporteRepository = createTangoRepository(TRANSPORTE_TABLE, TRANSPORTE_ID_FIELD, tangoTransporteModelMapper, transporteModelColumns);\n\n\nexport const vendedorRepository = createTangoRepository(VENDEDOR_TABLE, VENDEDOR_ID_FIELD, tangoVendedorModelMapper, vendedorModelColumns);\n", "import { CLIENTE_ID_FIELD, CLIENTE_TABLE, ClienteModel, clienteModelColumns, VENDEDOR_ID_FIELD } from \"./models\";\nimport { TangoProvider } from \"./tango.provider\";\nimport { tangoClienteModelMapper } from \"./model_mappers\";\nimport { TangoClienteResult } from \"src/domain/tango/results\";\n\n\nexport class ClienteRepository extends TangoProvider<ClienteModel, TangoClienteResult> {\n  constructor(){\n    super({\n      mainTable: CLIENTE_TABLE,\n      mainIdField: CLIENTE_ID_FIELD,\n      columns: clienteModelColumns,\n      sortField: 'RAZON_SOCI',\n    });\n  }\n  \n  async getAllByVendor(vendorId: number): Promise<TangoClienteResult[]> {\n    const cacheKey = `byVendor_${vendorId}`;\n\n    const cachedData = await this.cache.getMetadata<TangoClienteResult[]>(cacheKey);\n    if (cachedData) return cachedData;\n\n    const { mainTable, columns } = this.config;\n\n    const q = await this.getCompany();\n    const data = await q(mainTable).select(...columns ?? '*').where({\n      [VENDEDOR_ID_FIELD]: vendorId\n    });\n\n    const result = data.map(m => this.toResult(m));\n\n    await this.cache.setMetadata(cacheKey, result);\n\n    return result;\n  }\n\n  toResult(m: ClienteModel): TangoClienteResult {\n    return tangoClienteModelMapper(m);\n  }\n}\n\n\nexport const clienteRepository = new ClienteRepository();\n", "import { InferUnsafeInputFromSchema, InferValidatedInputFromSchema } from \"@/validate_schema\";\nimport { VOUInt32, VONotEmptyString, VOBoolean, VOIntegerRange, VOEmailAddress } from \"@/value_objects\";\nimport { validateInput } from \"src/domain/shared/validation\";\nimport { VODXTPassword } from \"src/domain/shared/value_objects\";\nimport { DIAS_DE_ENTREGA_MAX_DAYS, DIAS_DE_ENTREGA_MIN_DAYS } from \"../consts\";\n\n\nexport const updateUserInputSchema = {\n  tango_id: (v: number) => new VOUInt32(v),\n\n  username: (v: string) => new VONotEmptyString(v),\n  password: (v?: string) => v != null ?  new VODXTPassword(v) : undefined,\n\n  puede_crear_pedido: (v: boolean) => new VOBoolean(v),\n  puede_editar_pedido: (v: boolean) => new VOBoolean(v),\n  puede_anular_pedido: (v: boolean) => new VOBoolean(v),\n  borrar_pedido_al_anular: (v: boolean) => new VOBoolean(v),\n  perfil_facturacion_id: (v: number) => new VOUInt32(v),\n  aprobar_pedido_al_crear: (v: boolean) => new VOBoolean(v),\n  ver_pedidos_cumplidos: (v: boolean) => new VOBoolean(v),\n  dia_de_entrega: (v: number) => new VOIntegerRange(v, DIAS_DE_ENTREGA_MIN_DAYS, DIAS_DE_ENTREGA_MAX_DAYS),\n  email: (v?: string) => v != null ? new VOEmailAddress(v) : undefined,\n  ver_sin_precio: (v: boolean) => new VOBoolean(v),\n  mostrar_mensaje_de_advertencia: (v: boolean) => new VOBoolean(v),\n  \n  habilitado_en_dxt: (v: boolean) => new VOBoolean(v),\n}\n\n\nexport const insertUserInputSchema = {\n  ...updateUserInputSchema,\n  password: (v: string) => new VODXTPassword(v),\n}\n\n\nexport type UpdateUserInput = InferUnsafeInputFromSchema<typeof updateUserInputSchema>;\nexport type InsertUserInput = InferUnsafeInputFromSchema<typeof insertUserInputSchema>;\n\n\nexport const deleteUserInputSchema = {\n  username: (v: string) => new VONotEmptyString(v),\n}\n\n\nexport type DeleteUserInput = InferUnsafeInputFromSchema<typeof deleteUserInputSchema>;\nexport type DeleteUserInputValidated = InferValidatedInputFromSchema<typeof deleteUserInputSchema>;\n\nexport const validateDeleteUserInput = (input: DeleteUserInput) => validateInput(deleteUserInputSchema, input);\n", "import { InferUnsafeInputFromSchema, InferValidatedInputFromSchema } from \"@core/validate_schema\";\nimport { validateInput } from \"src/domain/shared/validation\";\nimport { updateUserInputSchema, insertUserInputSchema } from \"./user\";\n\n\nexport const updateClienteInputSchema = updateUserInputSchema;\nexport const insertClienteInputSchema = insertUserInputSchema;\n\nexport type UpdateClienteInput = InferUnsafeInputFromSchema<typeof updateClienteInputSchema>;\nexport type UpdateClienteInputValidated = InferValidatedInputFromSchema<typeof updateClienteInputSchema>;\n\nexport type InsertClienteInput = InferUnsafeInputFromSchema<typeof insertClienteInputSchema>;\nexport type InsertClienteInputValidated = InferValidatedInputFromSchema<typeof insertClienteInputSchema>;\n\nexport const validateUpdateClienteInput = (input: UpdateClienteInput) => validateInput(updateClienteInputSchema, input);\nexport const validateInsertClienteInput = (input: InsertClienteInput) => validateInput(insertClienteInputSchema, input);\n", "import { InferUnsafeInputFromSchema, InferValidatedInputFromSchema } from \"@core/validate_schema\";\nimport { validateInput } from \"src/domain/shared/validation\";\nimport { updateUserInputSchema, insertUserInputSchema } from \"./user\";\n\n\nexport const updateVendedorInputSchema = updateUserInputSchema;\nexport const insertVendedorInputSchema = insertUserInputSchema;\n\nexport type UpdateVendedorInput = InferUnsafeInputFromSchema<typeof updateVendedorInputSchema>;\nexport type UpdateVendedorInputValidated = InferValidatedInputFromSchema<typeof updateVendedorInputSchema>;\n\nexport type InsertVendedorInput = InferUnsafeInputFromSchema<typeof insertVendedorInputSchema>;\nexport type InsertVendedorInputValidated = InferValidatedInputFromSchema<typeof insertVendedorInputSchema>;\n\nexport const validateUpdateVendedorInput = (input: UpdateVendedorInput) => validateInput(updateVendedorInputSchema, input);\nexport const validateInsertVendedorInput = (input: InsertVendedorInput) => validateInput(insertVendedorInputSchema, input);\n", "import { DXTClienteUnsafe, DXTVendedorUnsafe } from \"../entities\";\n\n\nexport interface DXTClienteResult extends Omit<DXTClienteUnsafe, 'password_hash'> {\n  password_hash?: never\n}\n\nexport interface DXTVendedorResult extends Omit<DXTVendedorUnsafe, 'password_hash'> {\n  password_hash?: never\n}\n\n\nexport function clienteToSafeOutput(unsafe: DXTClienteUnsafe): DXTClienteResult {\n  const {\n    password_hash,\n    ...remaining\n  } = unsafe;\n\n  return remaining;\n}\n\n\nexport function vendedorToSafeOutput(unsafe: DXTVendedorUnsafe): DXTVendedorResult {\n  const {\n    password_hash,\n    ...remaining\n  } = unsafe;\n\n  return remaining;\n}\n", "import { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { type UserMinimalInfo } from 'src/domain/user/entities/user';\n\nimport { dxtClienteRepository } from '../../../infrastucture/dxt/dxt_cliente.repository';\nimport { dxtVendedorRepository } from '../../../infrastucture/dxt/dxt_vendedor.repository';\nimport { adminRootController } from '../../admin_root.controller';\nimport { paginationLimitValidator, paginationOffsetValidator, tangoIdValidator } from '!/api/validation/validators';\n\nimport { clienteRepository } from '!/infrastucture/auxiliar';\nimport { TangoClienteResult } from 'src/domain/tango/results';\n\nimport { UserRole } from 'src/domain/user/types';\nimport { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\nimport { authenticatedRootController } from '!/api/authenticated_root.controller';\nimport { validateInsertClienteInput, validateInsertVendedorInput, validateUpdateClienteInput, validateUpdateVendedorInput } from 'src/domain/dxt/inputs';\nimport { validateDeleteUserInput } from 'src/domain/dxt/inputs/user';\nimport { DXTApiOkResult } from 'src/api-universal';\nimport { DXTClienteResult, DXTVendedorResult, clienteToSafeOutput, vendedorToSafeOutput } from 'src/domain/dxt/results';\nimport { DXTUserRepository } from '!/infrastucture/dxt/dxt_user.repository';\nimport { optionalStringValidator } from '@core/validate_schema';\n\n\n\nexport function createDXTUserGetAllEndpoint(\n  repository: DXTUserRepository<any, any, any, any, any>\n) {\n\n  return createApiEndpoint(\n    adminRootController,\n\n    {\n      validation: {\n        query: {\n          offset: paginationOffsetValidator,\n          limit: paginationLimitValidator,\n          order: optionalStringValidator\n        }\n      }\n    },      \n    \n    async (req): Promise<UserMinimalInfo[]> => {\n      const { offset, limit, order } = req.validated.query; \n      return await repository.getAllWithRelations({ offset, limit });\n    }\n  );\n\n}\n\n\nexport const dxtClienteGetAllEndpoint = createDXTUserGetAllEndpoint(dxtClienteRepository);\n\n\nexport const dxtClienteGetOneEndpoint = createApiEndpoint(\n  adminRootController,\n  { validation: { params: { id: tangoIdValidator } } },\n  async (req): Promise<DXTClienteResult> => clienteToSafeOutput( await dxtClienteRepository.getById(req.validated.params.id) ),\n);\n\n\n\nexport const dxtClienteCreateEndpoint = createApiEndpoint(\n  adminRootController,\n  { validation: { body: validateInsertClienteInput } },\n  async (req): Promise<DXTClienteResult> => clienteToSafeOutput( await dxtClienteRepository.create(req.validated.body) ),\n);\n\n\n\nexport const dxtClienteUpdateEndpoint = createApiEndpoint(\n  adminRootController,\n\n  {\n    validation: {\n      params: { id: tangoIdValidator },        \n      body: validateUpdateClienteInput,\n    },\n  },\n\n  async (req): Promise<DXTClienteResult> => clienteToSafeOutput( await dxtClienteRepository.update(req.validated.params.id, req.validated.body) ),\n);\n\n\n\n\nexport const dxtClienteDeleteEndpoint = createApiEndpoint(\n  adminRootController,\n\n  {\n    validation: {\n      params: { id: tangoIdValidator },        \n      body: validateDeleteUserInput,\n    },\n  },\n\n  async (req): Promise<DXTApiOkResult> => {\n    await dxtClienteRepository.delete(req.validated.params.id, req.validated.body.username);\n    return { ok: true }\n  }\n);\n\n\nexport const dxtVendedorGetAllEndpoint = createDXTUserGetAllEndpoint(dxtVendedorRepository);\n\n\nexport const dxtVendedorGetOneEndpoint = createApiEndpoint(\n  adminRootController,\n  { validation: { params: { id: tangoIdValidator } } },\n  async (req): Promise<DXTVendedorResult> => vendedorToSafeOutput( await dxtVendedorRepository.getById(req.validated.params.id) ),\n  //async (req): Promise<DXTVendedorResult> => vendedorToSafeOutput( await dxtVendedorRepository.getUserWithRelationsById(req.validated.params.id, false) ),\n);\n\n\n\nexport const dxtVendedorCreateEndpoint = createApiEndpoint(\n  adminRootController,\n  { validation: { body: validateInsertVendedorInput } },\n  async (req): Promise<DXTVendedorResult> => vendedorToSafeOutput( await dxtVendedorRepository.create(req.validated.body) ),\n);\n\n\n\nexport const dxtVendedorUpdateEndpoint = createApiEndpoint(\n  adminRootController,\n\n  {\n    validation: {\n      params: { id: tangoIdValidator },        \n      body: validateUpdateVendedorInput,\n    },\n  },\n\n  async (req): Promise<DXTVendedorResult> => vendedorToSafeOutput ( await dxtVendedorRepository.update(req.validated.params.id, req.validated.body) ),\n);\n\n\nexport const dxtVendedorDeleteEndpoint = createApiEndpoint(\n  adminRootController,\n\n  {\n    validation: {\n      params: { id: tangoIdValidator },        \n      body: validateDeleteUserInput,\n    },\n  },\n\n  async (req): Promise<DXTApiOkResult> => {\n    await dxtVendedorRepository.delete(req.validated.params.id, req.validated.body.username);\n    return { ok: true }\n  }\n);\n\n\nexport const dxtVendedorGetCustomersEndpoint = createApiEndpoint(\n  authenticatedRootController,\n\n  undefined,\n\n  async (req): Promise<TangoClienteResult[]> => {\n    const { user } = req.auth;\n    const role = user.role.valueOf();\n    const tangoId = user.tangoId?.valueOf();\n\n    if (role !== UserRole.vendor) throw new DXTException(DXTErrorCode.SELLER_ROLE_REQUIRED);\n\n    if (typeof tangoId !== 'number') throw new DXTException(DXTErrorCode.UNEXPECTED_ERROR, 'dxtVendedorGetCustomersEndpoint');\n\n    return await clienteRepository.getAllByVendor(tangoId);\n  }\n);\n", "import { useNavigate } from '@remix-run/react';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { SettingsFormHeading } from '~/components/SettingsFormHeading';\n\nimport { FormCompany } from './components';\n\nexport default function Company() {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <SettingsFormHeading\n        title={'Empresa'}\n        actionButton={{\n          label: 'Cancelar',\n          buttonProps: {\n            colorScheme: 'gray',\n            onClick: () => {\n              navigate(URL_SETTINGS_PATH);\n            },\n          },\n        }}\n      />\n      <FormCompany />\n    </>\n  );\n}\n", "import { useEffect } from 'react';\n\nimport { useAppResources } from '#/app_resources/app_resources';\nimport { useTangoList } from '#/hooks/useTangoList';\nimport { promiseBasedToast } from '#/utils/promise_based_toast';\n\nimport { Box, Grid, GridItem, useToast } from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nimport {\n  FetchStateError,\n  FetchStateLoading,\n  FetchStateSuccess,\n} from '@core/react-hooks/useAxiosFetch';\nimport { useForm } from 'react-hook-form';\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { TangoCompanyInput } from 'src/domain/dictionary/inputs';\nimport { TangoCompaniesResult } from 'src/domain/dictionary/results';\nimport { API_DICTIONARY } from 'src/api-client/company/paths';\nimport { companyUpdateRequest } from 'src/api-client/company/requests';\nimport { CommonCard } from '~/components/CommonCard';\nimport { ControlledSelect } from '~/components/form_elements/ControlledSelect';\nimport { FormErrors } from '~/components/form_elements/FormErrors';\nimport { InlineError } from '~/components/InlineError';\nimport { SettingsFormsButtons } from '~/components/SettingsFormButtons';\n\nimport { yupValidationSchema } from '../validation';\n\nexport const Success = () => {\n  const app = useAppResources();\n\n  const toast = useToast();\n\n  type _InputSchema = yup.InferType<typeof yupValidationSchema>;\n\n  const { state: stateDictionary, result: resultDictionary } =\n    useTangoList<TangoCompaniesResult>({\n      url: API_DICTIONARY,\n      fieldsMap: {\n        label: 'name',\n        value: 'db_name',\n        isActive: 'is_active',\n      },\n    });\n\n  const {\n    handleSubmit,\n    control,\n    reset,\n    setError,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = useForm<_InputSchema>({\n    defaultValues: {\n      company: '',\n    },\n    resolver: yupResolver(yupValidationSchema),\n  });\n\n  const disableForm = isSubmitSuccessful || isSubmitting;\n\n  useEffect(() => {\n    // set the default value based on the isActive prop\n    if (stateDictionary instanceof FetchStateSuccess) {\n      const selectedIndex = resultDictionary.findIndex(\n        (x) => x.isActive === true\n      );\n\n      if (selectedIndex >= 0) {\n        reset({\n          company: resultDictionary[selectedIndex].value as string,\n        });\n      }\n    }\n  }, [stateDictionary]);\n\n  const onSubmit = async (data: _InputSchema) => {\n    const input: TangoCompanyInput = {\n      company: data.company,\n    };\n\n    const result = await companyUpdateRequest(input, app);\n\n    await promiseBasedToast({\n      toast,\n      result,\n      messages: {\n        success: { title: 'Empresa actualizada' },\n        error: { title: 'Ha ocurrido un error' },\n        loading: { title: 'Actualizando empresa' },\n      },\n    })\n      .then(() => {\n        app.navigate(URL_SETTINGS_PATH);\n      })\n      .catch((e) => {\n        setError('root', { message: e });\n      });\n  };\n\n  return (\n    <form noValidate onSubmit={handleSubmit(onSubmit)}>\n      <Box>\n        <FormErrors errors={errors} />\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem>\n              <ControlledSelect\n                fieldProps={{\n                  name: 'company',\n                  placeholder: 'Seleccione una empresa',\n                  options: resultDictionary,\n                  noOptionsMessage(obj) {\n                    return 'No hay empresas disponibles';\n                  },\n                  selectedOptionStyle: 'check',\n                  isLoading: stateDictionary instanceof FetchStateLoading,\n                }}\n                formControlProps={{\n                  isDisabled:\n                    disableForm ||\n                    !(stateDictionary instanceof FetchStateSuccess),\n                }}\n                formControlInnerProps={{\n                  label: 'Empresa activa',\n                }}\n                control={control}\n              />\n              {stateDictionary instanceof FetchStateError && (\n                <InlineError error={stateDictionary.errorOrNull().error} />\n              )}\n            </GridItem>\n            <GridItem></GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <SettingsFormsButtons isLoading={disableForm} />\n        </CommonCard>\n      </Box>\n    </form>\n  );\n};\n", "import { apiPath } from \"../shared\";\n\nexport const API_DICTIONARY = apiPath( '/dictionary' );\nexport const API_ACTIVE_COMPANY = apiPath( '/dictionary/active_company' );", "import { AppResources } from '#/app_resources/app_resources';\n\nimport { TangoCompanyInput } from 'src/domain/dictionary/inputs';\nimport { TangoCompanyResult } from 'src/domain/dictionary/results';\n\nimport { dxtApiRequest } from '../shared';\nimport { API_ACTIVE_COMPANY } from './paths';\n\nexport const companyUpdateRequest = async (\n  input: TangoCompanyInput,\n  app: AppResources\n) => {\n  return await dxtApiRequest<TangoCompanyResult, TangoCompanyInput>(\n    {\n      url: API_ACTIVE_COMPANY,\n      params: input,\n      method: 'POST',\n      silent: true,\n    },\n    app\n  );\n};\n", "import * as yup from 'yup';\n\nexport const yupValidationSchema = yup\n  .object({\n    company: yup.string().required('Seleccione una empresa activa'),\n  })\n  .required();\n", "import { Success } from './success';\n\nexport const FormCompany = () => {\n  return <Success />;\n};\n", "import { SettingsHome } from './components';\n\nexport default function Settings() {\n  return <SettingsHome />;\n}\n", "import { apiPath } from \"../shared\";\n\nexport const API_ADMIN_STATUS = apiPath( '/admin/status' );\n", "import { Skeleton, VStack } from '@chakra-ui/react';\n\nexport const Loading = () => (\n  <>\n    <VStack spacing={4} width={'full'}>\n      <Skeleton width={'full'} height={'70px'} borderRadius={'md'} />\n      <Skeleton width={'full'} height={'70px'} borderRadius={'md'} />\n      <Skeleton width={'full'} height={'120px'} borderRadius={'md'} />\n      <Skeleton width={'full'} height={'70px'} borderRadius={'md'} />\n    </VStack>\n  </>\n);\n", "import { useNavigate } from '@remix-run/react';\n\nimport { Box, Card, CardBody, Grid, GridItem, VStack } from '@chakra-ui/react';\n\nimport {\n  URL_SETTINGS_ARTICULOS_PRINT,\n  URL_SETTINGS_ARTICULOS_SCREEN,\n  URL_SETTINGS_COMPANY_PATH,\n  URL_SETTINGS_CUSTOMERS_PATH,\n  URL_SETTINGS_MISC_PATH,\n  URL_SETTINGS_TANGO_PATH,\n  URL_SETTINGS_VENDORS_PATH,\n} from 'src/config/url_paths';\nimport { AdminStatusResult } from 'src/domain/admin/results';\nimport { SettingsListButton } from '~/components/SettingsListButton';\nimport {\n  SettingsActionButtonState,\n  SettingsListItem,\n  SettingsListStatus,\n} from '~/components/SettingsListItem';\n\ninterface SuccessProps {\n  stateData: AdminStatusResult;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { stateData } = props;\n\n  const navigate = useNavigate();\n\n  const configSuccessful = stateData.dictionary_ok && stateData.company_ok;\n\n  return (\n    <>\n      <VStack spacing={4} width={'full'}>\n        <Box width={'full'}>\n          <SettingsListItem\n            title={'Conexi\u00F3n a Tango'}\n            subtitle={stateData.dictionary_error}\n            status={\n              stateData.dictionary_ok\n                ? SettingsListStatus.success\n                : SettingsListStatus.error\n            }\n            actionButtonState={SettingsActionButtonState.enabled}\n            actionButtonOnClick={() => {\n              navigate(URL_SETTINGS_TANGO_PATH);\n            }}\n          />\n        </Box>\n        <Box width={'full'}>\n          <SettingsListItem\n            title={'Empresa'}\n            subtitle={stateData.company_error}\n            status={\n              stateData.company_ok\n                ? SettingsListStatus.success\n                : SettingsListStatus.error\n            }\n            actionButtonState={\n              stateData.dictionary_ok\n                ? SettingsActionButtonState.enabled\n                : SettingsActionButtonState.disabled\n            }\n            actionButtonOnClick={() => {\n              navigate(URL_SETTINGS_COMPANY_PATH);\n            }}\n          />\n        </Box>\n\n        <Box width={'full'}>\n          <Card>\n            <CardBody>\n              <Grid\n                templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n                gap={4}\n              >\n                <GridItem textAlign={'center'}>\n                  <SettingsListButton\n                    buttonState={\n                      configSuccessful\n                        ? SettingsActionButtonState.enabled\n                        : SettingsActionButtonState.disabled\n                    }\n                    onClick={() => {\n                      navigate(URL_SETTINGS_CUSTOMERS_PATH);\n                    }}\n                  >\n                    Gesti\u00F3n de Clientes\n                  </SettingsListButton>\n                </GridItem>\n                <GridItem textAlign={'center'}>\n                  <SettingsListButton\n                    buttonState={\n                      configSuccessful\n                        ? SettingsActionButtonState.enabled\n                        : SettingsActionButtonState.disabled\n                    }\n                    onClick={() => {\n                      navigate(URL_SETTINGS_VENDORS_PATH);\n                    }}\n                  >\n                    Gesti\u00F3n de Vendedores\n                  </SettingsListButton>\n                </GridItem>\n                <GridItem textAlign={'center'}>\n                  <SettingsListButton\n                    buttonState={\n                      configSuccessful\n                        ? SettingsActionButtonState.enabled\n                        : SettingsActionButtonState.disabled\n                    }\n                    onClick={() => {\n                      navigate(URL_SETTINGS_ARTICULOS_SCREEN);\n                    }}\n                  >\n                    Tablas para Visualizaci\u00F3n\n                  </SettingsListButton>\n                </GridItem>\n                <GridItem textAlign={'center'}>\n                  <SettingsListButton\n                    buttonState={\n                      configSuccessful\n                        ? SettingsActionButtonState.enabled\n                        : SettingsActionButtonState.disabled\n                    }\n                    onClick={() => {\n                      navigate(URL_SETTINGS_ARTICULOS_PRINT);\n                    }}\n                  >\n                    Tablas para Impresi\u00F3n\n                  </SettingsListButton>\n                </GridItem>\n              </Grid>\n            </CardBody>\n          </Card>\n        </Box>\n        <Box width={'full'}>\n          <SettingsListItem\n            title={'Correo Saliente y Sesiones'}\n            actionButtonState={SettingsActionButtonState.enabled}\n            actionButtonOnClick={() => {\n              navigate(URL_SETTINGS_MISC_PATH);\n            }}\n          />\n        </Box>\n      </VStack>\n    </>\n  );\n};\n", "import { Button } from '@chakra-ui/react';\n\nimport { SettingsActionButtonState } from './SettingsListItem';\n\ninterface SettingsListButtonProps {\n  buttonState: SettingsActionButtonState;\n  onClick: () => void;\n  children: React.ReactNode;\n}\n\nexport const SettingsListButton = (props: SettingsListButtonProps) => {\n  const { buttonState, onClick, children } = props;\n\n  return (\n    <Button\n      onClick={onClick}\n      {...(buttonState === SettingsActionButtonState.disabled\n        ? {\n            isDisabled: true,\n          }\n        : {\n            colorScheme: 'blue',\n          })}\n      width={'full'}\n    >\n      {children}\n    </Button>\n  );\n};\n", "import {\n  Badge,\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Heading,\n  HStack,\n  Icon,\n  Text,\n} from '@chakra-ui/react';\n\nimport CheckCircleIcon from 'mdi-react/CheckCircleIcon.js';\nimport CloseCircleIcon from 'mdi-react/CloseCircleIcon.js';\n\nimport { SettingsListButton } from './SettingsListButton';\n\nexport enum SettingsListStatus {\n  error,\n  success,\n}\n\nexport enum SettingsActionButtonState {\n  enabled,\n  disabled,\n}\n\ninterface SettingsListProps {\n  title: string;\n  subtitle?: string;\n  actionButtonState: SettingsActionButtonState;\n  actionButtonOnClick: () => void;\n  status?: SettingsListStatus;\n}\n\nexport const SettingsListItem = (props: SettingsListProps) => {\n  const { status, title, subtitle, actionButtonState, actionButtonOnClick } =\n    props;\n\n  return (\n    <Card>\n      <CardBody>\n        <Grid\n          templateColumns={{ base: '1fr', md: '6fr 1fr' }}\n          alignItems={'center'}\n          gap={4}\n        >\n          <GridItem>\n            <HStack justifyContent={{ base: 'center', md: 'start' }}>\n              {status != null &&\n                (status === SettingsListStatus.success ? (\n                  <Icon as={CheckCircleIcon} color={'green.500'} boxSize={8} />\n                ) : (\n                  <Icon as={CloseCircleIcon} color={'red.500'} boxSize={8} />\n                ))}\n              <div>\n                <Heading size='md' textTransform='uppercase'>\n                  {title}\n                </Heading>\n                {subtitle != null && (\n                  <Badge colorScheme={'red'}>{subtitle}</Badge>\n                )}\n              </div>\n            </HStack>\n          </GridItem>\n\n          <GridItem textAlign={{ base: 'center', md: 'start' }}>\n            <SettingsListButton\n              buttonState={actionButtonState}\n              onClick={actionButtonOnClick}\n            >\n              Configurar\n            </SettingsListButton>\n          </GridItem>\n        </Grid>\n      </CardBody>\n    </Card>\n  );\n};\n", "import { useDXTApiFetch } from '#/hooks/useDXTApiFetch';\n\nimport { AdminStatusResult } from 'src/domain/admin/results';\nimport { API_ADMIN_STATUS } from 'src/api-client/admin/paths';\nimport { ApiErrors } from '~/components/ApiErrors';\n\nimport { Loading } from './loading';\nimport { Success } from './success';\n\nexport const SettingsHome = () => {\n  const { state, retry } = useDXTApiFetch<AdminStatusResult>({\n    url: API_ADMIN_STATUS,\n    silent: true,\n  });\n\n  return (\n    <>\n      {state.map({\n        loading: (_) => <Loading />,\n\n        error: ({ error }) => <ApiErrors error={error} retry={retry} />,\n\n        success: (state) => <Success stateData={state.data} />,\n      })}\n    </>\n  );\n};\n", "import { useNavigate } from '@remix-run/react';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { SettingsFormHeading } from '~/components/SettingsFormHeading';\n\nimport { FormTango } from './components';\n\nexport default function Tango() {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <SettingsFormHeading\n        title={'Conexi\u00F3n a Tango'}\n        actionButton={{\n          label: 'Cancelar',\n          buttonProps: {\n            colorScheme: 'gray',\n            onClick: () => {\n              navigate(URL_SETTINGS_PATH);\n            },\n          },\n        }}\n      />\n      <FormTango />\n    </>\n  );\n}\n", "import { apiPath } from \"../shared\";\n\nexport const API_SETTINGS_DB = apiPath( '/settings/db' );\nexport const API_SETTINGS_MISC = apiPath( '/settings/misc' );\n", "import { Box, Grid, GridItem } from '@chakra-ui/react';\n\nimport { FormInputSkeleton } from '~/components/form_elements/FormSkeletons';\n\nexport const Loading = () => (\n  <Box\n    width={'full'}\n    sx={{\n      mt: 8,\n      mb: 4,\n    }}\n  >\n    <Grid\n      templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n      alignItems={'center'}\n      gap={4}\n    >\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n    </Grid>\n  </Box>\n);\n", "import { useAppResources } from '#/app_resources/app_resources';\nimport { promiseBasedToast } from '#/utils/promise_based_toast';\n\nimport { Box, Grid, GridItem, useToast } from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nimport { useForm } from 'react-hook-form';\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { DBSettingsInput } from 'src/domain/settings/inputs';\nimport { DBSettingsResult } from 'src/domain/settings/results';\nimport { settingsDBUpdateRequest } from 'src/api-client/settings/requests';\nimport { CommonCard } from '~/components/CommonCard';\nimport { ControlledInput } from '~/components/form_elements/ControlledInput';\nimport { FormErrors } from '~/components/form_elements/FormErrors';\nimport { SettingsFormsButtons } from '~/components/SettingsFormButtons';\n\nimport { yupValidationSchema } from '../validation';\n\ninterface SuccessProps {\n  stateData: DBSettingsResult;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { stateData } = props;\n\n  const app = useAppResources();\n\n  const toast = useToast();\n\n  type _InputSchema = yup.InferType<typeof yupValidationSchema>;\n\n  const {\n    handleSubmit,\n    control,\n    reset,\n    setError,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = useForm<_InputSchema>({\n    defaultValues: stateData,\n    resolver: yupResolver(yupValidationSchema),\n  });\n\n  const disableForm = isSubmitSuccessful || isSubmitting;\n\n  const onSubmit = async (dataUnsafe: _InputSchema) => {\n    const input: DBSettingsInput = dataUnsafe;\n    const result = await settingsDBUpdateRequest(input, app);\n\n    await promiseBasedToast({\n      toast,\n      result,\n      messages: {\n        success: { title: 'Conexi\u00F3n a Tango actualizada' },\n        error: { title: 'Ha ocurrido un error' },\n        loading: { title: 'Actualizando conexi\u00F3n a Tango' },\n      },\n    })\n      .then(() => {\n        app.navigate(URL_SETTINGS_PATH);\n      })\n      .catch((e) => {\n        setError('root', { message: e });\n      });\n  };\n\n  return (\n    <form noValidate onSubmit={handleSubmit(onSubmit)}>\n      <Box>\n        <FormErrors errors={errors} />\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'db_host',\n                  id: 'db_host',\n                  type: 'text',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Host',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'db_port',\n                  id: 'db_port',\n                  type: 'number',\n                  inputMode: 'tel',\n                  htmlSize: 5,\n                  width: 'auto',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Puerto',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'db_user',\n                  id: 'db_user',\n                  type: 'text',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Usuario SQL',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'db_password',\n                  id: 'db_password',\n                  type: 'password',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Contrase\u00F1a SQL',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'tango_dictionary',\n                  id: 'tango_dictionary',\n                  type: 'text',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Diccionario base',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'db_connection_timeout_seconds',\n                  id: 'db_connection_timeout_seconds',\n                  type: 'number',\n                  inputMode: 'tel',\n                  htmlSize: 5,\n                  maxLength: 5,\n                  width: 'auto',\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Tiempo de espera (segundos)',\n                }}\n                control={control}\n              />\n            </GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <SettingsFormsButtons isLoading={disableForm} />\n        </CommonCard>\n      </Box>\n    </form>\n  );\n};\n", "import { AppResources } from '#/app_resources/app_resources';\nimport { DBSettingsInput, MiscSettingsInput } from 'src/domain/settings/inputs';\nimport { DBSettingsResult, MiscSettingsResult } from 'src/domain/settings/results';\nimport { dxtApiRequest } from '../shared';\nimport { API_SETTINGS_DB, API_SETTINGS_MISC } from './paths';\n\nexport const settingsDBUpdateRequest = async (\n  input: DBSettingsInput,\n  app: AppResources\n) => {\n  return await dxtApiRequest<DBSettingsResult, DBSettingsInput>(\n    {\n      url: API_SETTINGS_DB,\n      data: input,\n      method: 'POST',\n      silent: true\n    },\n    app\n  );\n};\n\nexport const settingsMiscUpdateRequest = async (\n  input: MiscSettingsInput,\n  app: AppResources\n) => {\n  return await dxtApiRequest<MiscSettingsResult, MiscSettingsInput>(\n    {\n      url: API_SETTINGS_MISC,\n      data: input,\n      method: 'POST',\n      silent: true\n    },\n    app\n  );\n};", "import { VOMSSqlDBName } from 'src/domain/db/value_objects/vo_mssql_db_name';\n\nimport { yupVOValidation } from 'src/yup/utils';\nimport * as yup from 'yup';\n\nimport { VOTCPPort } from '@core/value_objects';\nimport {\n  DB_CONNECTION_TIMEOUT_MAX_SECONDS,\n  DB_CONNECTION_TIMEOUT_MIN_SECONDS,\n} from 'src/domain/settings/consts';\n\nexport const yupValidationSchema = yup\n  .object({\n    db_host: yup.string().required('Ingrese el host de la base de datos'),\n    db_port: yup\n      .number()\n      .required('Ingrese un puerto')\n      .typeError('Ingrese un n\u00FAmero de puerto v\u00E1lido')\n\n      .test('is-port', 'Ingrese un puerto v\u00E1lido', (v) =>\n        yupVOValidation(VOTCPPort, v)\n      ),\n    db_user: yup.string().required('Ingrese el usuario de la base de datos'),\n    db_password: yup\n      .string()\n      .required('Ingrese la contrase\u00F1a de la base de datos'),\n    tango_dictionary: yup\n      .string()\n      .required('Ingrese el diccionario base de Tango')\n      .test(\n        'mssql-db-name',\n        'Ingrese un nombre de Diccionario base v\u00E1lido',\n        (v) => yupVOValidation(VOMSSqlDBName, v)\n      ),\n    db_connection_timeout_seconds: yup\n      .number()\n      .min(\n        DB_CONNECTION_TIMEOUT_MIN_SECONDS,\n        `El tiempo de espera debe ser mayor a ${DB_CONNECTION_TIMEOUT_MIN_SECONDS} segundos`\n      )\n      .max(\n        DB_CONNECTION_TIMEOUT_MAX_SECONDS,\n        `El tiempo de espera debe ser menor a ${DB_CONNECTION_TIMEOUT_MAX_SECONDS} segundos`\n      )\n      .required('Ingrese el tiempo de espera de la conexi\u00F3n a la base de datos')\n      .typeError(\n        'Ingrese el tiempo de espera de la conexi\u00F3n a la base de datos'\n      ),\n  })\n  .required();\n", "import { useDXTApiFetch } from '#/hooks/useDXTApiFetch';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { DBSettingsResult } from 'src/domain/settings/results';\nimport { API_SETTINGS_DB } from 'src/api-client/settings/paths';\nimport { ApiErrors } from '~/components/ApiErrors';\n\nimport { Loading } from './loading';\nimport { Success } from './success';\n\nexport const FormTango = () => {\n  const { state, retry } = useDXTApiFetch<DBSettingsResult>({\n    url: API_SETTINGS_DB,\n    silent: true,\n  });\n\n  return state.map({\n    loading: (_) => <Loading />,\n\n    error: ({ error }) => (\n      <ApiErrors\n        error={error}\n        retry={retry}\n        cancelAndNavigateTo={URL_SETTINGS_PATH}\n      />\n    ),\n\n    success: (state) => <Success stateData={state.data} />,\n  });\n};\n", "import { useNavigate } from '@remix-run/react';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { SettingsFormHeading } from '~/components/SettingsFormHeading';\n\nimport { FormMisc } from './components';\n\nexport default function Misc() {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <SettingsFormHeading\n        title={'Correo saliente y sesiones'}\n        actionButton={{\n          label: 'Cancelar',\n          buttonProps: {\n            colorScheme: 'gray',\n            onClick: () => {\n              navigate(URL_SETTINGS_PATH);\n            },\n          },\n        }}\n      />\n      <FormMisc />\n    </>\n  );\n}\n", "import { Box, Divider, Grid, GridItem } from '@chakra-ui/react';\n\nimport {\n  FormInputSkeleton,\n  FormTextareaSkeleton,\n} from '~/components/form_elements/FormSkeletons';\n\nexport const Loading = () => (\n  <Box\n    width={'full'}\n    sx={{\n      mt: 8,\n      mb: 4,\n    }}\n  >\n    <Grid\n      templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n      alignItems={'center'}\n      gap={4}\n    >\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormTextareaSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <Divider />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem colSpan={{ md: 2 }}>\n        <FormTextareaSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n      <GridItem>\n        <FormInputSkeleton />\n      </GridItem>\n    </Grid>\n  </Box>\n);\n", "import { useAppResources } from '#/app_resources/app_resources';\nimport { promiseBasedToast } from '#/utils/promise_based_toast';\n\nimport {\n  Box,\n  Divider,\n  Grid,\n  GridItem,\n  Heading,\n  useToast,\n} from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport * as yup from 'yup';\n\nimport { useForm } from 'react-hook-form';\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { MiscSettingsInput } from 'src/domain/settings/inputs';\nimport { MiscSettingsResult } from 'src/domain/settings/results';\nimport { settingsMiscUpdateRequest } from 'src/api-client/settings/requests';\nimport { CommonCard } from '~/components/CommonCard';\nimport { ControlledCheckbox } from '~/components/form_elements/ControlledCheckbox';\nimport { ControlledInput } from '~/components/form_elements/ControlledInput';\nimport { ControlledTextarea } from '~/components/form_elements/ControlledTextarea';\nimport { FormErrors } from '~/components/form_elements/FormErrors';\nimport { SettingsFormsButtons } from '~/components/SettingsFormButtons';\n\nimport { yupValidationSchema } from '../validation';\n\ninterface SuccessProps {\n  stateData: MiscSettingsResult;\n}\n\nexport const Success = (props: SuccessProps) => {\n  const { stateData } = props;\n\n  const app = useAppResources();\n\n  const toast = useToast();\n\n  type _InputSchema = yup.InferType<typeof yupValidationSchema>;\n\n  const {\n    handleSubmit,\n    control,\n    reset,\n    setError,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = useForm({\n    defaultValues: stateData,\n    resolver: yupResolver(yupValidationSchema),\n  });\n\n  const disableForm = isSubmitSuccessful || isSubmitting;\n\n  const onSubmit = async (dataUnsafe: _InputSchema) => {\n    const input: MiscSettingsInput = dataUnsafe;\n    const result = await settingsMiscUpdateRequest(input, app);\n\n    await promiseBasedToast({\n      toast,\n      result,\n      messages: {\n        success: { title: 'Configuraciones actualizadas' },\n        error: { title: 'Ha ocurrido un error' },\n        loading: { title: 'Actualizando configuraciones' },\n      },\n    })\n      .then(() => {\n        app.navigate(URL_SETTINGS_PATH);\n      })\n      .catch((e) => {\n        setError('root', { message: e });\n      });\n  };\n\n  return (\n    <form noValidate onSubmit={handleSubmit(onSubmit)}>\n      <Box>\n        <FormErrors errors={errors} />\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'smtp_host',\n                  id: 'smtp_host',\n                  type: 'text',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Hostname SMTP',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'smtp_username',\n                  id: 'smtp_username',\n                  type: 'text',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Usuario SMTP',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'smtp_password',\n                  id: 'smtp_password',\n                  type: 'text',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Contrase\u00F1a SMTP',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'smtp_port',\n                  id: 'smtp_port',\n                  type: 'number',\n                  inputMode: 'tel',\n                  htmlSize: 5,\n                  maxLength: 5,\n                  width: 'auto',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Puerto SMTP',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledCheckbox\n                control={control}\n                fieldProps={{\n                  id: 'smtp_use_tls',\n                  name: 'smtp_use_tls',\n                }}\n                formControlInnerProps={{\n                  text: 'Usar TLS',\n                }}\n              />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'auth_expiration_days',\n                  id: 'auth_expiration_days',\n                  type: 'number',\n                  inputMode: 'tel',\n                  htmlSize: 5,\n                  maxLength: 5,\n                  width: 'auto',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Tiempo de espera para logout',\n                  helperText: 'Expresado en d\u00EDas',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem>\n              <ControlledInput\n                fieldProps={{\n                  name: 'admin_email',\n                  id: 'admin_email',\n                  type: 'text',\n                  inputMode: 'email',\n                  htmlSize: 30,\n                  width: 'auto',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'Correo electr\u00F3nico Administrador',\n                }}\n                control={control}\n              />\n            </GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <Grid\n            templateColumns={{ base: '1fr', md: 'repeat(2,1fr)' }}\n            alignItems={'center'}\n            gap={4}\n          >\n            <GridItem colSpan={{ md: 2 }}>\n              <Heading size='sm' textTransform='uppercase'>\n                Comunicaci\u00F3n\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledInput\n                fieldProps={{\n                  name: 'user_warning_message_title',\n                  id: 'user_warning_message_title',\n                  type: 'text',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'T\u00EDtulo del mensaje de advertencia',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              Contenido del mensaje de advertencia\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledTextarea\n                fieldProps={{\n                  name: 'user_warning_message_content',\n                  id: 'user_warning_message_content',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <Divider />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledInput\n                fieldProps={{\n                  name: 'user_disabled_message_title',\n                  id: 'user_disabled_message_title',\n                  type: 'text',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                formControlInnerProps={{\n                  label: 'T\u00EDtulo del mensaje de inhabilitaci\u00F3n',\n                }}\n                control={control}\n              />\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              Contenido del mensaje de inhabilitaci\u00F3n\n            </GridItem>\n            <GridItem colSpan={{ md: 2 }}>\n              <ControlledTextarea\n                fieldProps={{\n                  name: 'user_disabled_message_content',\n                  id: 'user_disabled_message_content',\n                  isDisabled: disableForm,\n                }}\n                formControlProps={{\n                  isDisabled: disableForm,\n                }}\n                control={control}\n              />\n            </GridItem>\n          </Grid>\n        </CommonCard>\n        <CommonCard>\n          <SettingsFormsButtons isLoading={disableForm} />\n        </CommonCard>\n      </Box>\n    </form>\n  );\n};\n", "import {\n  Checkbox,\n  CheckboxProps,\n  Flex,\n  FormControl,\n  FormControlProps,\n  FormErrorMessage,\n  FormHelperText,\n} from '@chakra-ui/react';\n\nimport { Control, Controller, useController } from 'react-hook-form';\n\ninterface FieldProps extends CheckboxProps {\n  name: string;\n}\n\ninterface FormControlInnerProps {\n  text?: string | React.ReactNode;\n  helperAction?: string | React.ReactNode;\n  helperText?: string;\n}\n\ninterface ControlledCheckboxProps {\n  fieldProps: FieldProps;\n  formControlProps?: Omit<FormControlProps, 'isInvalid'>;\n  formControlInnerProps?: FormControlInnerProps;\n  control: Control<any>;\n}\n\nexport const ControlledCheckbox = (props: ControlledCheckboxProps) => {\n  const { fieldProps, formControlProps, formControlInnerProps, control } =\n    props;\n\n  const { name } = fieldProps;\n  const { text, helperText, helperAction } = formControlInnerProps || {};\n\n  const {\n    field: { ref, onChange, value },\n    fieldState: { invalid },\n    formState: { errors },\n  } = useController({\n    name: fieldProps.name,\n    control,\n  });\n\n  return (\n    <FormControl {...formControlProps} isInvalid={invalid} ref={ref}>\n      <Flex alignItems={'center'}>\n        <Checkbox {...fieldProps} onChange={onChange} isChecked={value}>\n          {text}\n        </Checkbox>\n        {helperAction}\n      </Flex>\n      {helperText != null && <FormHelperText>{helperText}</FormHelperText>}\n      {/* {errors != null && (\n        <FormErrorMessage>\n          <ErrorMessage name={'singleErrorInput'} errors={errors} />\n        </FormErrorMessage>\n      )} */}\n    </FormControl>\n  );\n};\n", "import { yupVOValidation } from 'src/yup/utils';\nimport * as yup from 'yup';\n\nimport { VOHost, VOTCPPort } from '@core/value_objects';\nimport {\n  AUTH_EXPIRATION_MAX_DAYS,\n  AUTH_EXPIRATION_MIN_DAYS,\n} from 'src/domain/settings/consts';\n\nexport const yupValidationSchema = yup\n  .object({\n    smtp_host: yup\n      .string()\n      .required('Ingrese el host SMTP')\n      .test('valid-host', 'Ingrese un host SMTP v\u00E1lido', (v) =>\n        yupVOValidation(VOHost, v)\n      ),\n    smtp_username: yup.string().required('Ingrese el usuario SMTP'),\n    smtp_password: yup.string().required('Ingrese la contrase\u00F1a SMTP'),\n    smtp_port: yup\n      .number()\n      .required('Ingrese el puerto SMTP')\n      .typeError('Ingrese un n\u00FAmero de puerto SMTP v\u00E1lido')\n      .test('is-port', 'Ingrese un puerto SMTP v\u00E1lido', (v) =>\n        yupVOValidation(VOTCPPort, v)\n      ),\n    smtp_use_tls: yup.boolean().required(),\n    auth_expiration_days: yup\n      .number()\n      .min(\n        AUTH_EXPIRATION_MIN_DAYS,\n        `El tiempo de espera debe ser mayor a ${AUTH_EXPIRATION_MIN_DAYS}`\n      )\n      .max(\n        AUTH_EXPIRATION_MAX_DAYS,\n        `El tiempo de espera debe ser menor a ${AUTH_EXPIRATION_MAX_DAYS}`\n      )\n      .required('Ingrese el tiempo de espera para logout')\n      .typeError('Ingrese el tiempo de espera para logout'),\n    admin_email: yup\n      .string()\n      .required('Ingrese el correo electr\u00F3nico del Administrador')\n      .email('Ingrese un correo electr\u00F3nico v\u00E1lido'),\n    user_warning_message_title: yup\n      .string()\n      .required('Ingrese el t\u00EDtulo del mensaje de advertencia'),\n    user_warning_message_content: yup\n      .string()\n      .required('Ingrese el contenido del mensaje de advertencia'),\n    user_disabled_message_title: yup\n      .string()\n      .required('Ingrese el t\u00EDtulo del mensaje de inhabilitaci\u00F3n'),\n    user_disabled_message_content: yup\n      .string()\n      .required('Ingrese el contenido del mensaje de inhabilitaci\u00F3n'),\n  })\n  .required();\n", "import { useDXTApiFetch } from '#/hooks/useDXTApiFetch';\n\nimport { URL_SETTINGS_PATH } from 'src/config/url_paths';\nimport { MiscSettingsResult } from 'src/domain/settings/results';\nimport { API_SETTINGS_MISC } from 'src/api-client/settings/paths';\nimport { ApiErrors } from '~/components/ApiErrors';\n\nimport { Loading } from './loading';\nimport { Success } from './success';\n\nexport const FormMisc = () => {\n  const { state, retry } = useDXTApiFetch<MiscSettingsResult>({\n    url: API_SETTINGS_MISC,\n    silent: true,\n  });\n\n  return state.map({\n    loading: (_) => <Loading />,\n\n    error: ({ error }) => (\n      <ApiErrors\n        error={error}\n        retry={retry}\n        cancelAndNavigateTo={URL_SETTINGS_PATH}\n      />\n    ),\n\n    success: (state) => <Success stateData={state.data} />,\n  });\n};\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { dxtVendedorDeleteEndpoint, dxtVendedorGetOneEndpoint, dxtVendedorUpdateEndpoint } from '!/api/dxt/endpoints';\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await dxtVendedorGetOneEndpoint.get(request, params);\n}\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  if (request.method === 'DELETE') {\n    return await dxtVendedorDeleteEndpoint.delete(request, params);\n  }\n\n  return await dxtVendedorUpdateEndpoint.patch(request, params);\n}\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { pedidoGetRowsEndpoint } from '!/api/pedido/endpoints/getRows';\n\nimport { unimplementedApiResponse } from 'src/api-universal';\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await pedidoGetRowsEndpoint.run(request, params);\n}\n\nexport const action = unimplementedApiResponse;\n", "import { ARTICULO_CODE_FIELD, ARTICULO_ID_FIELD } from \"!/infrastucture/articulo/models\";\nimport { DEPOSITO_ID_FIELD } from \"!/infrastucture/auxiliar/models\";\nimport { PEDIDO_CODE_FIELD, PEDIDO_ID_FIELD } from \"./pedido.model\";\n\nexport const RENGLON_PEDIDO_TABLE = 'GVA03';\n\nexport const RENGLON_PEDIDO_ID_FIELD = 'ID_GVA03' as const;\n\nexport const DEPOSITO_CODE2_FIELD = 'COD_DEPOSI' as const;\n\n\nexport interface RenglonPedidoModel {\n  [RENGLON_PEDIDO_ID_FIELD]: number;\n  \n  [PEDIDO_ID_FIELD]?: number;\n  [PEDIDO_CODE_FIELD]: string;\n\n  [ARTICULO_CODE_FIELD]?: string;\n  [ARTICULO_ID_FIELD]?: number;\n\n  N_RENGLON?: number;\n  CANT_A_DES?: number;\n  CANT_A_FAC?: number;\n  CANT_PEDID?: number;\n  PRECIO?: number;\n  DESCUENTO?: number;\n  PRECIO_LISTA?: number;\n  PRECIO_BONIF?: number;\n  DESCUENTO_PARAM?: number;\n}\n\n\nexport interface RenglonPedidoAndRelationsModel extends RenglonPedidoModel {\n  // Descripcion articulos\n  DESCRIPCIO?: string;\n  DESC_ADIC?: string;\n}\n\n\nexport interface FullRenglonPedidoModel extends RenglonPedidoModel {\n  CAN_EQUI_V?: number;\n  CANT_PEN_D?: number;\n  CANT_PEN_F?: number;\n  PEN_REM_FC?: number;\n  PEN_FAC_RE?: number;\n  TALON_PED: number;\n  COD_CLASIF?: string;\n  CANT_A_DES_2?: number;\n  CANT_A_FAC_2?: number;\n  CANT_PEDID_2?: number;\n  CANT_PEN_D_2?: number;\n  CANT_PEN_F_2?: number;\n  PEN_REM_FC_2?: number;\n  PEN_FAC_RE_2?: number;\n  ID_MEDIDA_VENTAS?: number;\n  ID_MEDIDA_STOCK_2?: number;\n  ID_MEDIDA_STOCK?: number;\n  UNIDAD_MEDIDA_SELECCIONADA?: string;\n  RENGL_PADR?: number;\n  PROMOCION?: boolean;\n  ID_NEXO_PEDIDOS_RENGLON_ORDEN?: number;\n  ROW_VERSION: Date;\n  CANT_A_DES_EXPORTADA?: number;\n  CANT_A_FAC_EXPORTADA?: number;\n  CANT_A_DES_2_EXPORTADA?: number;\n  CANT_A_FAC_2_EXPORTADA?: number;\n\n  [DEPOSITO_CODE2_FIELD]?: string;\n  [DEPOSITO_ID_FIELD]?: number;\n}\n\n\nexport const renglonPedidoModelColumns: Array<keyof RenglonPedidoModel> = [\n  RENGLON_PEDIDO_ID_FIELD,\n\n  PEDIDO_ID_FIELD,\n  PEDIDO_CODE_FIELD,\n\n  'N_RENGLON',\n\n  ARTICULO_ID_FIELD,\n  ARTICULO_CODE_FIELD,\n\n  'CANT_A_DES',\n  'CANT_A_FAC',\n  'CANT_PEDID',\n  'PRECIO',\n  'DESCUENTO',\n  'PRECIO_LISTA',\n  'PRECIO_BONIF',\n  'DESCUENTO_PARAM',\n];\n\n\nexport const fullRenglonPedidoModelColumns: Array<keyof FullRenglonPedidoModel> = [\n  ...renglonPedidoModelColumns,\n\n  'CAN_EQUI_V',\n  'CANT_PEN_D',\n  'CANT_PEN_F',\n  'PEN_REM_FC',\n  'PEN_FAC_RE',\n  'TALON_PED',\n  'COD_CLASIF',\n  'CANT_A_DES_2',\n  'CANT_A_FAC_2',\n  'CANT_PEDID_2',\n  'CANT_PEN_D_2',\n  'CANT_PEN_F_2',\n  'PEN_REM_FC_2',\n  'PEN_FAC_RE_2',\n  'ID_MEDIDA_VENTAS',\n  'ID_MEDIDA_STOCK_2',\n  'ID_MEDIDA_STOCK',\n  'UNIDAD_MEDIDA_SELECCIONADA',\n  'RENGL_PADR',\n  'PROMOCION',\n  'ID_NEXO_PEDIDOS_RENGLON_ORDEN',\n  'ROW_VERSION',\n  'CANT_A_DES_EXPORTADA',\n  'CANT_A_FAC_EXPORTADA',\n  'CANT_A_DES_2_EXPORTADA',\n  'CANT_A_FAC_2_EXPORTADA',\n  'COD_DEPOSI',\n  'ID_GVA21',\n  'ID_STA22',\n];\n\n\n/*\nIgnored columns\n\nFILLER?: string;\nCOD_ARTICU_KIT?: string;\nPRECIO_ADICIONAL_KIT?: number;\nKIT_COMPLETO?: boolean;\nINSUMO_KIT_SEPARADO?: boolean;\nPRECIO_FECHA?: string;\nFECHA_MODIFICACION_PRECIO?: string;\nUSUARIO_MODIFICACION_PRECIO?: string;\nTERMINAL_MODIFICACION_PRECIO?: string;\n\n*/", "import { WhereEntryOption } from \"!/infrastucture/shared/repository\";\nimport { CLIENTE_ID_FIELD, VENDEDOR_ID_FIELD } from \"!/infrastucture/auxiliar/models\";\n\nimport { UserRole } from \"src/domain/user/types\";\nimport { RenglonPedidoAndRelationsResult } from \"src/domain/pedido/results\";\nimport { RenglonWithIdPedido } from \"../types\";\n\n\nexport function getUserRoleWhere(role: UserRole, tangoUserId: number|undefined): WhereEntryOption|undefined {\n  switch (role.valueOf()) {\n    case UserRole.vendor:\n      return {\n        field: VENDEDOR_ID_FIELD,\n        value: tangoUserId,\n      };\n      break;\n\n    case UserRole.customer:\n      return {\n        field: CLIENTE_ID_FIELD,\n        value: tangoUserId,\n      };\n      break;\n  }\n\n  return undefined;\n}\n\n\n\nexport function removeIdPedidoFromRenglon(\n  renglon: RenglonWithIdPedido\n): RenglonPedidoAndRelationsResult {\n  const { id_pedido, ...remaining } = renglon;\n  return remaining;\n}\n", "import { RenglonPedidoAndRelationsResult, RenglonPedidoResult } from \"src/domain/pedido/results\";\nimport { RENGLON_PEDIDO_ID_FIELD, RenglonPedidoAndRelationsModel, RenglonPedidoModel } from \"../models/renglon_pedido.model\";\n\nimport { ARTICULO_CODE_FIELD } from \"!/infrastucture/articulo/models\";\nimport { NO_NAME, NONEXISTENT_PRODUCT } from \"src/texts/common\";\n\n\nexport const renglonPedidoModelMapper = (m: RenglonPedidoModel): RenglonPedidoResult => {\n  const {\n    [RENGLON_PEDIDO_ID_FIELD]: id,\n    [ARTICULO_CODE_FIELD]: codigoArticulo,\n    \n    PRECIO,\n    CANT_PEDID,\n    N_RENGLON,\n  } = m;\n\n  const precio = PRECIO ?? 0;\n  const cantidad = CANT_PEDID ?? 0;\n  const subtotal = precio * cantidad;\n\n  return {\n    id_articulo: id,\n    renglon: N_RENGLON ?? 0,\n    precio,\n    cantidad,\n    subtotal,\n  }\n}\n\n\n\nexport const renglonPedidoAndRelationsModelMapper = (m: RenglonPedidoAndRelationsModel): RenglonPedidoAndRelationsResult => {\n  const r = renglonPedidoModelMapper(m);\n\n  const { [ARTICULO_CODE_FIELD]: codigoArticulo, DESCRIPCIO, DESC_ADIC: descripcion_adicional } = m;\n\n  const nombre_articulo = DESCRIPCIO ?? (codigoArticulo==null ? NONEXISTENT_PRODUCT : NO_NAME);\n\n  return {\n    ...r,\n    nombre_articulo,\n    descripcion_adicional\n  }\n  \n}\n", "import { renglonPedidoModelColumns, RENGLON_PEDIDO_TABLE, type RenglonPedidoModel, RENGLON_PEDIDO_ID_FIELD, RenglonPedidoAndRelationsModel } from './models/renglon_pedido.model';\nimport { CompanyProvider } from '../company/company.provider';\nimport { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\n\nimport { UserRole } from 'src/domain/user/types';\nimport { GetAllOptions } from '../shared/repository';\nimport { getUserRoleWhere } from '!/infrastucture/pedido/utils';\nimport { RenglonesPedidosResult, RenglonPedidoAndRelationsResult, RenglonPedidoResult } from 'src/domain/pedido/results';\nimport { PEDIDO_CODE_FIELD, PEDIDO_ID_FIELD, PEDIDO_TABLE } from './models/pedido.model';\nimport { renglonPedidoAndRelationsModelMapper, renglonPedidoModelMapper } from './model_mappers/renglon_pedido.model_mapper';\nimport { ARTICULO_CODE_FIELD, ARTICULO_ID_FIELD, ARTICULO_NAME_COLUMNS, ARTICULO_TABLE } from '../articulo/models';\nimport { RenglonWithIdPedido } from './types';\n\n\nclass RenglonPedidoRepository extends CompanyProvider<number, RenglonPedidoModel, RenglonPedidoResult> {\n  private readonly mainColumns: string[];\n  private readonly pedidoColumns: string[];\n  private readonly articuloColumns: string[];\n\n  constructor(){\n    super({\n      mainTable: RENGLON_PEDIDO_TABLE,\n      mainIdField: RENGLON_PEDIDO_ID_FIELD,\n      columns: renglonPedidoModelColumns,\n      tableDependencies: [\n        ARTICULO_TABLE\n      ]\n    });\n    \n    const filteredColumns = renglonPedidoModelColumns.filter(c => c != PEDIDO_ID_FIELD && c!= ARTICULO_CODE_FIELD);\n    this.mainColumns = filteredColumns.map(c => `${RENGLON_PEDIDO_TABLE}.${c}`);\n\n    this.pedidoColumns = [`${PEDIDO_TABLE}.${PEDIDO_ID_FIELD}`];\n\n    this.articuloColumns = [ ...ARTICULO_NAME_COLUMNS, ARTICULO_CODE_FIELD ].map(c => `${ARTICULO_TABLE}.${c}`);\n  }\n\n\n\n  private async _getByWhere(whereColumn: string|undefined, whereValue: any): Promise<RenglonesPedidosResult> {\n\n    const cacheKey = `byWhere_${whereColumn??\"x\"}_${whereValue??\"x\"}`;\n\n    const resultFromCache = await this.cache.getMetadata<RenglonesPedidosResult>(cacheKey);\n    if (resultFromCache != null) return resultFromCache;\n\n    const { mainTable, columns } = this.config;\n\n    const q = await this.getCompany();\n\n    let query = q(mainTable);\n    \n    if (whereColumn!=null) query = query.where(whereColumn, whereValue);\n   \n\n    const rawData = await query\n      .select(...this.mainColumns, ...this.articuloColumns, ...this.pedidoColumns)\n      .leftOuterJoin(ARTICULO_TABLE, `${mainTable}.${ARTICULO_ID_FIELD}`, `${ARTICULO_TABLE}.${ARTICULO_ID_FIELD}`)\n      .innerJoin(PEDIDO_TABLE, `${mainTable}.${PEDIDO_CODE_FIELD}`, `${PEDIDO_TABLE}.${PEDIDO_CODE_FIELD}`)\n      .orderBy(PEDIDO_ID_FIELD);\n\n    if (rawData == null) throw new DXTException(DXTErrorCode.NOT_FOUND);\n\n    const data = rawData.map(renglonPedido => this.toRenglonWithIdPedido(renglonPedido));\n\n    let result: RenglonesPedidosResult = {};\n\n    let sliceBegin = 0;\n    let idPedidoPrev: number|undefined = undefined;\n\n    data.forEach((renglon, index) => {\n      if (idPedidoPrev!=null && idPedidoPrev != renglon.id_pedido) {\n        const sliceEnd = index;\n        result[idPedidoPrev] = data.slice(sliceBegin, sliceEnd);\n\n        sliceBegin = sliceEnd;\n      }\n\n      idPedidoPrev = renglon.id_pedido;\n    });\n\n    if (idPedidoPrev!=null) {\n      result[idPedidoPrev] = data.slice(sliceBegin, data.length);\n    }\n\n    await this.cache.setMetadata(cacheKey, result);\n\n    return result;\n  }\n\n\n  async getByIdPedido(idPedido: number): Promise<RenglonPedidoAndRelationsResult[]> {\n    const data = await this._getByWhere(PEDIDO_ID_FIELD, idPedido);\n    return data[idPedido] ?? [];\n  }\n\n\n  async getByNumeroPedido(numeroPedido: string): Promise<RenglonPedidoAndRelationsResult[]> {\n    const data = await this._getByWhere(PEDIDO_CODE_FIELD, numeroPedido);\n    return Object.values(data)[0] ?? [];\n  }\n\n\n  async getAllByUser(\n    role: UserRole,\n    tangoUserId: number|undefined,\n    options?: GetAllOptions\n  ): Promise<RenglonesPedidosResult> {\n    const where = getUserRoleWhere(role, tangoUserId);\n    return await this._getByWhere(where?.field, where?.value);\n  }\n\n\n  toResult(m: RenglonPedidoModel): RenglonPedidoResult {\n    return renglonPedidoModelMapper(m);\n  }\n\n  toResultAndRelations(m: RenglonPedidoAndRelationsModel): RenglonPedidoAndRelationsResult {\n    return renglonPedidoAndRelationsModelMapper(m);\n  }\n\n  toRenglonWithIdPedido(m: RenglonPedidoAndRelationsModel): RenglonWithIdPedido {\n    const id_pedido = m[PEDIDO_ID_FIELD];\n\n    if (id_pedido==null) throw new DXTException(DXTErrorCode.TANGO_DB_INVALID_DATA, 'RenglonPedidoRepository.toRenglonWithIdPedido');\n\n    return {\n      ...renglonPedidoAndRelationsModelMapper(m),\n      id_pedido,\n    }\n  }\n  \n\n}\n\n\nexport const renglonPedidoRepository = new RenglonPedidoRepository();\n", "\nimport { UserEntity } from \"src/domain/user/entities/user\";\n\nimport { renglonPedidoRepository } from \"!/infrastucture/pedido/renglon_pedido.repository\";\nimport { RenglonesPedidosResult } from \"src/domain/pedido/results\";\n\n\nexport async function getAllRowsPedidos(\n  user: UserEntity,\n): Promise<RenglonesPedidosResult> {\n\n  const role = user.role.valueOf();\n  const tangoId = user.tangoId?.valueOf();\n\n  const result = await renglonPedidoRepository.getAllByUser(\n    role,\n    tangoId,\n  );\n\n  return result;\n}\n", "import { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { authenticatedRootController } from '!/api/authenticated_root.controller';\n\nimport { getAllRowsPedidos } from '../services/getAllPedidosRows';\n\nexport const pedidoGetRowsEndpoint = createApiEndpoint(\n  authenticatedRootController,\n\n  undefined,\n  // {\n  //   validation: {\n  //     params: {\n  //       id: optionalIntegersValidator,\n  //       print: optionalBooleanValidator\n  //     }\n  //   }\n  // },\n\n  async (req) => {\n    // const { params } = req.validated;\n    return await getAllRowsPedidos(\n      req.auth.user,\n    );\n  },\n \n);\n", "import { LoaderFunctionArgs } from '@remix-run/node';\nimport { unimplementedApiResponse } from 'src/api-universal';\nimport { auxiliaresGetAllEndpoint } from '!/api/tango/endpoints';\n\nexport const loader = async (o: LoaderFunctionArgs) => await auxiliaresGetAllEndpoint.get(o.request, o.params);\n\nexport const action = unimplementedApiResponse;", "import { authenticatedRootController } from \"!/api/authenticated_root.controller\";\nimport { paginationLimitValidator, paginationOffsetValidator } from \"!/api/validation/validators\";\nimport { CompanyProvider } from \"!/infrastucture/company\";\n\nimport { ApiController, createApiEndpoint } from \"@depsel-nodejs/api-server\";\nimport { integerValidator } from \"@core/validate_schema\";\n\n\nexport function createCompanyGetOneEndpoint<M, R=M>(\n  repository: CompanyProvider<number, M, R>\n) {\n\n  return createApiEndpoint(\n    authenticatedRootController,\n\n    {\n      validation: {\n        params: { id: integerValidator }\n      }\n    },\n\n    async (req): Promise<R> => await repository.getById(req.validated.params.id),\n  );\n  \n}\n\n\n\nexport function createCompanyGetAllEndpoint<M, R=M>(\n  controller: ApiController,\n  repository: CompanyProvider<number, M, R>,\n) {\n\n  return createApiEndpoint(\n\n    controller,\n\n    /* *************************************************************************************************************** */\n\n    {\n      validation: {\n        query: {\n          offset: paginationOffsetValidator,\n          limit: paginationLimitValidator,\n        }\n      }\n    },\n\n    /* *************************************************************************************************************** */\n   \n    async (req): Promise<R[]> => {\n      const { offset, limit /*, order*/ } = req.validated.query;\n      const data = await repository.getAll({ offset, limit /*, order*/ });\n      return data;\n    },\n\n    /* *************************************************************************************************************** */\n  );\n  \n}\n", "import { asientoRepository, clienteRepository, condicionRepository, depositoRepository, perfilRepository, talonarioRepository, transporteRepository, vendedorRepository } from \"../../../infrastucture/auxiliar\";\nimport { authenticatedRootController } from \"!/api/authenticated_root.controller\";\nimport { createApiEndpoint } from \"@depsel-nodejs/api-server\";\n\nimport { createCompanyGetAllEndpoint } from \"!/api/company/utils\";\nimport { adminRootController } from \"!/api/admin_root.controller\";\nimport { AuxiliaresResult } from \"src/domain/tango/results\";\n\n\nexport const tangoClienteGetAllEndpoint = createCompanyGetAllEndpoint(\n  adminRootController,\n  clienteRepository,\n);\n\n\nexport const tangoVendedorGetAllEndpoint = createCompanyGetAllEndpoint(\n  adminRootController,\n  vendedorRepository,\n);\n\n\nexport const tangoPerfilGetAllEndpoint = createCompanyGetAllEndpoint(\n  authenticatedRootController,\n  perfilRepository,\n);\n\n\nexport const auxiliaresGetAllEndpoint = createApiEndpoint(\n  authenticatedRootController,\n\n  undefined,\n\n  async (req): Promise< AuxiliaresResult > => {\n\n    const [\n      transportes, depositos,\n      condiciones, asientos, talonarios,\n    ] = await Promise.all([\n      transporteRepository.getAll(),\n      depositoRepository.getAll(),\n      condicionRepository.getAll(),\n      asientoRepository.getAll(),\n      talonarioRepository.getAll(),\n    ]);\n\n    return {\n      transportes,\n      depositos,\n      condiciones,\n      asientos,\n      talonarios,\n    }\n  },\n\n);\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { dxtClienteDeleteEndpoint, dxtClienteGetOneEndpoint, dxtClienteUpdateEndpoint } from '!/api/dxt/endpoints';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await dxtClienteGetOneEndpoint.get(request, params);\n}\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  if (request.method === 'DELETE') {\n    return await dxtClienteDeleteEndpoint.delete(request, params);\n  }\n\n  return await dxtClienteUpdateEndpoint.patch(request, params);\n}\n", "", "import { LoaderFunctionArgs } from '@remix-run/node';\nimport { unimplementedApiResponse } from 'src/api-universal';\nimport { tangoVendedorGetAllEndpoint } from '!/api/tango/endpoints';\n\nexport const loader = async (o: LoaderFunctionArgs) => await tangoVendedorGetAllEndpoint.get(o.request, o.params);\n\nexport const action = unimplementedApiResponse;", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { authChangePasswordEndpoint } from '!/api/auth/endpoints/change_password';\n\nimport { unimplementedApiResponse } from 'src/api-universal';\n\nexport const loader = unimplementedApiResponse;\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  return await authChangePasswordEndpoint.post(request, params);\n}\n", "import { type InferUnsafeInputFromSchema } from '@core/validate_schema/validate_schema';\n\nimport { validateInput } from '../../shared/validation';\nimport { VODXTPassword } from '../../shared/value_objects';\n\n\nconst changePasswordInputValidationSchema = {\n  password: (v: string) => new VODXTPassword(v),\n}\n\nexport type ChangePasswordInput = InferUnsafeInputFromSchema<typeof changePasswordInputValidationSchema>;\n\nexport const validateChangePasswordInput = (input: ChangePasswordInput) => validateInput(changePasswordInputValidationSchema, input);\n", "import { authService } from '!/infrastucture/auth/auth.service';\nimport { authenticatedRootController } from '../../authenticated_root.controller';\n\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { type ChangePasswordInput, validateChangePasswordInput } from 'src/domain/auth/inputs/change_password.input';\n\n\nimport { DXTApiOkResult } from 'src/api-universal';\n\n\nexport const authChangePasswordEndpoint = createApiEndpoint(\n\n  authenticatedRootController,\n\n  /* *************************************************************************************************************** */\n\n  {\n    validation: {\n      body: (input: ChangePasswordInput) => validateChangePasswordInput(input),\n    },\n  },\n\n  /* *************************************************************************************************************** */\n\n  async (req): Promise<DXTApiOkResult> => {\n    const { password } = req.validated.body;\n\n    const { user } = req.auth;\n \n    await authService.changePassword(\n      user.role.valueOf(),\n      user.id.valueOf(),\n      password,\n    );\n\n    return { ok: true };\n  },\n\n  /* *************************************************************************************************************** */\n);\n", "import { ActionFunctionArgs, type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { pedidoCreateEndpoint } from '!/api/pedido/endpoints/create';\n\nimport { unimplementedApiResponse } from 'src/api-universal';\n\nexport const loader = unimplementedApiResponse;\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n  return await pedidoCreateEndpoint.post(request, params);\n}\n", "import { authenticatedRootController } from '!/api/authenticated_root.controller';\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\n\nexport const pedidoCreateEndpoint = createApiEndpoint(\n  authenticatedRootController,\n\n  undefined,\n\n  async (req) => {\n  },\n \n);\n", "import { getMiscSettingsEndpoint } from '!/api/settings/endpoints/getMisc';\nimport { updateMiscSettingsEndpoint } from '!/api/settings/endpoints/updateMisc';\nimport { type ActionFunctionArgs, type LoaderFunctionArgs } from '@remix-run/node';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await getMiscSettingsEndpoint.get(request, params);\n}\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n  return await updateMiscSettingsEndpoint.post(request, params);\n}\n", "import { adminRootController } from '!/api/admin_root.controller';\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { settingsService } from '!/infrastucture/settings/settings.repository';\n\nimport { type MiscSettingsResult } from 'src/domain/settings/results';\n\n\nexport const getMiscSettingsEndpoint = createApiEndpoint(\n  adminRootController,\n\n  undefined,\n\n  async (req): Promise<MiscSettingsResult> => {\n    const {\n      admin_password_hash,\n      ...remaining\n    } = await settingsService.getMiscSettings(true);\n\n    return remaining;\n  },\n\n);\n\n", "import { InferUnsafeInputFromSchema, InferValidatedInputFromSchema } from \"@core/validate_schema\";\nimport { VONotEmptyString, VOString, VOIntegerRange, VOTCPPort, VOHost, VOBoolean, VOEmailAddress } from \"@/value_objects\";\nimport { AUTH_EXPIRATION_MAX_DAYS, AUTH_EXPIRATION_MIN_DAYS, DB_CONNECTION_TIMEOUT_MAX_SECONDS, DB_CONNECTION_TIMEOUT_MIN_SECONDS } from \"../consts\";\nimport { validateInput } from \"src/domain/shared/validation\";\nimport { VOMSSqlDBName } from \"src/domain/db/value_objects/vo_mssql_db_name\";\n\n\nexport const dbSettingsInputSchema = {\n  db_host: (v: string) => new VONotEmptyString(v),\n  db_port: (v: number) => new VOTCPPort(v),\n  db_user: (v: string)=> new VONotEmptyString(v),\n  db_password: (v: string) => new VOString(v.trim()),\n  db_connection_timeout_seconds: (v: number) => new VOIntegerRange(v, DB_CONNECTION_TIMEOUT_MIN_SECONDS, DB_CONNECTION_TIMEOUT_MAX_SECONDS),\n\n  tango_dictionary: (v: string) => new VOMSSqlDBName(v),\n}\n\n\nexport const miscSettingsInputSchema = {\n  smtp_host: (v: string)=> new VOHost(v),\n  smtp_username: (v: string) => new VOString(v.trim()),\n  smtp_password: (v: string) => new VOString(v.trim()),\n  smtp_port: (v: number) => new VOTCPPort(v),\n  smtp_use_tls: (v: boolean) => new VOBoolean(v),\n\n  auth_expiration_days: (v: number) => new VOIntegerRange(v, AUTH_EXPIRATION_MIN_DAYS, AUTH_EXPIRATION_MAX_DAYS),\n\n  user_warning_message_title: (v: string) => new VONotEmptyString(v.trim()), \n  user_warning_message_content: (v: string) => new VONotEmptyString(v.trim()), \n\n  user_disabled_message_title: (v: string) => new VONotEmptyString(v.trim()), \n  user_disabled_message_content: (v: string) => new VONotEmptyString(v.trim()), \n\n  admin_email: (v: string) => new VOString( v.trim() === '' ? '' : new VOEmailAddress(v).valueOf() ),\n}\n\n\nexport type DBSettingsInput = InferUnsafeInputFromSchema<typeof dbSettingsInputSchema>;\nexport type DBSettingsValidated = InferValidatedInputFromSchema<typeof dbSettingsInputSchema>;\n\nexport const validateDBSettingsInput = (input: DBSettingsInput) => validateInput(dbSettingsInputSchema, input);\n\n\n\nexport type MiscSettingsInput = InferUnsafeInputFromSchema<typeof miscSettingsInputSchema>;\nexport type MiscSettingsValidated = InferValidatedInputFromSchema<typeof miscSettingsInputSchema>;\n\nexport const validateMiscSettingsInput = (input: MiscSettingsInput) => validateInput(miscSettingsInputSchema, input);\n", "import { adminRootController } from '!/api/admin_root.controller';\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { StoredMiscSettingsDTO } from '!/infrastucture/settings/dtos';\nimport { validateMiscSettingsInput } from 'src/domain/settings/inputs';\nimport { settingsService } from '!/infrastucture/settings/settings.repository';\nimport { emitBusEvent } from 'src/event_bus';\nimport { MiscSettingsChangedEvent } from 'src/domain/settings/events';\nimport { type MiscSettingsResult } from 'src/domain/settings/results';\n\n\nexport const updateMiscSettingsEndpoint = createApiEndpoint(\n\n  adminRootController,\n\n  /* *************************************************************************************************************** */\n    \n  {\n    validation: {\n      body: validateMiscSettingsInput,\n    },\n  },\n\n  /* *************************************************************************************************************** */\n\n  async (req): Promise<MiscSettingsResult> => {\n    const { body } = req.validated;\n\n    const oldSettings = await settingsService.getMiscSettings();\n    \n    const newSettingsDTO = new StoredMiscSettingsDTO({\n      admin_password_hash: oldSettings.admin_password_hash,\n      ...body,\n    });\n\n    const newSettings = await settingsService.setMiscSettings(newSettingsDTO);\n\n    const { auth_expiration_days: oldAuthExpirationDays } = oldSettings;\n    const { auth_expiration_days: newAuthExpirationDays } = newSettings;\n\n    const newAuthExpiration = oldAuthExpirationDays !== newAuthExpirationDays;\n\n    if (newAuthExpiration) emitBusEvent(\n      new MiscSettingsChangedEvent({\n        newAuthExpiration,\n      })\n    );\n\n    return body;\n  },\n\n  /* *************************************************************************************************************** */\n);\n", "import { LoaderFunctionArgs } from '@remix-run/node';\nimport { unimplementedApiResponse } from 'src/api-universal';\nimport { tangoClienteGetAllEndpoint } from '!/api/tango/endpoints';\n\nexport const loader = async (o: LoaderFunctionArgs) => await tangoClienteGetAllEndpoint.get(o.request, o.params);\n\nexport const action = unimplementedApiResponse;", "import { getAdminStatusEndpoint } from '!/api/admin/endpoints/getStatus';\nimport { LoaderFunctionArgs } from '@remix-run/node';\nimport { unimplementedApiResponse } from 'src/api-universal';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await getAdminStatusEndpoint.get(request, params);\n}\n\nexport const action = unimplementedApiResponse;", "import { TangoParametrosResult } from \"src/domain/tango/results\";\nimport { CompanyProvider } from \"./company.provider\";\nimport { TANGO_PARAMETROS_ID_FIELD, TANGO_PARAMETROS_TABLE, TangoParametrosModel } from \"../auxiliar/models\";\nimport { tangoParametrosModelMapper } from \"../auxiliar/model_mappers\";\n\n\nclass CompanyRepository extends CompanyProvider<number, TangoParametrosModel, TangoParametrosResult> {\n\n  constructor(){\n    super({\n      mainTable: TANGO_PARAMETROS_TABLE,\n      mainIdField: TANGO_PARAMETROS_ID_FIELD,\n      columns: [TANGO_PARAMETROS_ID_FIELD],\n    });\n  }\n\n  toResult(m: TangoParametrosModel): TangoParametrosResult {\n    return tangoParametrosModelMapper(m);\n  }\n\n}\n\n\nexport const companyRepository = new CompanyRepository();", "import { adminRootController } from '!/api/admin_root.controller';\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { settingsService } from '!/infrastucture/settings/settings.repository';\nimport { dictionaryRepository } from '!/infrastucture/dictionary';\nimport { TangoCompaniesResult } from 'src/domain/dictionary/results';\nimport { AdminStatusResult } from 'src/domain/admin/results';\nimport { companyRepository } from '!/infrastucture/company/company.repository';\nimport { DXTErrorCode, exceptionToDXTErrorInfo, isDXTException } from 'src/domain/shared/errors';\n\n\nexport const getAdminStatusEndpoint = createApiEndpoint(\n  \n  adminRootController,\n\n  /* *************************************************************************************************************** */\n\n  undefined,\n\n  /* *************************************************************************************************************** */\n\n  async (req): Promise<AdminStatusResult> => {\n    const dbSettings = await settingsService.getDBSettings(true);\n    const miscSettings = await settingsService.getMiscSettings(true);\n\n    let dictionary_ok = true;\n    let dictionary_error: string|undefined;\n    let company_ok = true;\n    let company_error: string|undefined;\n    let tangoError: unknown|undefined;\n\n    let companies: TangoCompaniesResult|null;\n    try{\n      companies = await dictionaryRepository.getCompanies();\n    }catch(e){\n      companies = null;\n      dictionary_ok = false;\n      const errorInfo = exceptionToDXTErrorInfo(e);\n      dictionary_error = errorInfo.error;\n\n      if (isDXTException(e, DXTErrorCode.TANGO_DB_ACCESS_ERROR)) tangoError = e;\n    }\n\n\n    try{\n      if (tangoError!=null) throw tangoError;\n      await companyRepository.getCompany();\n    } catch(e) {\n      company_ok = false;\n      const errorInfo = exceptionToDXTErrorInfo(e);\n      company_error = errorInfo.error;\n    }\n\n    const { admin_password_hash, ...misc } = miscSettings;\n    \n    return {\n      settings: {\n        db: dbSettings,\n        misc,\n      },\n      dictionary_ok,\n      dictionary_error,\n      company_ok,\n      company_error,\n      companies\n    }\n  },\n\n  /* *************************************************************************************************************** */\n);\n\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { authConnectEndpoint } from '!/api/auth/endpoints/connect';\n\nimport { unimplementedApiResponse } from 'src/api-universal';\n\nexport const loader = unimplementedApiResponse;\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  return await authConnectEndpoint.post(request, params);\n}\n", "import { AuthInfoResult, AuthPrivateResult } from \"src/domain/auth/results\";\n\n\nexport function authPrivateResultToPublic(auth: AuthPrivateResult): AuthInfoResult {\n  const {\n    auth_token, user, message_to_user\n  } = auth;\n\n  return {\n    auth_token,\n    user: user.toPublicInfo(),\n    message_to_user,\n  }\n\n}", "import { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\nimport { type AuthInfoResult } from 'src/domain/auth/results';\n\nimport {\n  type AuthenticatedApiRequest,\n  authenticatedRootController,\n} from '../../authenticated_root.controller';\nimport { authPrivateResultToPublic } from '../utils';\n\n\nexport const authConnectEndpoint = createApiEndpoint(\n  authenticatedRootController,\n  undefined,\n  async (req: AuthenticatedApiRequest): Promise<AuthInfoResult> => authPrivateResultToPublic(req.auth),\n);\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { dxtVendedorCreateEndpoint, dxtVendedorGetAllEndpoint } from '!/api/dxt/endpoints';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await dxtVendedorGetAllEndpoint.get(request, params);\n}\n\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  return await dxtVendedorCreateEndpoint.post(request, params);\n}\n", "import { LoaderFunctionArgs } from '@remix-run/node';\nimport { unimplementedApiResponse } from 'src/api-universal';\nimport { tangoPerfilGetAllEndpoint } from '!/api/tango/endpoints';\n\nexport const loader = async (o: LoaderFunctionArgs) => await tangoPerfilGetAllEndpoint.get(o.request, o.params);\n\nexport const action = unimplementedApiResponse;\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { authLogoutEndpoint } from '!/api/auth/endpoints/logout';\n\nimport { unimplementedApiResponse } from 'src/api-universal';\n\nexport const loader = unimplementedApiResponse;\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  return await authLogoutEndpoint.post(request, params);\n}\n", "import { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { type DXTApiOkResult } from 'src/api-universal';\n\nimport { authenticatedRootController } from '../../authenticated_root.controller';\nimport { authService } from '!/infrastucture/auth/auth.service';\n\n\nexport const authLogoutEndpoint = createApiEndpoint(\n  authenticatedRootController,\n\n  undefined,\n\n  async (req): Promise<DXTApiOkResult> => {\n    await authService.logout(req.auth.auth_token);\n    return { ok: true };\n  }\n);\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { dxtClienteCreateEndpoint, dxtClienteGetAllEndpoint } from '!/api/dxt/endpoints';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await dxtClienteGetAllEndpoint.get(request, params);\n}\n\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  return await dxtClienteCreateEndpoint.post(request, params);\n}\n", "import { getDBSettingsEndpoint } from '!/api/settings/endpoints/getDB';\nimport { updateDBSettingsEndpoint } from '!/api/settings/endpoints/updateDB';\nimport { type ActionFunctionArgs, type LoaderFunctionArgs } from '@remix-run/node';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await getDBSettingsEndpoint.get(request, params);\n}\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n  return await updateDBSettingsEndpoint.post(request, params);\n}\n", "import { adminRootController } from '!/api/admin_root.controller';\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\n\nimport { settingsService } from '!/infrastucture/settings/settings.repository';\nimport { DBSettingsResult } from 'src/domain/settings/results';\n\n\nexport const getDBSettingsEndpoint = createApiEndpoint(\n  adminRootController,\n  \n  undefined,\n\n  async (req): Promise<DBSettingsResult> => {\n    const storedDBSettings = await settingsService.getDBSettings(true);\n\n    const {\n      tango_active_company,\n      ...remaining\n    } = storedDBSettings;\n\n    return remaining;\n  },\n\n);\n\n", "import { adminRootController } from '!/api/admin_root.controller';\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\n\n\nimport { StoredDBSettingsDTO } from '!/infrastucture/settings/dtos';\nimport { validateDBSettingsInput } from 'src/domain/settings/inputs';\nimport { settingsService } from '!/infrastucture/settings/settings.repository';\nimport { emitBusEvent } from 'src/event_bus';\nimport { DBSettingsChangedEvent } from 'src/domain/settings/events';\nimport _ from 'lodash';\nimport { DBSettingsResult } from 'src/domain/settings/results';\n\n\nexport const updateDBSettingsEndpoint = createApiEndpoint(\n  adminRootController,\n\n  {\n    validation: {\n      body: validateDBSettingsInput,\n    },\n  },\n\n  async (req): Promise<DBSettingsResult> => {\n    const { body } = req.validated;\n\n    const oldSettings = await settingsService.getDBSettings();\n    \n    const newSettings = {\n      ...body,\n      tango_active_company: oldSettings.tango_active_company,\n    };\n\n    const { db_connection_timeout_seconds: oldTimeout, tango_active_company: oldCompany, ...oldRemainingData } = oldSettings;\n    const { db_connection_timeout_seconds: newTimeout, tango_active_company: ignoredCompany, ...newRemainingData } = newSettings;\n\n    const thereIsANewDictionary = !_.isEqual(oldRemainingData, newRemainingData);\n\n    const newCompany = thereIsANewDictionary ? '' : oldCompany;\n\n    const finalSettings = {\n      ...body,\n      tango_active_company: newCompany,\n    };\n\n    const finalSettingsDTO = new StoredDBSettingsDTO(finalSettings);\n\n    const thereIsANewCompany = oldCompany !== newCompany;\n\n    const passiveDBChanges = oldTimeout !== newTimeout && !thereIsANewDictionary && !thereIsANewCompany;\n\n    const anyChange = passiveDBChanges || thereIsANewDictionary || thereIsANewCompany;\n\n    await settingsService.setDBSettings(finalSettingsDTO);\n\n    if (anyChange ) emitBusEvent(\n      new DBSettingsChangedEvent({\n        passiveDBChanges,\n        newDictionary: thereIsANewDictionary,\n        newCompany: thereIsANewCompany,\n        resetCache: thereIsANewCompany,\n      })\n    );\n\n    const {\n      tango_active_company,\n      ...remaining\n    } = finalSettings;\n\n    return remaining;\n  },\n\n);\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { authLoginEndpoint } from '!/api/auth/endpoints/login';\n\nimport { unimplementedApiResponse } from 'src/api-universal';\n\nexport const loader = unimplementedApiResponse;\n\nexport async function action({ request, params }: LoaderFunctionArgs) {\n  return await authLoginEndpoint.post(request, params);\n}\n", "import { type InferUnsafeInputFromSchema } from '@core/validate_schema/validate_schema';\n\nimport { validateInput } from '../../shared/validation';\nimport { VODXTPassword } from '../../shared/value_objects';\nimport { VOUserName } from '../../user/value_objects';\nimport { VOString } from '@core/value_objects';\n\n\nconst loginUserInputValidationSchema = {\n  username: (v: string) => new VOUserName(v),\n  password: (v: string) => new VOString(v),\n}\n\nexport type LoginUserInput = InferUnsafeInputFromSchema<typeof loginUserInputValidationSchema>;\n\nexport const validateLoginUserInput = (input: LoginUserInput) => validateInput(loginUserInputValidationSchema, input);\n", "import { rootController } from '!/api/root.controller';\nimport { authService } from '!/infrastucture/auth/auth.service';\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { type LoginUserInput, validateLoginUserInput } from 'src/domain/auth/inputs/login_user.input';\n\nimport { type AuthInfoResult } from 'src/domain/auth/results';\nimport { authPrivateResultToPublic } from '../utils';\n\n\nexport const authLoginEndpoint = createApiEndpoint(\n  rootController,\n\n  {\n    validation: {\n      body: (input: LoginUserInput) => validateLoginUserInput(input),\n    },\n  },\n\n  async (req): Promise<AuthInfoResult> => {\n    const { username, password } = req.validated.body;\n\n    return authPrivateResultToPublic(\n      await authService.login(username, password)\n    );\n  },\n\n);\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\nimport { unimplementedApiResponse } from 'src/api-universal';\nimport { getCompaniesEndpoint } from '!/api/dictionary/endpoints/getCompanies';\n\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await getCompaniesEndpoint.get(request, params);\n}\n\nexport const action = unimplementedApiResponse;\n", "import { adminRootController } from '!/api/admin_root.controller';\nimport { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { type TangoCompaniesResult } from 'src/domain/dictionary/results';\n\nimport { dictionaryRepository } from '!/infrastucture/dictionary';\n\n\nexport const getCompaniesEndpoint = createApiEndpoint(\n  adminRootController,\n  \n  undefined,\n\n  async (req): Promise<TangoCompaniesResult> => {\n    return await dictionaryRepository.getCompanies();\n  },\n\n);\n\n", "import { Outlet } from '@remix-run/react';\n\nimport { AuthGuard } from '#/auth/AuthGuard';\n\nimport { Container } from '@chakra-ui/react';\n\nimport { ClientOnly } from '~/components/ClientOnly';\nimport { Navbar } from '~/components/Navbar';\n\nexport default function AuthorizedLayout() {\n  return (\n    <ClientOnly>\n      <AuthGuard>\n        <Navbar />\n        <Container maxW={'6xl'} sx={{ my: 4 }}>\n          <Outlet />\n        </Container>\n      </AuthGuard>\n    </ClientOnly>\n  );\n}\n", "// ** React Imports\nimport { useEffect } from 'react';\n\nimport { useLocation, useNavigate } from '@remix-run/react';\n\nimport { redirectLoginWithReturnUrl } from 'src/code.client/auth/utils';\n\n// ** Hooks Import\nimport {\n  AuthActionRefreshAll,\n  AuthStateLoggedIn,\n  useAuth,\n} from './auth_context';\n\nexport const AuthGuard = (props: any) => {\n  const { children } = props;\n\n  const { state: authState, dispatch: authDispatch } = useAuth();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (authState instanceof AuthStateLoggedIn) {\n      (async () => {\n        await authDispatch(new AuthActionRefreshAll(authState.userInfo));\n      })().catch((_) => {});\n    } else {\n      if (authState.isDisconnectedAndNotRedirecting()) {\n        redirectLoginWithReturnUrl(navigate);\n      }\n    }\n  }, [location, authState.constructor.name]);\n\n  if (authState.isLoggedIn()) {\n    return <>{children}</>;\n  }\n};\n", "import { useSyncExternalStore } from \"react\";\n\nfunction subscribe() {\n\treturn () => {};\n}\n\n/**\n * Return a boolean indicating if the JS has been hydrated already.\n * When doing Server-Side Rendering, the result will always be false.\n * When doing Client-Side Rendering, the result will always be false on the\n * first render and true from then on. Even if a new component renders it will\n * always start with true.\n *\n * Example: Disable a button that needs JS to work.\n * ```tsx\n * let hydrated = useHydrated();\n * return (\n *   <button type=\"button\" disabled={!hydrated} onClick={doSomethingCustom}>\n *     Click me\n *   </button>\n * );\n * ```\n */\nexport function useHydrated() {\n\treturn useSyncExternalStore(\n\t\tsubscribe,\n\t\t() => true,\n\t\t() => false,\n\t);\n}", "import { useHydrated } from '#/hooks/useHydrated';\n\ninterface Props {\n  /**\n   * You are encouraged to add a fallback that is the same dimensions\n   * as the client rendered children. This will avoid content layout\n   * shift which is disgusting\n   */\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\n/**\n * Render the children only after the JS has loaded client-side. Use an optional\n * fallback component if the JS is not yet loaded.\n *\n * Example: Render a Chart component if JS loads, renders a simple FakeChart\n * component server-side or if there is no JS. The FakeChart can have only the\n * UI without the behavior or be a loading spinner or skeleton.\n * ```tsx\n * return (\n *   <ClientOnly fallback={<FakeChart />}>\n *     {() => <Chart />}\n *   </ClientOnly>\n * );\n * ```\n */\nexport function ClientOnly({ children, fallback = null }: Props) {\n  return useHydrated() ? <>{children}</> : <>{fallback}</>;\n}\n", "import { useNavigate } from '@remix-run/react';\n\nimport { AuthActionLogout, useAuth } from '#/auth/auth_context';\n\nimport {\n  Box,\n  Flex,\n  HStack,\n  Icon,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\n\nimport LogoutIcon from 'mdi-react/LogoutIcon.js';\nimport MenuIcon from 'mdi-react/MenuIcon.js';\nimport { URL_PEDIDOS_PATH, URL_SETTINGS_PATH } from 'src/config/url_paths';\n\nimport { ColorModeSelector } from './ColorModeSelector';\nimport { LogoImage } from './LogoImage';\nimport { getUserRoleText } from 'src/domain/user/utils';\nimport { UserRole } from 'src/domain/user/types';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const Navbar = () => {\n  const { state: authState, dispatch: authDispatch } = useAuth();\n  const navigate = useNavigate();\n\n  const user = authState.userOrNull();\n  const userRoleText = user?.role!=null ? getUserRoleText(user?.role) : \"\";\n  \n  const _username = user?.screen_name.trim() ?? \"\";\n  \n  const userLabel = user?.role === UserRole.admin ? _username : `${userRoleText} ${_username}`;\n\n  return (\n    <Box\n      bg={useColorModeValue('gray.100', 'gray.900')}\n      sx={{\n        px: 4,\n      }}\n    >\n      <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n        <HStack spacing={4} alignItems={'center'}>\n          <Menu isLazy id='menu'>\n            <MenuButton\n              as={IconButton}\n              aria-label='Options'\n              icon={<MenuIcon />}\n              variant='outline'\n            />\n            <MenuList rootProps={{ zIndex: 2000 }}>\n              <MenuItem\n                onClick={() => {\n                  navigate(URL_PEDIDOS_PATH);\n                }}\n              >\n                Pedidos\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  navigate(URL_SETTINGS_PATH);\n                }}\n              >\n                Configuraciones\n              </MenuItem>\n            </MenuList>\n          </Menu>\n          <Box>\n            <LogoImage width={'80px'} alt='' />\n          </Box>\n        </HStack>\n        <Flex alignItems={'center'}>\n          <HStack spacing={4}>\n            <Box\n              display={{\n                base: 'none',\n                md: 'block',\n              }}\n            >\n              <Text>{userLabel}</Text>\n            </Box>\n            <IconButton\n              aria-label={'Desconectarse'}\n              onClick={async () => {\n                await authDispatch(new AuthActionLogout());\n              }}\n              isRound\n              icon={<Icon as={LogoutIcon} />}\n            />\n            <ColorModeSelector />\n          </HStack>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n", "import { Icon, IconButton, useColorMode } from '@chakra-ui/react';\n\nimport MoonWaningCrescentIcon from 'mdi-react/MoonWaningCrescentIcon.js';\nimport WeatherSunnyIcon from 'mdi-react/WeatherSunnyIcon.js';\n\nexport const ColorModeSelector = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <IconButton\n      aria-label={'Cambiar modo de color'}\n      onClick={toggleColorMode}\n      isRound\n      icon={\n        <Icon\n          as={colorMode === 'light' ? MoonWaningCrescentIcon : WeatherSunnyIcon}\n        />\n      }\n    />\n  );\n};\n", "import { Image, type ImageProps, useColorModeValue } from '@chakra-ui/react';\n\nexport const LogoImage = (props: ImageProps) => {\n  const logo = useColorModeValue('/logo-light.svg', '/logo-dark.svg');\n\n  return <Image src={logo} {...props} />;\n};\n", "export const USER_ROLE_CUSTOMER = 'Cliente';\nexport const USER_ROLE_VENDOR = 'Vendedor';\nexport const USER_ROLE_ADMIN = 'Administrador';\n", "import { UserRole } from \"../types\";\nimport { USER_ROLE_CUSTOMER, USER_ROLE_VENDOR, USER_ROLE_ADMIN } from \"src/texts/users\";\n\n\nexport function getUserRoleText(role: UserRole): string {\n  switch (role){\n    case UserRole.customer: return USER_ROLE_CUSTOMER;\n    case UserRole.vendor: return USER_ROLE_VENDOR;\n    default: return USER_ROLE_ADMIN;\n  }\n}\n", "import { type LoaderFunctionArgs } from '@remix-run/node';\n\nimport { pedidoGetAllEndpoint } from '!/api/pedido/endpoints/getAll';\n\nimport { unimplementedApiResponse } from 'src/api-universal';\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  return await pedidoGetAllEndpoint.get(request, params);\n}\n\nexport const action = unimplementedApiResponse;\n", "import { numberToEstadoPedido } from \"src/domain/pedido/utils\";\nimport { PEDIDO_ID_FIELD, PedidoAndRelationsModel, PedidoModel } from \"../models/pedido.model\";\nimport { PedidoAndRelationsResult, PedidoResult } from \"src/domain/pedido/results\";\nimport { resolveScreenName } from \"!/infrastucture/auxiliar/utils\";\nimport { CLIENTE_CODE_FIELD, CLIENTE_ID_FIELD, CLIENTE_NAME_COLUMNS, DEPOSITO_CODE_FIELD, TRANSPORTE_CODE_FIELD, TRANSPORTE_ID_FIELD, TRANSPORTE_NAME_COLUMNS, VENDEDOR_CODE_FIELD, VENDEDOR_ID_FIELD, VENDEDOR_NAME_COLUMNS } from \"!/infrastucture/auxiliar/models\";\nimport { DXTErrorCode, DXTException } from \"src/domain/shared/errors\";\n\n\nexport const pedidoModelMapper = (m: PedidoModel): PedidoResult => {\n  const {\n    [PEDIDO_ID_FIELD]: idPedido,\n    NRO_PEDIDO,\n    \n    [CLIENTE_ID_FIELD]: id_cliente, \n    [CLIENTE_CODE_FIELD]: codigo_cliente,\n    \n    [DEPOSITO_CODE_FIELD]: codigo_deposito,\n\n    [VENDEDOR_ID_FIELD]: id_vendedor,\n    [VENDEDOR_CODE_FIELD]: codigo_vendedor,\n\n    [TRANSPORTE_ID_FIELD]: id_transporte,\n    [TRANSPORTE_CODE_FIELD]: codigo_transporte,\n\n    FECHA_PEDI, FECHA_ENTR,\n    LEYENDA_4, LEYENDA_5,\n\n    TOTAL_PEDI,\n    PORC_DESC,\n\n    ESTADO\n  } = m;\n\n  if (codigo_cliente==null) throw new DXTException(DXTErrorCode.TANGO_DB_INVALID_DATA, 'pedidoModelMapper');\n\n  return {\n    id: idPedido,\n    numero_pedido: NRO_PEDIDO,\n    estado: numberToEstadoPedido(ESTADO),\n\n    codigo_cliente,\n    codigo_vendedor,\n    codigo_transporte,\n\n    fecha_emision: FECHA_PEDI!=null ? new Date(FECHA_PEDI) : undefined,\n    fecha_entrega: FECHA_ENTR!=null ? new Date(FECHA_ENTR) : undefined,\n\n    comentarios: LEYENDA_4??'' + LEYENDA_5??'',\n\n    total: TOTAL_PEDI ?? 0,\n    descuento:  PORC_DESC ?? 0,\n  };\n}\n\n\nexport const pedidoAndRelationsModelMapper = (m: PedidoAndRelationsModel): PedidoAndRelationsResult => {\n  const r = pedidoModelMapper(m);\n\n  const nombre_cliente = resolveScreenName(CLIENTE_NAME_COLUMNS, m);\n\n  const nombre_vendedor = r.codigo_vendedor!=null ? resolveScreenName(VENDEDOR_NAME_COLUMNS, m) : undefined;\n\n  const nombre_transporte = r.codigo_transporte!=null ? resolveScreenName(TRANSPORTE_NAME_COLUMNS, m) : undefined;\n\n  return {\n    ...r,\n    nombre_cliente,\n    nombre_vendedor,\n    nombre_transporte,\n  }\n}\n", "import { pedidoModelColumns, PEDIDO_TABLE, type PedidoModel, PEDIDO_ID_FIELD, PedidoAndRelationsModel } from './models/pedido.model';\nimport { CompanyProvider } from '../company/company.provider';\nimport { UserRole } from 'src/domain/user/types';\nimport { GetAllBasicOptions } from '../shared/repository';\nimport { getUserRoleWhere } from './utils';\nimport { DXTErrorCode, DXTException } from 'src/domain/shared/errors';\nimport { CLIENTE_NAME_COLUMNS, CLIENTE_TABLE, VENDEDOR_NAME_COLUMNS, VENDEDOR_TABLE, CLIENTE_ID_FIELD, VENDEDOR_ID_FIELD, TRANSPORTE_TABLE, TRANSPORTE_ID_FIELD, TRANSPORTE_NAME_COLUMNS } from '../auxiliar/models';\nimport { PedidoAndRelationsResult, PedidoResult } from 'src/domain/pedido/results';\nimport { pedidoAndRelationsModelMapper, pedidoModelMapper } from './model_mappers/pedido.model_mapper';\n\n\nclass PedidoRepository extends CompanyProvider<number, PedidoModel, PedidoResult> {\n  \n  constructor(){\n    super({\n      mainTable: PEDIDO_TABLE,\n      mainIdField: PEDIDO_ID_FIELD,\n      columns: pedidoModelColumns,\n      tableDependencies: [\n        CLIENTE_TABLE,\n        VENDEDOR_TABLE,\n        TRANSPORTE_TABLE,\n      ]\n    });\n  }\n  \n  async getAllByUser(\n    role: UserRole,\n    tangoUserId: number|undefined,\n    options?: GetAllBasicOptions\n  ): Promise<PedidoAndRelationsResult[]> {\n    const cacheKey = this.getAllByUserCacheKey(role, tangoUserId, options);\n\n    if (cacheKey!=null) {\n      const cachedData = await this.cache.getMetadata<PedidoAndRelationsResult[]>(cacheKey);\n      if (cachedData) return cachedData;\n    }\n\n    const { mainTable, columns } = this.config;\n\n    const q = await this.getCompany();\n\n    const where = getUserRoleWhere(role, tangoUserId);\n\n    let query = q(mainTable);\n    \n    if (where!=null) query = query.where(\n      `${mainTable}.${where.field}`, where.value\n    );\n\n    const mainColumns = (columns ?? ['*']).map(c => `${mainTable}.${c}`);\n    const clienteNombreColumns = CLIENTE_NAME_COLUMNS.map(c => `${CLIENTE_TABLE}.${c}`);\n    const vendedorNombreColumns = VENDEDOR_NAME_COLUMNS.map(c => `${VENDEDOR_TABLE}.${c}`);\n    const transporteNombreColumns = TRANSPORTE_NAME_COLUMNS.map(c => `${TRANSPORTE_TABLE}.${c}`);\n\n    const data = await query\n      .select(...mainColumns, ...clienteNombreColumns, ...vendedorNombreColumns, ...transporteNombreColumns)\n      .leftOuterJoin(CLIENTE_TABLE, `${mainTable}.${CLIENTE_ID_FIELD}`, `${CLIENTE_TABLE}.${CLIENTE_ID_FIELD}`)\n      .leftOuterJoin(VENDEDOR_TABLE, `${mainTable}.${VENDEDOR_ID_FIELD}`, `${VENDEDOR_TABLE}.${VENDEDOR_ID_FIELD}`)\n      .leftOuterJoin(TRANSPORTE_TABLE, `${mainTable}.${TRANSPORTE_ID_FIELD}`, `${TRANSPORTE_TABLE}.${TRANSPORTE_ID_FIELD}`)\n    ;\n\n    if (data == null) throw new DXTException(DXTErrorCode.NOT_FOUND);\n\n    const result = data.map(p => this.toResultWithRelations(p));\n\n    if (cacheKey!=null) await this.cache.setMetadata(cacheKey, result);\n   \n    return result;\n  }\n\n\n  toResult(m: PedidoModel): PedidoResult {\n    return pedidoModelMapper(m);\n  }\n\n\n  toResultWithRelations(m: PedidoAndRelationsModel ): PedidoAndRelationsResult {\n    return pedidoAndRelationsModelMapper(m);\n  }\n\n}\n\n\nexport const pedidoRepository = new PedidoRepository();\n", "import { pedidoRepository } from \"!/infrastucture/pedido/pedido.repository\";\n\nimport { UserEntity } from \"src/domain/user/entities/user\";\n\nimport { PedidoAndRelationsResult } from \"src/domain/pedido/results\";\nimport { EstadoPedido } from \"src/domain/pedido/types\";\n\n\nexport async function getAllPedidos(user: UserEntity ): Promise<PedidoAndRelationsResult[]> {\n\n  const role = user.role.valueOf();\n  const tangoId = user.tangoId?.valueOf();\n\n  const { verPedidosCumplidos } = user;\n\n  const result = (await pedidoRepository.getAllByUser(\n    role, tangoId,\n  )).filter(pedido => {\n    const { estado } = pedido;\n    if (estado == EstadoPedido.ANULADO || estado == EstadoPedido.INVALIDO) return false;\n\n    if (estado == EstadoPedido.CERRADO || estado == EstadoPedido.CUMPLIDO) {\n      return verPedidosCumplidos;\n    }\n\n    return true;\n  });\n\n  return result;\n}\n", "import { createApiEndpoint } from '@depsel-nodejs/api-server/ApiEndpoint';\n\nimport { authenticatedRootController } from '!/api/authenticated_root.controller';\nimport { getAllPedidos } from '../services/getAllPedidos';\n\n\nexport const pedidoGetAllEndpoint = createApiEndpoint(\n  authenticatedRootController,\n\n  undefined,\n\n  async (req) => {\n    return await getAllPedidos(req.auth.user);\n  },\n \n);\n", "import { Outlet } from '@remix-run/react';\n\nimport { AuthGuard } from '#/auth/AuthGuard';\n\nimport { Container } from '@chakra-ui/react';\n\nimport { ClientOnly } from '~/components/ClientOnly';\nimport { Navbar } from '~/components/Navbar';\n\nexport default function AdminLayout() {\n  return (\n    <ClientOnly>\n      <AuthGuard>\n        <Navbar />\n        <Container maxW={'2xl'} sx={{ my: 4 }}>\n          <Outlet />\n        </Container>\n      </AuthGuard>\n    </ClientOnly>\n  );\n}\n", "import { AuthActionLogin, useAuth } from '#/auth/auth_context';\n\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Center,\n  Container,\n  Heading,\n  Icon,\n  InputLeftElement,\n  ListItem,\n  UnorderedList,\n  VStack,\n} from '@chakra-ui/react';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { yupVOValidation } from 'src/yup/utils';\nimport * as yup from 'yup';\n\nimport AccountIcon from 'mdi-react/AccountIcon.js';\nimport LockIcon from 'mdi-react/LockIcon.js';\nimport { useForm } from 'react-hook-form';\nimport { type LoginUserInput } from 'src/domain/auth/inputs';\n// import { VODXTPassword } from 'src/domain/shared/value_objects';\nimport { VOUserName } from 'src/domain/user/value_objects';\nimport { appTexts } from 'src/texts/app';\nimport { ColorModeSelector } from '~/components/ColorModeSelector';\nimport { ControlledInput } from '~/components/form_elements/ControlledInput';\nimport { LogoImage } from '~/components/LogoImage';\n\nconst validationSchema: yup.ObjectSchema<LoginUserInput> = yup\n  .object({\n    username: yup\n      .string()\n      .required('Ingrese su nombre de usuario')\n      .test('test', 'Usuario no valido', (v) => yupVOValidation(VOUserName, v)),\n    password: yup.string().required('Ingrese su contrase\u00F1a'),\n  })\n  .required();\n\nexport default function Index() {\n  const { state: authState, dispatch: authDispatch } = useAuth();\n\n  const isSubmitting = authState.isLoading();\n\n  const {\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      username: '',\n      password: '',\n    },\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = async (data: LoginUserInput) => {\n    const dataToSubmit: LoginUserInput = {\n      username: data.username,\n      password: data.password,\n    };\n\n    await authDispatch(new AuthActionLogin(dataToSubmit));\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          position: 'absolute',\n          top: 3,\n          right: 4,\n        }}\n      >\n        <ColorModeSelector />\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          height: '100vh',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Container\n          maxWidth={'sm'}\n          sx={{\n            alignSelf: 'center',\n          }}\n        >\n          <Card>\n            <CardHeader>\n              <Center>\n                <LogoImage width={'160px'} alt='' />\n              </Center>\n            </CardHeader>\n            <CardBody>\n              <form noValidate onSubmit={handleSubmit(onSubmit)}>\n                <VStack spacing={4}>\n                  <Heading\n                    size={'sm'}\n                    sx={{\n                      textAlign: 'center',\n                      pb: 2,\n                    }}\n                  >\n                    {appTexts.welcome}\n                  </Heading>\n                  {(Object.keys(errors).length || authState.errorOrNull()) && (\n                    <Box width={'full'}>\n                      <Alert status={'error'} variant={'top-accent'}>\n                        <UnorderedList\n                          fontSize={'sm'}\n                          styleType={'none'}\n                          sx={{ m: 0 }}\n                        >\n                          {Object.keys(errors).length &&\n                            Object.values(errors).map((error, key) => (\n                              <ListItem key={key}>{error.message}</ListItem>\n                            ))}\n                          {authState.errorOrNull() && (\n                            <ListItem key='api_error'>\n                              {authState.errorOrNull()?.error}\n                            </ListItem>\n                          )}\n                        </UnorderedList>\n                      </Alert>\n                    </Box>\n                  )}\n                  <ControlledInput\n                    formControlInnerProps={{\n                      icon: (\n                        <InputLeftElement pointerEvents='none'>\n                          <Icon as={AccountIcon} />\n                        </InputLeftElement>\n                      ),\n                    }}\n                    fieldProps={{\n                      name: 'username',\n                      id: 'username',\n                      type: 'text',\n                      placeholder: 'Usuario',\n                    }}\n                    formControlProps={{\n                      isDisabled: isSubmitting,\n                    }}\n                    control={control}\n                  />\n                  <ControlledInput\n                    formControlInnerProps={{\n                      icon: (\n                        <InputLeftElement pointerEvents='none'>\n                          <Icon as={LockIcon} />\n                        </InputLeftElement>\n                      ),\n                    }}\n                    fieldProps={{\n                      name: 'password',\n                      id: 'password',\n                      type: 'password',\n                      placeholder: 'Contrase\u00F1a',\n                    }}\n                    formControlProps={{\n                      isDisabled: isSubmitting,\n                    }}\n                    control={control}\n                  />\n                  <Button type='submit' width='full' isLoading={isSubmitting}>\n                    Ingresar\n                  </Button>\n                </VStack>\n              </form>\n            </CardBody>\n          </Card>\n        </Container>\n      </Box>\n    </>\n  );\n}\n", "export const appTexts = {\n  welcome: 'Bienvenido al sistema de pedidos de Sorbalok Pinturas.',\n}\n", "import { lazy, Suspense } from 'react';\nimport { ClientOnly } from '~/components/ClientOnly';\n\nlet PDFRenderer = lazy(() => {\n  return import(\"./PDFRenderer.client\")\n});\n\nexport default function Index() {\n  return (\n    <ClientOnly>\n      <Suspense fallback={<div>Loading...</div>}>\n        <PDFRenderer />\n      </Suspense>\n    </ClientOnly>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-WEEGUKN7.js','imports':['/build/_shared/chunk-7VTVVVU3.js','/build/_shared/chunk-KYMAS5G7.js','/build/_shared/chunk-W7WA2KNM.js','/build/_shared/chunk-QF44Z2NU.js','/build/_shared/chunk-IZBLBPV4.js','/build/_shared/chunk-C6PYO3SA.js','/build/_shared/chunk-Z5QATG7W.js','/build/_shared/chunk-NPWDTVBI.js','/build/_shared/chunk-MIDFM7PG.js','/build/_shared/chunk-6OOH3HNM.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-MWH5XJAZ.js','imports':['/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin':{'id':'routes/_admin','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/_admin-RN2A2IMC.js','imports':['/build/_shared/chunk-NHVMKIAG.js','/build/_shared/chunk-LZIBTVFB.js','/build/_shared/chunk-RPM5OM45.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings._index':{'id':'routes/_admin.settings._index','parentId':'routes/_admin','path':'settings','index':true,'caseSensitive':undefined,'module':'/build/routes/_admin.settings._index-C2FWEYTX.js','imports':['/build/_shared/chunk-CI32EJ2Q.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings.company':{'id':'routes/_admin.settings.company','parentId':'routes/_admin','path':'settings/company','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_admin.settings.company-LPM6QMJT.js','imports':['/build/_shared/chunk-Y2FO4O2S.js','/build/_shared/chunk-32KCEIU6.js','/build/_shared/chunk-5RUXSYXT.js','/build/_shared/chunk-WPYMKATS.js','/build/_shared/chunk-G3GG5NMP.js','/build/_shared/chunk-FAFMUYJN.js','/build/_shared/chunk-GMH2WCGQ.js','/build/_shared/chunk-X2BW3OCG.js','/build/_shared/chunk-LKDVMBGW.js','/build/_shared/chunk-KG6KY45K.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings.lists.$type':{'id':'routes/_admin.settings.lists.$type','parentId':'routes/_admin','path':'settings/lists/:type','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_admin.settings.lists.$type-5F7746VE.js','imports':['/build/_shared/chunk-22PGUOAG.js','/build/_shared/chunk-WPYMKATS.js','/build/_shared/chunk-G3GG5NMP.js','/build/_shared/chunk-FAFMUYJN.js','/build/_shared/chunk-7ABW2NQY.js','/build/_shared/chunk-SS7UHKN2.js','/build/_shared/chunk-CI32EJ2Q.js','/build/_shared/chunk-KG6KY45K.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings.misc':{'id':'routes/_admin.settings.misc','parentId':'routes/_admin','path':'settings/misc','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_admin.settings.misc-UTCNM3SV.js','imports':['/build/_shared/chunk-UAH53UTH.js','/build/_shared/chunk-22PGUOAG.js','/build/_shared/chunk-WNBLH7AI.js','/build/_shared/chunk-SGTX3IAW.js','/build/_shared/chunk-WPYMKATS.js','/build/_shared/chunk-G3GG5NMP.js','/build/_shared/chunk-FAFMUYJN.js','/build/_shared/chunk-SS7UHKN2.js','/build/_shared/chunk-CI32EJ2Q.js','/build/_shared/chunk-KG6KY45K.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings.tango':{'id':'routes/_admin.settings.tango','parentId':'routes/_admin','path':'settings/tango','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_admin.settings.tango-YZ3ESYJ4.js','imports':['/build/_shared/chunk-UAH53UTH.js','/build/_shared/chunk-WNBLH7AI.js','/build/_shared/chunk-SGTX3IAW.js','/build/_shared/chunk-WPYMKATS.js','/build/_shared/chunk-G3GG5NMP.js','/build/_shared/chunk-FAFMUYJN.js','/build/_shared/chunk-SS7UHKN2.js','/build/_shared/chunk-CI32EJ2Q.js','/build/_shared/chunk-KG6KY45K.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings.users.$type._index':{'id':'routes/_admin.settings.users.$type._index','parentId':'routes/_admin','path':'settings/users/:type','index':true,'caseSensitive':undefined,'module':'/build/routes/_admin.settings.users.$type._index-YW7WBIXG.js','imports':['/build/_shared/chunk-6PIMX75I.js','/build/_shared/chunk-55WOQGXG.js','/build/_shared/chunk-7ABW2NQY.js','/build/_shared/chunk-SS7UHKN2.js','/build/_shared/chunk-CI32EJ2Q.js','/build/_shared/chunk-YMMPBFHU.js','/build/_shared/chunk-JJ4SMVFI.js','/build/_shared/chunk-LKDVMBGW.js','/build/_shared/chunk-KG6KY45K.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-FO6D3CQX.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings.users.customers.$id.edit':{'id':'routes/_admin.settings.users.customers.$id.edit','parentId':'routes/_admin','path':'settings/users/customers/:id/edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_admin.settings.users.customers.$id.edit-OELDJ633.js','imports':['/build/_shared/chunk-LX3JTX4F.js','/build/_shared/chunk-PWUAF5MN.js','/build/_shared/chunk-Y2FO4O2S.js','/build/_shared/chunk-WNBLH7AI.js','/build/_shared/chunk-32KCEIU6.js','/build/_shared/chunk-5RUXSYXT.js','/build/_shared/chunk-SGTX3IAW.js','/build/_shared/chunk-WPYMKATS.js','/build/_shared/chunk-G3GG5NMP.js','/build/_shared/chunk-FAFMUYJN.js','/build/_shared/chunk-GMH2WCGQ.js','/build/_shared/chunk-X2BW3OCG.js','/build/_shared/chunk-7ABW2NQY.js','/build/_shared/chunk-SS7UHKN2.js','/build/_shared/chunk-CI32EJ2Q.js','/build/_shared/chunk-YMMPBFHU.js','/build/_shared/chunk-JJ4SMVFI.js','/build/_shared/chunk-LKDVMBGW.js','/build/_shared/chunk-KG6KY45K.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-FO6D3CQX.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings.users.customers.add':{'id':'routes/_admin.settings.users.customers.add','parentId':'routes/_admin','path':'settings/users/customers/add','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_admin.settings.users.customers.add-27WEM3HI.js','imports':['/build/_shared/chunk-PWUAF5MN.js','/build/_shared/chunk-Y2FO4O2S.js','/build/_shared/chunk-WNBLH7AI.js','/build/_shared/chunk-32KCEIU6.js','/build/_shared/chunk-5RUXSYXT.js','/build/_shared/chunk-SGTX3IAW.js','/build/_shared/chunk-WPYMKATS.js','/build/_shared/chunk-G3GG5NMP.js','/build/_shared/chunk-FAFMUYJN.js','/build/_shared/chunk-GMH2WCGQ.js','/build/_shared/chunk-X2BW3OCG.js','/build/_shared/chunk-YMMPBFHU.js','/build/_shared/chunk-JJ4SMVFI.js','/build/_shared/chunk-LKDVMBGW.js','/build/_shared/chunk-KG6KY45K.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-FO6D3CQX.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings.users.vendors.$id.edit':{'id':'routes/_admin.settings.users.vendors.$id.edit','parentId':'routes/_admin','path':'settings/users/vendors/:id/edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_admin.settings.users.vendors.$id.edit-VFGFO3M6.js','imports':['/build/_shared/chunk-LX3JTX4F.js','/build/_shared/chunk-PWUAF5MN.js','/build/_shared/chunk-Y2FO4O2S.js','/build/_shared/chunk-WNBLH7AI.js','/build/_shared/chunk-32KCEIU6.js','/build/_shared/chunk-5RUXSYXT.js','/build/_shared/chunk-SGTX3IAW.js','/build/_shared/chunk-WPYMKATS.js','/build/_shared/chunk-G3GG5NMP.js','/build/_shared/chunk-FAFMUYJN.js','/build/_shared/chunk-GMH2WCGQ.js','/build/_shared/chunk-X2BW3OCG.js','/build/_shared/chunk-7ABW2NQY.js','/build/_shared/chunk-SS7UHKN2.js','/build/_shared/chunk-CI32EJ2Q.js','/build/_shared/chunk-YMMPBFHU.js','/build/_shared/chunk-JJ4SMVFI.js','/build/_shared/chunk-LKDVMBGW.js','/build/_shared/chunk-KG6KY45K.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-FO6D3CQX.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_admin.settings.users.vendors.add':{'id':'routes/_admin.settings.users.vendors.add','parentId':'routes/_admin','path':'settings/users/vendors/add','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_admin.settings.users.vendors.add-J7PU5G7N.js','imports':['/build/_shared/chunk-PWUAF5MN.js','/build/_shared/chunk-Y2FO4O2S.js','/build/_shared/chunk-WNBLH7AI.js','/build/_shared/chunk-32KCEIU6.js','/build/_shared/chunk-5RUXSYXT.js','/build/_shared/chunk-SGTX3IAW.js','/build/_shared/chunk-WPYMKATS.js','/build/_shared/chunk-G3GG5NMP.js','/build/_shared/chunk-FAFMUYJN.js','/build/_shared/chunk-GMH2WCGQ.js','/build/_shared/chunk-X2BW3OCG.js','/build/_shared/chunk-YMMPBFHU.js','/build/_shared/chunk-JJ4SMVFI.js','/build/_shared/chunk-LKDVMBGW.js','/build/_shared/chunk-KG6KY45K.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-FO6D3CQX.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_authorized':{'id':'routes/_authorized','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/_authorized-Q4MZSW2W.js','imports':['/build/_shared/chunk-NHVMKIAG.js','/build/_shared/chunk-LZIBTVFB.js','/build/_shared/chunk-RPM5OM45.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_authorized.change_password':{'id':'routes/_authorized.change_password','parentId':'routes/_authorized','path':'change_password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_authorized.change_password-NPP3NRNO.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_authorized.orders.$client.add':{'id':'routes/_authorized.orders.$client.add','parentId':'routes/_authorized','path':'orders/:client/add','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_authorized.orders.$client.add-X5MCXCZY.js','imports':['/build/_shared/chunk-22PGUOAG.js','/build/_shared/chunk-LZHR6XN2.js','/build/_shared/chunk-32KCEIU6.js','/build/_shared/chunk-5RUXSYXT.js','/build/_shared/chunk-SGTX3IAW.js','/build/_shared/chunk-G3GG5NMP.js','/build/_shared/chunk-FAFMUYJN.js','/build/_shared/chunk-GMH2WCGQ.js','/build/_shared/chunk-X2BW3OCG.js','/build/_shared/chunk-55WOQGXG.js','/build/_shared/chunk-CI32EJ2Q.js','/build/_shared/chunk-JJ4SMVFI.js','/build/_shared/chunk-LKDVMBGW.js','/build/_shared/chunk-5N5J5Z6Z.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_authorized.orders._index':{'id':'routes/_authorized.orders._index','parentId':'routes/_authorized','path':'orders','index':true,'caseSensitive':undefined,'module':'/build/routes/_authorized.orders._index-7ITCZVSY.js','imports':['/build/_shared/chunk-LZHR6XN2.js','/build/_shared/chunk-GMH2WCGQ.js','/build/_shared/chunk-X2BW3OCG.js','/build/_shared/chunk-6PIMX75I.js','/build/_shared/chunk-55WOQGXG.js','/build/_shared/chunk-SS7UHKN2.js','/build/_shared/chunk-CI32EJ2Q.js','/build/_shared/chunk-FO6D3CQX.js','/build/_shared/chunk-MQDBQWEI.js','/build/_shared/chunk-47TYDRZU.js','/build/_shared/chunk-5GPU2JBT.js','/build/_shared/chunk-X3JSFDBC.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-55655B7U.js','imports':['/build/_shared/chunk-LZIBTVFB.js','/build/_shared/chunk-WNBLH7AI.js','/build/_shared/chunk-SGTX3IAW.js','/build/_shared/chunk-FAFMUYJN.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.admin.status':{'id':'routes/api.admin.status','parentId':'root','path':'api/admin/status','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.admin.status-3C2MXNXW.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.auth.connect':{'id':'routes/api.auth.connect','parentId':'root','path':'api/auth/connect','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.auth.connect-JDZPQZTM.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.auth.login':{'id':'routes/api.auth.login','parentId':'root','path':'api/auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.auth.login-UN6TEREM.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.auth.logout':{'id':'routes/api.auth.logout','parentId':'root','path':'api/auth/logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.auth.logout-WHSRVSUH.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.auth.password':{'id':'routes/api.auth.password','parentId':'root','path':'api/auth/password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.auth.password-2XSZEBMT.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dictionary':{'id':'routes/api.dictionary','parentId':'root','path':'api/dictionary','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dictionary-A7CIGY74.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dictionary.active_company':{'id':'routes/api.dictionary.active_company','parentId':'routes/api.dictionary','path':'active_company','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dictionary.active_company-RVQGL77T.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dxt.cliente':{'id':'routes/api.dxt.cliente','parentId':'root','path':'api/dxt/cliente','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dxt.cliente-IKGIFIBM.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dxt.cliente.$id':{'id':'routes/api.dxt.cliente.$id','parentId':'routes/api.dxt.cliente','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dxt.cliente.$id-ERTX7XAA.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dxt.pedido.articulos.print_ids':{'id':'routes/api.dxt.pedido.articulos.print_ids','parentId':'root','path':'api/dxt/pedido/articulos/print_ids','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dxt.pedido.articulos.print_ids-B33WUFM5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dxt.pedido.articulos.print_list':{'id':'routes/api.dxt.pedido.articulos.print_list','parentId':'root','path':'api/dxt/pedido/articulos/print_list','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dxt.pedido.articulos.print_list-AMTTNVN2.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dxt.pedido.articulos.screen_list':{'id':'routes/api.dxt.pedido.articulos.screen_list','parentId':'root','path':'api/dxt/pedido/articulos/screen_list','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dxt.pedido.articulos.screen_list-G3S2Y65J.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dxt.vendedor':{'id':'routes/api.dxt.vendedor','parentId':'root','path':'api/dxt/vendedor','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dxt.vendedor-MDFNEY7D.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dxt.vendedor.$id':{'id':'routes/api.dxt.vendedor.$id','parentId':'routes/api.dxt.vendedor','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dxt.vendedor.$id-ZSOYWYLB.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.dxt.vendedor.cliente':{'id':'routes/api.dxt.vendedor.cliente','parentId':'routes/api.dxt.vendedor','path':'cliente','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.dxt.vendedor.cliente-CKRWQLVA.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.pedido':{'id':'routes/api.pedido','parentId':'root','path':'api/pedido','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.pedido-43TUG6KA.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.pedido.$id.edit':{'id':'routes/api.pedido.$id.edit','parentId':'routes/api.pedido','path':':id/edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.pedido.$id.edit-RUOFFYET.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.pedido.create':{'id':'routes/api.pedido.create','parentId':'routes/api.pedido','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.pedido.create-5OPZZKEO.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.pedido.renglones':{'id':'routes/api.pedido.renglones','parentId':'routes/api.pedido','path':'renglones','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.pedido.renglones-RCKYMHBG.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.settings.db':{'id':'routes/api.settings.db','parentId':'root','path':'api/settings/db','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.settings.db-TLOVPYFP.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.settings.misc':{'id':'routes/api.settings.misc','parentId':'root','path':'api/settings/misc','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.settings.misc-3ZKOBW4H.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.tango.auxiliares':{'id':'routes/api.tango.auxiliares','parentId':'root','path':'api/tango/auxiliares','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.tango.auxiliares-WJHYSHLQ.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.tango.cliente':{'id':'routes/api.tango.cliente','parentId':'root','path':'api/tango/cliente','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.tango.cliente-6PROXWGU.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.tango.perfil':{'id':'routes/api.tango.perfil','parentId':'root','path':'api/tango/perfil','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.tango.perfil-EZZDO7ME.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.tango.vendedor':{'id':'routes/api.tango.vendedor','parentId':'root','path':'api/tango/vendedor','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.tango.vendedor-DRWPH35Y.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/pdf':{'id':'routes/pdf','parentId':'root','path':'pdf','index':undefined,'caseSensitive':undefined,'module':'/build/routes/pdf-7I3CQJH2.js','imports':['/build/_shared/chunk-RPM5OM45.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'a1f11908','hmr':{'runtime':'/build/_shared/chunk-Z5QATG7W.js','timestamp':1712110404549},'url':'/build/manifest-A1F11908.js'};", "\nimport * as entryServer from \"/Volumes/ext/p/dxtango/src/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_admin.settings.users.customers.$id.edit/route.tsx\";\nimport * as route2 from \"./routes/_admin.settings.users.vendors.$id.edit/route.tsx\";\nimport * as route3 from \"./routes/api.dxt.pedido.articulos.screen_list.ts\";\nimport * as route4 from \"./routes/_admin.settings.users.customers.add/route.tsx\";\nimport * as route5 from \"./routes/api.dxt.pedido.articulos.print_list.ts\";\nimport * as route6 from \"./routes/_admin.settings.users.$type._index/route.tsx\";\nimport * as route7 from \"./routes/api.dxt.pedido.articulos.print_ids.ts\";\nimport * as route8 from \"./routes/_admin.settings.users.vendors.add/route.tsx\";\nimport * as route9 from \"./routes/_authorized.orders.$client.add/route.tsx\";\nimport * as route10 from \"./routes/api.dictionary.active_company.ts\";\nimport * as route11 from \"./routes/_admin.settings.lists.$type/route.tsx\";\nimport * as route12 from \"./routes/_authorized.change_password/route.tsx\";\nimport * as route13 from \"./routes/_authorized.orders._index/route.tsx\";\nimport * as route14 from \"./routes/api.dxt.vendedor.cliente.ts\";\nimport * as route15 from \"./routes/_admin.settings.company/route.tsx\";\nimport * as route16 from \"./routes/_admin.settings._index/route.tsx\";\nimport * as route17 from \"./routes/_admin.settings.tango/route.tsx\";\nimport * as route18 from \"./routes/_admin.settings.misc/route.tsx\";\nimport * as route19 from \"./routes/api.dxt.vendedor.$id.ts\";\nimport * as route20 from \"./routes/api.pedido.renglones.ts\";\nimport * as route21 from \"./routes/api.tango.auxiliares.ts\";\nimport * as route22 from \"./routes/api.dxt.cliente.$id.ts\";\nimport * as route23 from \"./routes/api.pedido.$id.edit.ts\";\nimport * as route24 from \"./routes/api.tango.vendedor.ts\";\nimport * as route25 from \"./routes/api.auth.password.ts\";\nimport * as route26 from \"./routes/api.pedido.create.ts\";\nimport * as route27 from \"./routes/api.settings.misc.ts\";\nimport * as route28 from \"./routes/api.tango.cliente.ts\";\nimport * as route29 from \"./routes/api.admin.status.ts\";\nimport * as route30 from \"./routes/api.auth.connect.ts\";\nimport * as route31 from \"./routes/api.dxt.vendedor.ts\";\nimport * as route32 from \"./routes/api.tango.perfil.ts\";\nimport * as route33 from \"./routes/api.auth.logout.ts\";\nimport * as route34 from \"./routes/api.dxt.cliente.ts\";\nimport * as route35 from \"./routes/api.settings.db.ts\";\nimport * as route36 from \"./routes/api.auth.login.ts\";\nimport * as route37 from \"./routes/api.dictionary.ts\";\nimport * as route38 from \"./routes/_authorized/route.tsx\";\nimport * as route39 from \"./routes/api.pedido.tsx\";\nimport * as route40 from \"./routes/_admin/route.tsx\";\nimport * as route41 from \"./routes/_index/route.tsx\";\nimport * as route42 from \"./routes/pdf/route.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_admin.settings.users.customers.$id.edit\": {\n      id: \"routes/_admin.settings.users.customers.$id.edit\",\n      parentId: \"routes/_admin\",\n      path: \"settings/users/customers/:id/edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_admin.settings.users.vendors.$id.edit\": {\n      id: \"routes/_admin.settings.users.vendors.$id.edit\",\n      parentId: \"routes/_admin\",\n      path: \"settings/users/vendors/:id/edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/api.dxt.pedido.articulos.screen_list\": {\n      id: \"routes/api.dxt.pedido.articulos.screen_list\",\n      parentId: \"root\",\n      path: \"api/dxt/pedido/articulos/screen_list\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/_admin.settings.users.customers.add\": {\n      id: \"routes/_admin.settings.users.customers.add\",\n      parentId: \"routes/_admin\",\n      path: \"settings/users/customers/add\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/api.dxt.pedido.articulos.print_list\": {\n      id: \"routes/api.dxt.pedido.articulos.print_list\",\n      parentId: \"root\",\n      path: \"api/dxt/pedido/articulos/print_list\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/_admin.settings.users.$type._index\": {\n      id: \"routes/_admin.settings.users.$type._index\",\n      parentId: \"routes/_admin\",\n      path: \"settings/users/:type\",\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/api.dxt.pedido.articulos.print_ids\": {\n      id: \"routes/api.dxt.pedido.articulos.print_ids\",\n      parentId: \"root\",\n      path: \"api/dxt/pedido/articulos/print_ids\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/_admin.settings.users.vendors.add\": {\n      id: \"routes/_admin.settings.users.vendors.add\",\n      parentId: \"routes/_admin\",\n      path: \"settings/users/vendors/add\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/_authorized.orders.$client.add\": {\n      id: \"routes/_authorized.orders.$client.add\",\n      parentId: \"routes/_authorized\",\n      path: \"orders/:client/add\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/api.dictionary.active_company\": {\n      id: \"routes/api.dictionary.active_company\",\n      parentId: \"routes/api.dictionary\",\n      path: \"active_company\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/_admin.settings.lists.$type\": {\n      id: \"routes/_admin.settings.lists.$type\",\n      parentId: \"routes/_admin\",\n      path: \"settings/lists/:type\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/_authorized.change_password\": {\n      id: \"routes/_authorized.change_password\",\n      parentId: \"routes/_authorized\",\n      path: \"change_password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/_authorized.orders._index\": {\n      id: \"routes/_authorized.orders._index\",\n      parentId: \"routes/_authorized\",\n      path: \"orders\",\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/api.dxt.vendedor.cliente\": {\n      id: \"routes/api.dxt.vendedor.cliente\",\n      parentId: \"routes/api.dxt.vendedor\",\n      path: \"cliente\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/_admin.settings.company\": {\n      id: \"routes/_admin.settings.company\",\n      parentId: \"routes/_admin\",\n      path: \"settings/company\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/_admin.settings._index\": {\n      id: \"routes/_admin.settings._index\",\n      parentId: \"routes/_admin\",\n      path: \"settings\",\n      index: true,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/_admin.settings.tango\": {\n      id: \"routes/_admin.settings.tango\",\n      parentId: \"routes/_admin\",\n      path: \"settings/tango\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/_admin.settings.misc\": {\n      id: \"routes/_admin.settings.misc\",\n      parentId: \"routes/_admin\",\n      path: \"settings/misc\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/api.dxt.vendedor.$id\": {\n      id: \"routes/api.dxt.vendedor.$id\",\n      parentId: \"routes/api.dxt.vendedor\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/api.pedido.renglones\": {\n      id: \"routes/api.pedido.renglones\",\n      parentId: \"routes/api.pedido\",\n      path: \"renglones\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/api.tango.auxiliares\": {\n      id: \"routes/api.tango.auxiliares\",\n      parentId: \"root\",\n      path: \"api/tango/auxiliares\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/api.dxt.cliente.$id\": {\n      id: \"routes/api.dxt.cliente.$id\",\n      parentId: \"routes/api.dxt.cliente\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/api.pedido.$id.edit\": {\n      id: \"routes/api.pedido.$id.edit\",\n      parentId: \"routes/api.pedido\",\n      path: \":id/edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/api.tango.vendedor\": {\n      id: \"routes/api.tango.vendedor\",\n      parentId: \"root\",\n      path: \"api/tango/vendedor\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/api.auth.password\": {\n      id: \"routes/api.auth.password\",\n      parentId: \"root\",\n      path: \"api/auth/password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/api.pedido.create\": {\n      id: \"routes/api.pedido.create\",\n      parentId: \"routes/api.pedido\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/api.settings.misc\": {\n      id: \"routes/api.settings.misc\",\n      parentId: \"root\",\n      path: \"api/settings/misc\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/api.tango.cliente\": {\n      id: \"routes/api.tango.cliente\",\n      parentId: \"root\",\n      path: \"api/tango/cliente\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/api.admin.status\": {\n      id: \"routes/api.admin.status\",\n      parentId: \"root\",\n      path: \"api/admin/status\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/api.auth.connect\": {\n      id: \"routes/api.auth.connect\",\n      parentId: \"root\",\n      path: \"api/auth/connect\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route30\n    },\n  \"routes/api.dxt.vendedor\": {\n      id: \"routes/api.dxt.vendedor\",\n      parentId: \"root\",\n      path: \"api/dxt/vendedor\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route31\n    },\n  \"routes/api.tango.perfil\": {\n      id: \"routes/api.tango.perfil\",\n      parentId: \"root\",\n      path: \"api/tango/perfil\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route32\n    },\n  \"routes/api.auth.logout\": {\n      id: \"routes/api.auth.logout\",\n      parentId: \"root\",\n      path: \"api/auth/logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route33\n    },\n  \"routes/api.dxt.cliente\": {\n      id: \"routes/api.dxt.cliente\",\n      parentId: \"root\",\n      path: \"api/dxt/cliente\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route34\n    },\n  \"routes/api.settings.db\": {\n      id: \"routes/api.settings.db\",\n      parentId: \"root\",\n      path: \"api/settings/db\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route35\n    },\n  \"routes/api.auth.login\": {\n      id: \"routes/api.auth.login\",\n      parentId: \"root\",\n      path: \"api/auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route36\n    },\n  \"routes/api.dictionary\": {\n      id: \"routes/api.dictionary\",\n      parentId: \"root\",\n      path: \"api/dictionary\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route37\n    },\n  \"routes/_authorized\": {\n      id: \"routes/_authorized\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route38\n    },\n  \"routes/api.pedido\": {\n      id: \"routes/api.pedido\",\n      parentId: \"root\",\n      path: \"api/pedido\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route39\n    },\n  \"routes/_admin\": {\n      id: \"routes/_admin\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route40\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route41\n    },\n  \"routes/pdf\": {\n      id: \"routes/pdf\",\n      parentId: \"root\",\n      path: \"pdf\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route42\n    }\n  };"],
  "mappings": "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",
  "names": ["config", "AxiosError", "errorCode", "AxiosError", "validator", "ExecutionMode", "useMemo", "validator", "validator", "validator", "validator", "validator", "validator", "random", "_", "path", "join", "path", "join", "path", "useEffect", "useRef", "useState", "theme", "createMultiStyleConfigHelpers", "definePartsStyle", "defineMultiStyleConfig", "jsxDEV", "jsxDEV", "jsxDEV", "action", "useState", "useRef", "useEffect", "useContext", "useEffect", "createContext", "jsxDEV", "useContext", "useEffect", "jsxDEV", "cookies", "useMemo", "useNavigate", "useEffect", "useEffect", "useState", "_", "useState", "params", "useEffect", "useEffect", "data", "state", "jsxDEV", "validator", "Button", "jsxDEV", "Button", "jsxDEV", "Fragment", "jsxDEV", "Button", "useNavigate", "Alert", "AlertDescription", "AlertIcon", "Box", "Button", "Fragment", "jsxDEV", "Box", "HStack", "jsxDEV", "jsxDEV", "Box", "HStack", "useEffect", "Badge", "Box", "Divider", "Grid", "GridItem", "Heading", "HStack", "Stack", "jsxDEV", "FormControl", "FormHelperText", "Stack", "useController", "jsxDEV", "FormControl", "FormHelperText", "FormLabel", "useController", "Box", "jsxDEV", "jsxDEV", "useController", "FormControl", "FormLabel", "props", "FormHelperText", "FormControl", "FormLabel", "useController", "jsxDEV", "useRef", "Alert", "Box", "Fragment", "jsxDEV", "jsxDEV", "useNavigate", "Button", "Stack", "Fragment", "jsxDEV", "useNavigate", "Stack", "Button", "useState", "_", "yup", "_", "useState", "_", "jsxDEV", "yupValidationSchema", "useEffect", "Box", "Grid", "GridItem", "Heading", "Badge", "Divider", "Stack", "HStack", "jsxDEV", "_", "state", "Fragment", "jsxDEV", "useNavigate", "route_exports", "Edit", "useNavigate", "useParams", "Box", "Divider", "Grid", "GridItem", "HStack", "Stack", "jsxDEV", "Loading", "Box", "Grid", "GridItem", "Divider", "Stack", "HStack", "useEffect", "Badge", "Box", "Divider", "Grid", "GridItem", "Heading", "HStack", "Stack", "useToast", "yupResolver", "useForm", "useState", "_", "yup", "useCustomValidationSchema", "useState", "_", "jsxDEV", "Success", "useToast", "yupValidationSchema", "useCustomValidationSchema", "useForm", "yupResolver", "useEffect", "Box", "Grid", "GridItem", "Heading", "Badge", "Divider", "Stack", "HStack", "jsxDEV", "FormEdit", "_", "Loading", "state", "Success", "Fragment", "jsxDEV", "Edit", "useNavigate", "useParams", "FormEdit", "loader", "UserRole", "path", "md5", "validator", "md5", "path", "settings", "settings", "knex", "settings", "knex", "config", "config", "path", "join", "mkdir", "path", "join", "settings", "settings", "settings", "AuthService", "config", "_", "loader", "route_exports", "useNavigate", "useEffect", "Badge", "Box", "Divider", "Grid", "GridItem", "Heading", "HStack", "Stack", "useToast", "yupResolver", "useForm", "useState", "yup", "_", "useCustomValidationSchema", "useState", "_", "jsxDEV", "Success", "useToast", "yupValidationSchema", "useCustomValidationSchema", "useForm", "yupResolver", "useEffect", "Box", "Grid", "GridItem", "Heading", "Badge", "Divider", "Stack", "HStack", "jsxDEV", "Success", "Fragment", "jsxDEV", "useNavigate", "action", "loader", "loader", "action", "route_exports", "useNavigate", "useParams", "Icon", "Box", "Grid", "GridItem", "jsxDEV", "Loading", "Box", "Grid", "GridItem", "useMemo", "useRef", "useState", "_", "useState", "Box", "Flex", "Grid", "GridItem", "HStack", "Icon", "IconButton", "useToast", "AccountCancelIcon", "useRef", "AlertDialog", "AlertDialogBody", "AlertDialogContent", "AlertDialogFooter", "AlertDialogHeader", "AlertDialogOverlay", "Button", "jsxDEV", "useRef", "AlertDialog", "AlertDialogOverlay", "AlertDialogContent", "AlertDialogHeader", "AlertDialogBody", "AlertDialogFooter", "Button", "useMemo", "_", "Button", "HStack", "Icon", "jsxDEV", "useRef", "useState", "Icon", "Input", "InputGroup", "jsxDEV", "jsxDEV", "Fragment", "jsxDEV", "Success", "useToast", "useRef", "useState", "useMemo", "object", "Box", "Grid", "GridItem", "Icon", "AccountCancelIcon", "HStack", "IconButton", "Flex", "jsxDEV", "_", "Loading", "state", "Success", "Fragment", "jsxDEV", "useNavigate", "useParams", "Icon", "action", "loader", "loader", "action", "route_exports", "Add", "useNavigate", "useEffect", "Badge", "Box", "Divider", "Grid", "GridItem", "Heading", "HStack", "Stack", "useToast", "yupResolver", "useForm", "useState", "yup", "_", "useCustomValidationSchema", "useState", "_", "jsxDEV", "Success", "useToast", "yupValidationSchema", "useCustomValidationSchema", "useForm", "yupResolver", "useEffect", "Box", "Grid", "GridItem", "Heading", "Badge", "Divider", "Stack", "HStack", "jsxDEV", "Form", "Success", "Fragment", "jsxDEV", "Add", "useNavigate", "Form", "route_exports", "Fragment", "jsxDEV", "Loading", "useState", "Box", "yupResolver", "_", "useForm", "useNavigate", "Box", "Flex", "HStack", "useColorModeValue", "CloseIcon", "Button", "Icon", "IconButton", "useBreakpointValue", "Fragment", "jsxDEV", "Fragment", "jsxDEV", "useNavigate", "Box", "useColorModeValue", "Flex", "HStack", "CloseIcon", "yup", "Box", "Grid", "GridItem", "Heading", "useDisclosure", "_", "FormControl", "FormHelperText", "FormLabel", "useController", "jsxDEV", "Text", "Fragment", "jsxDEV", "Fragment", "jsxDEV", "_", "useDisclosure", "Box", "Grid", "GridItem", "Heading", "useEffect", "useRef", "useState", "Alert", "AlertIcon", "Badge", "Box", "Heading", "useBreakpointValue", "useColorModeValue", "_", "useFormContext", "useWatch", "FixedSizeList", "Fragment", "jsxDEV", "useFormContext", "useWatch", "_", "Box", "Heading", "Badge", "useColorModeValue", "useRef", "useState", "useBreakpointValue", "useEffect", "FixedSizeList", "Alert", "AlertIcon", "Fragment", "jsxDEV", "Success", "useState", "_", "useForm", "yupResolver", "Box", "jsxDEV", "_", "Loading", "state", "Success", "action", "loader", "settings", "loader", "action", "route_exports", "Lists", "useNavigate", "useParams", "Fragment", "jsxDEV", "settings", "Box", "Grid", "GridItem", "Text", "jsxDEV", "Loading", "Box", "Grid", "GridItem", "Text", "Box", "Grid", "GridItem", "Text", "useToast", "yupResolver", "useForm", "yup", "yupValidationSchema", "jsxDEV", "Success", "useToast", "useForm", "yupResolver", "yupValidationSchema", "Box", "Grid", "GridItem", "Text", "jsxDEV", "_", "Loading", "state", "Success", "Fragment", "jsxDEV", "Lists", "useNavigate", "useParams", "settings", "route_exports", "Fragment", "jsxDEV", "route_exports", "Box", "Grid", "GridItem", "jsxDEV", "Loading", "Box", "Grid", "GridItem", "useState", "useState", "useNavigate", "Box", "Flex", "HStack", "Icon", "Input", "InputGroup", "InputLeftElement", "useColorModeValue", "useDisclosure", "MagnifyIcon", "PlusIcon", "TrashIcon", "useRef", "Box", "ListItem", "Skeleton", "VStack", "AccountCancelIcon", "AccountCheckIcon", "FixedSizeList", "Fragment", "jsxDEV", "useRef", "Row", "ListItem", "Box", "AccountCheckIcon", "AccountCancelIcon", "FixedSizeList", "_", "VStack", "Skeleton", "state", "Fragment", "jsxDEV", "useNavigate", "useDisclosure", "useState", "Box", "useColorModeValue", "Flex", "HStack", "TrashIcon", "PlusIcon", "InputGroup", "InputLeftElement", "Icon", "MagnifyIcon", "Input", "useCallback", "useState", "Alert", "AlertDescription", "AlertIcon", "Box", "Collapse", "Grid", "GridItem", "Heading", "Table", "TableContainer", "Tbody", "Td", "Text", "Tr", "useColorModeValue", "Badge", "jsxDEV", "Badge", "Alert", "AlertDescription", "AlertIcon", "jsxDEV", "Alert", "AlertDescription", "AlertIcon", "jsxDEV", "Box", "Grid", "GridItem", "jsxDEV", "Box", "Grid", "GridItem", "Grid", "GridItem", "Heading", "Table", "Tbody", "Td", "Text", "Th", "Thead", "Tr", "jsxDEV", "Table", "Thead", "Tr", "Th", "Grid", "GridItem", "Heading", "Tbody", "Td", "Text", "Fragment", "jsxDEV", "useState", "useCallback", "TableContainer", "Table", "Tbody", "Tr", "Td", "Box", "useColorModeValue", "Grid", "GridItem", "Heading", "Text", "Alert", "AlertIcon", "AlertDescription", "Collapse", "Fragment", "jsxDEV", "Success", "useState", "jsxDEV", "_", "Loading", "state", "Success", "action", "loader", "loader", "action", "route_exports", "useNavigate", "useEffect", "Box", "Grid", "GridItem", "useToast", "yupResolver", "useForm", "yup", "yupValidationSchema", "jsxDEV", "Success", "useToast", "useForm", "yupResolver", "yupValidationSchema", "useEffect", "Box", "Grid", "GridItem", "jsxDEV", "Success", "Fragment", "jsxDEV", "useNavigate", "route_exports", "Skeleton", "VStack", "Fragment", "jsxDEV", "Loading", "useNavigate", "Box", "Card", "CardBody", "Grid", "GridItem", "VStack", "Button", "Badge", "Card", "CardBody", "Grid", "GridItem", "Heading", "HStack", "Icon", "jsxDEV", "jsxDEV", "Card", "CardBody", "Grid", "GridItem", "HStack", "Icon", "Heading", "Badge", "jsxDEV", "Button", "Fragment", "jsxDEV", "Success", "useNavigate", "VStack", "Box", "Card", "CardBody", "Grid", "GridItem", "Fragment", "jsxDEV", "_", "Loading", "state", "Success", "jsxDEV", "route_exports", "useNavigate", "Box", "Grid", "GridItem", "jsxDEV", "Loading", "Box", "Grid", "GridItem", "Box", "Grid", "GridItem", "useToast", "yupResolver", "useForm", "yup", "yupValidationSchema", "jsxDEV", "Success", "useToast", "useForm", "yupResolver", "yupValidationSchema", "Box", "Grid", "GridItem", "jsxDEV", "_", "Loading", "state", "Success", "Fragment", "jsxDEV", "useNavigate", "route_exports", "useNavigate", "Box", "Divider", "Grid", "GridItem", "jsxDEV", "Loading", "Box", "Grid", "GridItem", "Divider", "Box", "Divider", "Grid", "GridItem", "Heading", "useToast", "yupResolver", "useForm", "Checkbox", "Flex", "FormControl", "FormHelperText", "useController", "jsxDEV", "yup", "yupValidationSchema", "jsxDEV", "Success", "useToast", "useForm", "yupResolver", "yupValidationSchema", "Box", "Grid", "GridItem", "Divider", "Heading", "jsxDEV", "_", "Loading", "state", "Success", "Fragment", "jsxDEV", "useNavigate", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "_", "loader", "action", "action", "loader", "loader", "action", "action", "loader", "loader", "action", "route_exports", "Outlet", "useEffect", "useLocation", "useNavigate", "Fragment", "jsxDEV", "useNavigate", "useLocation", "useEffect", "_", "Container", "Fragment", "jsxDEV", "useNavigate", "Box", "Flex", "HStack", "Icon", "IconButton", "Text", "useColorModeValue", "Icon", "IconButton", "jsxDEV", "useColorModeValue", "jsxDEV", "jsxDEV", "useNavigate", "Box", "useColorModeValue", "Flex", "HStack", "IconButton", "Text", "Icon", "jsxDEV", "Container", "Outlet", "action", "loader", "loader", "action", "route_exports", "Outlet", "Container", "jsxDEV", "Container", "Outlet", "route_exports", "Alert", "Box", "Button", "Card", "CardBody", "Container", "Heading", "Icon", "InputLeftElement", "ListItem", "UnorderedList", "VStack", "yupResolver", "yup", "useForm", "Fragment", "jsxDEV", "useForm", "yupResolver", "Box", "Container", "Card", "CardBody", "VStack", "Heading", "Alert", "UnorderedList", "ListItem", "InputLeftElement", "Icon", "Button", "route_exports", "Index", "lazy", "Suspense", "jsxDEV", "lazy", "Index", "Suspense", "mode", "route_exports"]
}
